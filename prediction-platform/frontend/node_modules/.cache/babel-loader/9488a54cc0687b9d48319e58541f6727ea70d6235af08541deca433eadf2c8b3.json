{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\nexport const predictionApi = {\n  getAllPredictions: async () => {\n    const response = await axios.get(`${API_URL}/predictions`);\n    return response.data;\n  },\n  getAIPrediction: async asset => {\n    const response = await axios.post(`${API_URL}/predictions/ai`, {\n      asset: asset\n    });\n    return response.data;\n  },\n  createKOLPrediction: async prediction => {\n    const response = await axios.post(`${API_URL}/predictions/kol`, prediction);\n    return response.data;\n  },\n  supportPrediction: async (predictionId, amount, supportAi) => {\n    const response = await axios.post(`${API_URL}/support`, {\n      predictionId,\n      amount,\n      supportAi\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","predictionApi","getAllPredictions","response","get","data","getAIPrediction","asset","post","createKOLPrediction","prediction","supportPrediction","predictionId","amount","supportAi"],"sources":["/Users/vickyfu/Documents/PredictX/prediction-platform/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Prediction } from '../types';\n\nconst API_URL = 'http://localhost:8000';\n\nexport const predictionApi = {\n  getAllPredictions: async (): Promise<Prediction[]> => {\n    const response = await axios.get(`${API_URL}/predictions`);\n    return response.data;\n  },\n\n  getAIPrediction: async (asset: string): Promise<Prediction> => {\n    const response = await axios.post(`${API_URL}/predictions/ai`, {\n      asset: asset\n    });\n    return response.data;\n  },\n\n  createKOLPrediction: async (prediction: Omit<Prediction, 'id'>): Promise<Prediction> => {\n    const response = await axios.post(`${API_URL}/predictions/kol`, prediction);\n    return response.data;\n  },\n\n  supportPrediction: async (\n    predictionId: number,\n    amount: number,\n    supportAi: boolean\n  ) => {\n    const response = await axios.post(`${API_URL}/support`, {\n      predictionId,\n      amount,\n      supportAi\n    });\n    return response.data;\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,aAAa,GAAG;EAC3BC,iBAAiB,EAAE,MAAAA,CAAA,KAAmC;IACpD,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,cAAc,CAAC;IAC1D,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,eAAe,EAAE,MAAOC,KAAa,IAA0B;IAC7D,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,iBAAiB,EAAE;MAC7DO,KAAK,EAAEA;IACT,CAAC,CAAC;IACF,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDI,mBAAmB,EAAE,MAAOC,UAAkC,IAA0B;IACtF,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,kBAAkB,EAAEU,UAAU,CAAC;IAC3E,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDM,iBAAiB,EAAE,MAAAA,CACjBC,YAAoB,EACpBC,MAAc,EACdC,SAAkB,KACf;IACH,MAAMX,QAAQ,GAAG,MAAMJ,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,UAAU,EAAE;MACtDY,YAAY;MACZC,MAAM;MACNC;IACF,CAAC,CAAC;IACF,OAAOX,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}