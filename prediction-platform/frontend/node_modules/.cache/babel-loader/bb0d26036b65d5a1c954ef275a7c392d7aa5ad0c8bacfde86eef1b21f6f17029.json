{"ast":null,"code":"var _jsxFileName = \"/Users/vickyfu/Documents/AIKOL/prediction-platform/frontend/src/components/PredictionList.tsx\";\nimport React from 'react';\nimport PredictionCard from './PredictionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictionList = () => {\n  const predictions = [{\n    id: 1,\n    predictorType: 'AI',\n    asset: 'BTC',\n    predictedPrice: 50000,\n    confidence: 0.85,\n    reasoning: 'Based on technical analysis...'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"AI Predictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), predictions.filter(p => p.predictorType === 'AI').map(prediction => /*#__PURE__*/_jsxDEV(PredictionCard, {\n        prediction: prediction,\n        isAI: true\n      }, prediction.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"KOL Predictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), predictions.filter(p => p.predictorType === 'KOL').map(prediction => /*#__PURE__*/_jsxDEV(PredictionCard, {\n        prediction: prediction,\n        isAI: false\n      }, prediction.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = PredictionList;\nexport default PredictionList;\nvar _c;\n$RefreshReg$(_c, \"PredictionList\");","map":{"version":3,"names":["React","PredictionCard","jsxDEV","_jsxDEV","PredictionList","predictions","id","predictorType","asset","predictedPrice","confidence","reasoning","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","p","map","prediction","isAI","_c","$RefreshReg$"],"sources":["/Users/vickyfu/Documents/AIKOL/prediction-platform/frontend/src/components/PredictionList.tsx"],"sourcesContent":["import React from 'react';\nimport PredictionCard from './PredictionCard';\nimport { Prediction } from '../types';\n\nconst PredictionList: React.FC = () => {\n  const predictions: Prediction[] = [\n    {\n      id: 1,\n      predictorType: 'AI',\n      asset: 'BTC',\n      predictedPrice: 50000,\n      confidence: 0.85,\n      reasoning: 'Based on technical analysis...'\n    }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n      <div>\n        <h2 className=\"text-xl font-bold mb-4\">AI Predictions</h2>\n        {predictions\n          .filter(p => p.predictorType === 'AI')\n          .map(prediction => (\n            <PredictionCard key={prediction.id} prediction={prediction} isAI={true} />\n          ))}\n      </div>\n      <div>\n        <h2 className=\"text-xl font-bold mb-4\">KOL Predictions</h2>\n        {predictions\n          .filter(p => p.predictorType === 'KOL')\n          .map(prediction => (\n            <PredictionCard key={prediction.id} prediction={prediction} isAI={false} />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PredictionList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EACrC,MAAMC,WAAyB,GAAG,CAChC;IACEC,EAAE,EAAE,CAAC;IACLC,aAAa,EAAE,IAAI;IACnBC,KAAK,EAAE,KAAK;IACZC,cAAc,EAAE,KAAK;IACrBC,UAAU,EAAE,IAAI;IAChBC,SAAS,EAAE;EACb,CAAC,CACF;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,uCAAuC;IAAAC,QAAA,gBACpDV,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAIS,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACzDZ,WAAW,CACTa,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACZ,aAAa,KAAK,IAAI,CAAC,CACrCa,GAAG,CAACC,UAAU,iBACblB,OAAA,CAACF,cAAc;QAAqBoB,UAAU,EAAEA,UAAW;QAACC,IAAI,EAAE;MAAK,GAAlDD,UAAU,CAACf,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CAC1E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNd,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAIS,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC1DZ,WAAW,CACTa,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACZ,aAAa,KAAK,KAAK,CAAC,CACtCa,GAAG,CAACC,UAAU,iBACblB,OAAA,CAACF,cAAc;QAAqBoB,UAAU,EAAEA,UAAW;QAACC,IAAI,EAAE;MAAM,GAAnDD,UAAU,CAACf,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwC,CAC3E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACM,EAAA,GAhCInB,cAAwB;AAkC9B,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}