{"ast":null,"code":"import { getLegacyInjectedName as e } from \"./get-legacy-injected-providers.mjs\";\nconst r = () => {\n    let e = window;\n    if (!e.ethereum) return !1;\n    if (t(window.ethereum, !1)) return !0;\n    if (e.ethereum.providers) for (let r of e.ethereum.providers) if (t(r, !1)) return !0;\n    return !!window.ethereum.isZerion;\n  },\n  t = (r, i) => {\n    if (!r.isMetaMask) return !1;\n    if (r.isMetaMask && !i) return !0;\n    if (r.isBraveWallet && !r._events && !r._state || \"MetaMask\" !== e(r)) return !1;\n    if (r.providers) for (let e of r.providers) if (!t(e)) return !1;\n    return !0;\n  },\n  i = () => {\n    let e = window;\n    if (!e.ethereum) return !1;\n    if (e.ethereum.isCoinbaseWallet) return !0;\n    if (e.ethereum.providers) for (let r of e.ethereum.providers) if (r && r.isCoinbaseWallet) return !0;\n    return !1;\n  };\nexport { i as isCoinbaseWalletInstalled, t as isMetaMask, r as isMetamaskishInstalled };","map":{"version":3,"names":["getLegacyInjectedName","e","r","window","ethereum","t","providers","isZerion","i","isMetaMask","isBraveWallet","_events","_state","isCoinbaseWallet","isCoinbaseWalletInstalled","isMetamaskishInstalled"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/connectors/is-wallet-installed.mjs"],"sourcesContent":["import{getLegacyInjectedName as e}from\"./get-legacy-injected-providers.mjs\";const r=()=>{let e=window;if(!e.ethereum)return!1;if(t(window.ethereum,!1))return!0;if(e.ethereum.providers)for(let r of e.ethereum.providers)if(t(r,!1))return!0;return!!window.ethereum.isZerion},t=(r,i)=>{if(!r.isMetaMask)return!1;if(r.isMetaMask&&!i)return!0;if(r.isBraveWallet&&!r._events&&!r._state||\"MetaMask\"!==e(r))return!1;if(r.providers)for(let e of r.providers)if(!t(e))return!1;return!0},i=()=>{let e=window;if(!e.ethereum)return!1;if(e.ethereum.isCoinbaseWallet)return!0;if(e.ethereum.providers)for(let r of e.ethereum.providers)if(r&&r.isCoinbaseWallet)return!0;return!1};export{i as isCoinbaseWalletInstalled,t as isMetaMask,r as isMetamaskishInstalled};\n"],"mappings":"AAAA,SAAOA,qBAAqB,IAAIC,CAAC,QAAK,qCAAqC;AAAC,MAAMC,CAAC,GAACA,CAAA,KAAI;IAAC,IAAID,CAAC,GAACE,MAAM;IAAC,IAAG,CAACF,CAAC,CAACG,QAAQ,EAAC,OAAM,CAAC,CAAC;IAAC,IAAGC,CAAC,CAACF,MAAM,CAACC,QAAQ,EAAC,CAAC,CAAC,CAAC,EAAC,OAAM,CAAC,CAAC;IAAC,IAAGH,CAAC,CAACG,QAAQ,CAACE,SAAS,EAAC,KAAI,IAAIJ,CAAC,IAAID,CAAC,CAACG,QAAQ,CAACE,SAAS,EAAC,IAAGD,CAAC,CAACH,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,OAAM,CAAC,CAAC;IAAC,OAAM,CAAC,CAACC,MAAM,CAACC,QAAQ,CAACG,QAAQ;EAAA,CAAC;EAACF,CAAC,GAACA,CAACH,CAAC,EAACM,CAAC,KAAG;IAAC,IAAG,CAACN,CAAC,CAACO,UAAU,EAAC,OAAM,CAAC,CAAC;IAAC,IAAGP,CAAC,CAACO,UAAU,IAAE,CAACD,CAAC,EAAC,OAAM,CAAC,CAAC;IAAC,IAAGN,CAAC,CAACQ,aAAa,IAAE,CAACR,CAAC,CAACS,OAAO,IAAE,CAACT,CAAC,CAACU,MAAM,IAAE,UAAU,KAAGX,CAAC,CAACC,CAAC,CAAC,EAAC,OAAM,CAAC,CAAC;IAAC,IAAGA,CAAC,CAACI,SAAS,EAAC,KAAI,IAAIL,CAAC,IAAIC,CAAC,CAACI,SAAS,EAAC,IAAG,CAACD,CAAC,CAACJ,CAAC,CAAC,EAAC,OAAM,CAAC,CAAC;IAAC,OAAM,CAAC,CAAC;EAAA,CAAC;EAACO,CAAC,GAACA,CAAA,KAAI;IAAC,IAAIP,CAAC,GAACE,MAAM;IAAC,IAAG,CAACF,CAAC,CAACG,QAAQ,EAAC,OAAM,CAAC,CAAC;IAAC,IAAGH,CAAC,CAACG,QAAQ,CAACS,gBAAgB,EAAC,OAAM,CAAC,CAAC;IAAC,IAAGZ,CAAC,CAACG,QAAQ,CAACE,SAAS,EAAC,KAAI,IAAIJ,CAAC,IAAID,CAAC,CAACG,QAAQ,CAACE,SAAS,EAAC,IAAGJ,CAAC,IAAEA,CAAC,CAACW,gBAAgB,EAAC,OAAM,CAAC,CAAC;IAAC,OAAM,CAAC,CAAC;EAAA,CAAC;AAAC,SAAOL,CAAC,IAAIM,yBAAyB,EAACT,CAAC,IAAII,UAAU,EAACP,CAAC,IAAIa,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}