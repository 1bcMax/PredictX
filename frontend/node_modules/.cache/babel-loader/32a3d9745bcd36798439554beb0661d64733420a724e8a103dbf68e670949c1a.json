{"ast":null,"code":"import { SiweUnlink as e, SiweLink as t, SiweAuthenticate as i, SiweInit as s } from \"@privy-io/public-api\";\nimport { maybeCreateWalletOnLogin as n } from \"./maybeCreateWalletOnLogin.mjs\";\nimport \"../../utils/getUserEmbeddedEthereumWallet.mjs\";\nimport \"../../utils/getAllUserEmbeddedEthereumWallets.mjs\";\nimport \"../../utils/getUserEmbeddedSolanaWallet.mjs\";\nimport \"../../utils/getAllUserEmbeddedSolanaWallets.mjs\";\nimport \"../../utils/shouldCreateEmbeddedEthWallet.mjs\";\nimport \"../../utils/shouldCreateEmbeddedSolWallet.mjs\";\nclass a {\n  async unlinkWallet(t) {\n    return await this._privyInternal.fetch(e, {\n      body: {\n        address: t\n      }\n    }), (await this._privyInternal.refreshSession()).user;\n  }\n  async linkWithSiwe(e, i, s) {\n    let n = i || this._wallet,\n      a = s || this._preparedMessage;\n    if (!n) throw Error(\"A wallet must be provided in the init step or as an argument to linkWithSiwe\");\n    if (!a) throw Error(\"A message must be generated and signed before being used to link a wallet to privy\");\n    return await this._privyInternal.fetch(t, {\n      body: {\n        message: a,\n        signature: e,\n        chainId: n.chainId,\n        walletClientType: n.walletClientType,\n        connectorType: n.connectorType\n      }\n    }), (await this._privyInternal.refreshSession()).user;\n  }\n  async loginWithSiwe(e, t, s, a, r) {\n    let l = t || this._wallet,\n      o = s || this._preparedMessage;\n    if (!l) throw Error(\"A wallet must be provided in the init step or as an argument to loginWithSiwe\");\n    if (!o) throw Error(\"A message must be generated and signed before being used to login to privy with a wallet\");\n    let d = await this._privyInternal.fetch(i, {\n      body: {\n        signature: e,\n        message: o,\n        chainId: l.chainId,\n        walletClientType: l.walletClientType,\n        connectorType: l.connectorType,\n        mode: a\n      }\n    });\n    await this._privyInternal.session.updateWithTokensResponse(d);\n    let h = await n(this._embedded, d, r?.embedded);\n    return this._privyInternal.callbacks?.setUser?.(h.user), h;\n  }\n  async init(e, t, i) {\n    var n;\n    this._wallet = e;\n    let {\n        nonce: a\n      } = await this._privyInternal.fetch(s, {\n        body: {\n          address: e.address\n        }\n      }),\n      r = `${(n = {\n        chainId: e.chainId.toString().replace(\"eip155:\", \"\"),\n        address: e.address,\n        issuedAt: new Date().toISOString(),\n        statement: \"By signing, you are proving you own this wallet and logging in. This does not initiate a transaction or cost any fees.\",\n        domain: t,\n        nonce: a,\n        uri: i\n      }).domain} wants you to sign in with your Ethereum account:\\n${n.address}\\n\\n${n.statement}\\n\\nURI: ${n.uri}\\nVersion: 1\\nChain ID: ${n.chainId}\\nNonce: ${n.nonce}\\nIssued At: ${n.issuedAt}\\nResources:\\n- https://privy.io`;\n    return this._preparedMessage = r, {\n      nonce: a,\n      message: r\n    };\n  }\n  constructor(e, t) {\n    this._wallet = void 0, this._privyInternal = e, this._embedded = t;\n  }\n}\nexport { a as default };","map":{"version":3,"names":["SiweUnlink","e","SiweLink","t","SiweAuthenticate","i","SiweInit","s","maybeCreateWalletOnLogin","n","a","unlinkWallet","_privyInternal","fetch","body","address","refreshSession","user","linkWithSiwe","_wallet","_preparedMessage","Error","message","signature","chainId","walletClientType","connectorType","loginWithSiwe","r","l","o","d","mode","session","updateWithTokensResponse","h","_embedded","embedded","callbacks","setUser","init","nonce","toString","replace","issuedAt","Date","toISOString","statement","domain","uri","constructor","default"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/node_modules/@privy-io/js-sdk-core/dist/esm/client/auth/SiweApi.mjs"],"sourcesContent":["import{SiweUnlink as e,SiweLink as t,SiweAuthenticate as i,SiweInit as s}from\"@privy-io/public-api\";import{maybeCreateWalletOnLogin as n}from\"./maybeCreateWalletOnLogin.mjs\";import\"../../utils/getUserEmbeddedEthereumWallet.mjs\";import\"../../utils/getAllUserEmbeddedEthereumWallets.mjs\";import\"../../utils/getUserEmbeddedSolanaWallet.mjs\";import\"../../utils/getAllUserEmbeddedSolanaWallets.mjs\";import\"../../utils/shouldCreateEmbeddedEthWallet.mjs\";import\"../../utils/shouldCreateEmbeddedSolWallet.mjs\";class a{async unlinkWallet(t){return await this._privyInternal.fetch(e,{body:{address:t}}),(await this._privyInternal.refreshSession()).user}async linkWithSiwe(e,i,s){let n=i||this._wallet,a=s||this._preparedMessage;if(!n)throw Error(\"A wallet must be provided in the init step or as an argument to linkWithSiwe\");if(!a)throw Error(\"A message must be generated and signed before being used to link a wallet to privy\");return await this._privyInternal.fetch(t,{body:{message:a,signature:e,chainId:n.chainId,walletClientType:n.walletClientType,connectorType:n.connectorType}}),(await this._privyInternal.refreshSession()).user}async loginWithSiwe(e,t,s,a,r){let l=t||this._wallet,o=s||this._preparedMessage;if(!l)throw Error(\"A wallet must be provided in the init step or as an argument to loginWithSiwe\");if(!o)throw Error(\"A message must be generated and signed before being used to login to privy with a wallet\");let d=await this._privyInternal.fetch(i,{body:{signature:e,message:o,chainId:l.chainId,walletClientType:l.walletClientType,connectorType:l.connectorType,mode:a}});await this._privyInternal.session.updateWithTokensResponse(d);let h=await n(this._embedded,d,r?.embedded);return this._privyInternal.callbacks?.setUser?.(h.user),h}async init(e,t,i){var n;this._wallet=e;let{nonce:a}=await this._privyInternal.fetch(s,{body:{address:e.address}}),r=`${(n={chainId:e.chainId.toString().replace(\"eip155:\",\"\"),address:e.address,issuedAt:(new Date).toISOString(),statement:\"By signing, you are proving you own this wallet and logging in. This does not initiate a transaction or cost any fees.\",domain:t,nonce:a,uri:i}).domain} wants you to sign in with your Ethereum account:\\n${n.address}\\n\\n${n.statement}\\n\\nURI: ${n.uri}\\nVersion: 1\\nChain ID: ${n.chainId}\\nNonce: ${n.nonce}\\nIssued At: ${n.issuedAt}\\nResources:\\n- https://privy.io`;return this._preparedMessage=r,{nonce:a,message:r}}constructor(e,t){this._wallet=void 0,this._privyInternal=e,this._embedded=t}}export{a as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}