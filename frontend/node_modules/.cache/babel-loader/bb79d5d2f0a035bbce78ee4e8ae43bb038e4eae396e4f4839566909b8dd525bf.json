{"ast":null,"code":"import { SiweLinkSmartWallet as n, SiweInit as t } from \"@privy-io/public-api\";\nclass e {\n  async link(t, e, i) {\n    return await this._privyInternal.fetch(n, {\n      body: {\n        message: t,\n        signature: e,\n        smart_wallet_type: i\n      }\n    }), (await this._privyInternal.refreshSession()).user;\n  }\n  async init(n) {\n    var e;\n    let {\n      nonce: i\n    } = await this._privyInternal.fetch(t, {\n      body: {\n        address: n.address\n      }\n    });\n    return {\n      nonce: i,\n      message: `${(e = {\n        chainId: n.chainId.toString().replace(\"eip155:\", \"\"),\n        address: n.address,\n        issuedAt: new Date().toISOString(),\n        statement: \"By signing, you are proving you own this wallet and logging in. This does not initiate a transaction or cost any fees.\",\n        domain: \"privy.io\",\n        uri: \"https://auth.privy.io\",\n        nonce: i\n      }).domain} wants you to sign in with your Ethereum account:\\n${e.address}\\n\\n${e.statement}\\n\\nURI: ${e.uri}\\nVersion: 1\\nChain ID: ${e.chainId}\\nNonce: ${e.nonce}\\nIssued At: ${e.issuedAt}\\nResources:\\n- https://privy.io`\n    };\n  }\n  constructor(n) {\n    this._privyInternal = n;\n  }\n}\nexport { e as default };","map":{"version":3,"names":["SiweLinkSmartWallet","n","SiweInit","t","e","link","i","_privyInternal","fetch","body","message","signature","smart_wallet_type","refreshSession","user","init","nonce","address","chainId","toString","replace","issuedAt","Date","toISOString","statement","domain","uri","constructor","default"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/node_modules/@privy-io/js-sdk-core/dist/esm/client/auth/SmartWalletApi.mjs"],"sourcesContent":["import{SiweLinkSmartWallet as n,SiweInit as t}from\"@privy-io/public-api\";class e{async link(t,e,i){return await this._privyInternal.fetch(n,{body:{message:t,signature:e,smart_wallet_type:i}}),(await this._privyInternal.refreshSession()).user}async init(n){var e;let{nonce:i}=await this._privyInternal.fetch(t,{body:{address:n.address}});return{nonce:i,message:`${(e={chainId:n.chainId.toString().replace(\"eip155:\",\"\"),address:n.address,issuedAt:(new Date).toISOString(),statement:\"By signing, you are proving you own this wallet and logging in. This does not initiate a transaction or cost any fees.\",domain:\"privy.io\",uri:\"https://auth.privy.io\",nonce:i}).domain} wants you to sign in with your Ethereum account:\\n${e.address}\\n\\n${e.statement}\\n\\nURI: ${e.uri}\\nVersion: 1\\nChain ID: ${e.chainId}\\nNonce: ${e.nonce}\\nIssued At: ${e.issuedAt}\\nResources:\\n- https://privy.io`}}constructor(n){this._privyInternal=n}}export{e as default};\n"],"mappings":"AAAA,SAAOA,mBAAmB,IAAIC,CAAC,EAACC,QAAQ,IAAIC,CAAC,QAAK,sBAAsB;AAAC,MAAMC,CAAC;EAAC,MAAMC,IAAIA,CAACF,CAAC,EAACC,CAAC,EAACE,CAAC,EAAC;IAAC,OAAO,MAAM,IAAI,CAACC,cAAc,CAACC,KAAK,CAACP,CAAC,EAAC;MAACQ,IAAI,EAAC;QAACC,OAAO,EAACP,CAAC;QAACQ,SAAS,EAACP,CAAC;QAACQ,iBAAiB,EAACN;MAAC;IAAC,CAAC,CAAC,EAAC,CAAC,MAAM,IAAI,CAACC,cAAc,CAACM,cAAc,CAAC,CAAC,EAAEC,IAAI;EAAA;EAAC,MAAMC,IAAIA,CAACd,CAAC,EAAC;IAAC,IAAIG,CAAC;IAAC,IAAG;MAACY,KAAK,EAACV;IAAC,CAAC,GAAC,MAAM,IAAI,CAACC,cAAc,CAACC,KAAK,CAACL,CAAC,EAAC;MAACM,IAAI,EAAC;QAACQ,OAAO,EAAChB,CAAC,CAACgB;MAAO;IAAC,CAAC,CAAC;IAAC,OAAM;MAACD,KAAK,EAACV,CAAC;MAACI,OAAO,EAAC,GAAG,CAACN,CAAC,GAAC;QAACc,OAAO,EAACjB,CAAC,CAACiB,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,SAAS,EAAC,EAAE,CAAC;QAACH,OAAO,EAAChB,CAAC,CAACgB,OAAO;QAACI,QAAQ,EAAE,IAAIC,IAAI,CAAD,CAAC,CAAEC,WAAW,CAAC,CAAC;QAACC,SAAS,EAAC,wHAAwH;QAACC,MAAM,EAAC,UAAU;QAACC,GAAG,EAAC,uBAAuB;QAACV,KAAK,EAACV;MAAC,CAAC,EAAEmB,MAAM,sDAAsDrB,CAAC,CAACa,OAAO,OAAOb,CAAC,CAACoB,SAAS,YAAYpB,CAAC,CAACsB,GAAG,2BAA2BtB,CAAC,CAACc,OAAO,YAAYd,CAAC,CAACY,KAAK,gBAAgBZ,CAAC,CAACiB,QAAQ;IAAkC,CAAC;EAAA;EAACM,WAAWA,CAAC1B,CAAC,EAAC;IAAC,IAAI,CAACM,cAAc,GAACN,CAAC;EAAA;AAAC;AAAC,SAAOG,CAAC,IAAIwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}