{"ast":null,"code":"import { PrivyClientError as t, formatApiError as e } from \"../errors.mjs\";\nimport { passwordlessAuthenticatePath as a, passwordlessLinkPath as i, passwordlessInitPath as s, updateEmailPath as o } from \"../paths.mjs\";\nimport { getUiHeader as h } from \"./getUiHeader.mjs\";\nimport \"ofetch\";\nclass m {\n  async authenticate() {\n    if (!this.api) throw new t(\"Auth flow has no API instance\");\n    if (!this.meta.email || !this.meta.emailCode) throw new t(\"Email and email code must be set prior to calling authenticate.\");\n    try {\n      return await this.api.post(a, {\n        email: this.meta.email,\n        code: this.meta.emailCode,\n        mode: this.meta.disableSignup ? \"no-signup\" : \"login-or-sign-up\"\n      });\n    } catch (t) {\n      throw e(t);\n    }\n  }\n  async link() {\n    if (!this.api) throw new t(\"Auth flow has no API instance\");\n    if (!this.meta.email || !this.meta.emailCode) throw new t(\"Email and email code must be set prior to calling authenticate.\");\n    try {\n      return await this.api.post(i, {\n        email: this.meta.email,\n        code: this.meta.emailCode\n      });\n    } catch (t) {\n      throw e(t);\n    }\n  }\n  async sendCodeEmail({\n    email: a,\n    captchaToken: i,\n    withPrivyUi: o\n  }) {\n    if (!this.api) throw new t(\"Auth flow has no API instance\");\n    if (a && (this.meta.email = a), i && (this.meta.captchaToken = i), !this.meta.email) throw new t(\"Email must be set when initialzing authentication.\");\n    let m = h(o);\n    try {\n      return await this.api.post(s, {\n        email: this.meta.email,\n        token: this.meta.captchaToken\n      }, {\n        headers: {\n          ...m\n        }\n      });\n    } catch (t) {\n      throw e(t);\n    }\n  }\n  constructor({\n    email: t,\n    captchaToken: e,\n    disableSignup: a\n  }) {\n    this.meta = {\n      email: t,\n      captchaToken: e,\n      disableSignup: a ?? !1\n    };\n  }\n}\nclass n extends m {\n  async link() {\n    if (!this.api) throw new t(\"Auth flow has no API instance\");\n    if (!this.meta.email || !this.meta.emailCode || !this.meta.oldAddress) throw new t(\"Email, email code, and an old email address must be set prior to calling update.\");\n    try {\n      return await this.api.post(o, {\n        oldAddress: this.meta.oldAddress,\n        newAddress: this.meta.email,\n        code: this.meta.emailCode\n      });\n    } catch (t) {\n      throw e(t);\n    }\n  }\n  constructor(t, e, a) {\n    super({\n      email: e,\n      captchaToken: a\n    }), this.meta = {\n      email: e,\n      captchaToken: a,\n      oldAddress: t,\n      disableSignup: !1\n    };\n  }\n}\nexport { m as EmailFlow, n as UpdateEmailFlow };","map":{"version":3,"names":["PrivyClientError","t","formatApiError","e","passwordlessAuthenticatePath","a","passwordlessLinkPath","i","passwordlessInitPath","s","updateEmailPath","o","getUiHeader","h","m","authenticate","api","meta","email","emailCode","post","code","mode","disableSignup","link","sendCodeEmail","captchaToken","withPrivyUi","token","headers","constructor","n","oldAddress","newAddress","EmailFlow","UpdateEmailFlow"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/auth-flows/email.mjs"],"sourcesContent":["import{PrivyClientError as t,formatApiError as e}from\"../errors.mjs\";import{passwordlessAuthenticatePath as a,passwordlessLinkPath as i,passwordlessInitPath as s,updateEmailPath as o}from\"../paths.mjs\";import{getUiHeader as h}from\"./getUiHeader.mjs\";import\"ofetch\";class m{async authenticate(){if(!this.api)throw new t(\"Auth flow has no API instance\");if(!this.meta.email||!this.meta.emailCode)throw new t(\"Email and email code must be set prior to calling authenticate.\");try{return await this.api.post(a,{email:this.meta.email,code:this.meta.emailCode,mode:this.meta.disableSignup?\"no-signup\":\"login-or-sign-up\"})}catch(t){throw e(t)}}async link(){if(!this.api)throw new t(\"Auth flow has no API instance\");if(!this.meta.email||!this.meta.emailCode)throw new t(\"Email and email code must be set prior to calling authenticate.\");try{return await this.api.post(i,{email:this.meta.email,code:this.meta.emailCode})}catch(t){throw e(t)}}async sendCodeEmail({email:a,captchaToken:i,withPrivyUi:o}){if(!this.api)throw new t(\"Auth flow has no API instance\");if(a&&(this.meta.email=a),i&&(this.meta.captchaToken=i),!this.meta.email)throw new t(\"Email must be set when initialzing authentication.\");let m=h(o);try{return await this.api.post(s,{email:this.meta.email,token:this.meta.captchaToken},{headers:{...m}})}catch(t){throw e(t)}}constructor({email:t,captchaToken:e,disableSignup:a}){this.meta={email:t,captchaToken:e,disableSignup:a??!1}}}class n extends m{async link(){if(!this.api)throw new t(\"Auth flow has no API instance\");if(!this.meta.email||!this.meta.emailCode||!this.meta.oldAddress)throw new t(\"Email, email code, and an old email address must be set prior to calling update.\");try{return await this.api.post(o,{oldAddress:this.meta.oldAddress,newAddress:this.meta.email,code:this.meta.emailCode})}catch(t){throw e(t)}}constructor(t,e,a){super({email:e,captchaToken:a}),this.meta={email:e,captchaToken:a,oldAddress:t,disableSignup:!1}}}export{m as EmailFlow,n as UpdateEmailFlow};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}