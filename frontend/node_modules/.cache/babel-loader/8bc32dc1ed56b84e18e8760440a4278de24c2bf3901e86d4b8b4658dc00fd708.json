{"ast":null,"code":"import { BigNumber as e } from \"@ethersproject/bignumber\";\nconst i = i => e.from(i);\nfunction t(e) {\n  if (\"number\" == typeof e || \"bigint\" == typeof e || \"string\" == typeof e) return e;\n  if (\"function\" == typeof e.toHexString) return e.toHexString();\n  throw Error(`Expected numeric value but received ${e}`);\n}\nfunction r(e) {\n  let t = {};\n  return void 0 !== e.to && (t.to = e.to), void 0 !== e.data && (t.data = e.data), void 0 !== e.chainId && (t.chainId = e.chainId), void 0 !== e.type && (t.type = e.type), void 0 !== e.accessList && (t.accessList = e.accessList), void 0 !== e.nonce && (t.nonce = i(e.nonce).toNumber()), void 0 !== e.gasLimit && (t.gasLimit = i(e.gasLimit)), void 0 !== e.gasPrice && (t.gasPrice = i(e.gasPrice)), void 0 !== e.value && (t.value = i(e.value)), void 0 !== e.maxFeePerGas && (t.maxFeePerGas = i(e.maxFeePerGas)), void 0 !== e.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = i(e.maxPriorityFeePerGas)), t;\n}\nexport { i as QuantityToBigNumber, t as convertBigNumberish, r as toEthersUnsignedTransaction };","map":{"version":3,"names":["BigNumber","e","i","from","t","toHexString","Error","r","to","data","chainId","type","accessList","nonce","toNumber","gasLimit","gasPrice","value","maxFeePerGas","maxPriorityFeePerGas","QuantityToBigNumber","convertBigNumberish","toEthersUnsignedTransaction"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/node_modules/@privy-io/js-sdk-core/dist/esm/embedded/utils/ethers.mjs"],"sourcesContent":["import{BigNumber as e}from\"@ethersproject/bignumber\";const i=i=>e.from(i);function t(e){if(\"number\"==typeof e||\"bigint\"==typeof e||\"string\"==typeof e)return e;if(\"function\"==typeof e.toHexString)return e.toHexString();throw Error(`Expected numeric value but received ${e}`)}function r(e){let t={};return void 0!==e.to&&(t.to=e.to),void 0!==e.data&&(t.data=e.data),void 0!==e.chainId&&(t.chainId=e.chainId),void 0!==e.type&&(t.type=e.type),void 0!==e.accessList&&(t.accessList=e.accessList),void 0!==e.nonce&&(t.nonce=i(e.nonce).toNumber()),void 0!==e.gasLimit&&(t.gasLimit=i(e.gasLimit)),void 0!==e.gasPrice&&(t.gasPrice=i(e.gasPrice)),void 0!==e.value&&(t.value=i(e.value)),void 0!==e.maxFeePerGas&&(t.maxFeePerGas=i(e.maxFeePerGas)),void 0!==e.maxPriorityFeePerGas&&(t.maxPriorityFeePerGas=i(e.maxPriorityFeePerGas)),t}export{i as QuantityToBigNumber,t as convertBigNumberish,r as toEthersUnsignedTransaction};\n"],"mappings":"AAAA,SAAOA,SAAS,IAAIC,CAAC,QAAK,0BAA0B;AAAC,MAAMC,CAAC,GAACA,CAAC,IAAED,CAAC,CAACE,IAAI,CAACD,CAAC,CAAC;AAAC,SAASE,CAACA,CAACH,CAAC,EAAC;EAAC,IAAG,QAAQ,IAAE,OAAOA,CAAC,IAAE,QAAQ,IAAE,OAAOA,CAAC,IAAE,QAAQ,IAAE,OAAOA,CAAC,EAAC,OAAOA,CAAC;EAAC,IAAG,UAAU,IAAE,OAAOA,CAAC,CAACI,WAAW,EAAC,OAAOJ,CAAC,CAACI,WAAW,CAAC,CAAC;EAAC,MAAMC,KAAK,CAAC,uCAAuCL,CAAC,EAAE,CAAC;AAAA;AAAC,SAASM,CAACA,CAACN,CAAC,EAAC;EAAC,IAAIG,CAAC,GAAC,CAAC,CAAC;EAAC,OAAO,KAAK,CAAC,KAAGH,CAAC,CAACO,EAAE,KAAGJ,CAAC,CAACI,EAAE,GAACP,CAAC,CAACO,EAAE,CAAC,EAAC,KAAK,CAAC,KAAGP,CAAC,CAACQ,IAAI,KAAGL,CAAC,CAACK,IAAI,GAACR,CAAC,CAACQ,IAAI,CAAC,EAAC,KAAK,CAAC,KAAGR,CAAC,CAACS,OAAO,KAAGN,CAAC,CAACM,OAAO,GAACT,CAAC,CAACS,OAAO,CAAC,EAAC,KAAK,CAAC,KAAGT,CAAC,CAACU,IAAI,KAAGP,CAAC,CAACO,IAAI,GAACV,CAAC,CAACU,IAAI,CAAC,EAAC,KAAK,CAAC,KAAGV,CAAC,CAACW,UAAU,KAAGR,CAAC,CAACQ,UAAU,GAACX,CAAC,CAACW,UAAU,CAAC,EAAC,KAAK,CAAC,KAAGX,CAAC,CAACY,KAAK,KAAGT,CAAC,CAACS,KAAK,GAACX,CAAC,CAACD,CAAC,CAACY,KAAK,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,KAAGb,CAAC,CAACc,QAAQ,KAAGX,CAAC,CAACW,QAAQ,GAACb,CAAC,CAACD,CAAC,CAACc,QAAQ,CAAC,CAAC,EAAC,KAAK,CAAC,KAAGd,CAAC,CAACe,QAAQ,KAAGZ,CAAC,CAACY,QAAQ,GAACd,CAAC,CAACD,CAAC,CAACe,QAAQ,CAAC,CAAC,EAAC,KAAK,CAAC,KAAGf,CAAC,CAACgB,KAAK,KAAGb,CAAC,CAACa,KAAK,GAACf,CAAC,CAACD,CAAC,CAACgB,KAAK,CAAC,CAAC,EAAC,KAAK,CAAC,KAAGhB,CAAC,CAACiB,YAAY,KAAGd,CAAC,CAACc,YAAY,GAAChB,CAAC,CAACD,CAAC,CAACiB,YAAY,CAAC,CAAC,EAAC,KAAK,CAAC,KAAGjB,CAAC,CAACkB,oBAAoB,KAAGf,CAAC,CAACe,oBAAoB,GAACjB,CAAC,CAACD,CAAC,CAACkB,oBAAoB,CAAC,CAAC,EAACf,CAAC;AAAA;AAAC,SAAOF,CAAC,IAAIkB,mBAAmB,EAAChB,CAAC,IAAIiB,mBAAmB,EAACd,CAAC,IAAIe,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}