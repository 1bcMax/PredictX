{"ast":null,"code":"import { defaultClientConfig as e } from \"./configuration/defaultClientConfig.mjs\";\nimport { toCustomLoginMethodConfig as n } from \"./configuration/login-methods.mjs\";\nimport { toWalletListConfig as o } from \"./configuration/wallets.mjs\";\nimport { DEFAULT_SUPPORTED_CHAINS as t } from \"./connectors/chains/index.mjs\";\nimport { mainnet as a } from \"./connectors/chains/mainnet.mjs\";\nimport { addPrivyRpcToChain as l } from \"./connectors/chains/utils.mjs\";\nimport { SOLANA_MAINNET_RPC_URL as i, SOLANA_TESTNET_RPC_URL as s, SOLANA_DEVNET_RPC_URL as r } from \"./lib/solana/index.mjs\";\nimport { generatePalette as c } from \"./theme.mjs\";\nimport \"./constants.mjs\";\nimport \"./connectors/chains/arbitrum.mjs\";\nimport \"./connectors/chains/arbitrumSepolia.mjs\";\nimport \"./connectors/chains/avalanche.mjs\";\nimport \"./connectors/chains/avalancheFuji.mjs\";\nimport \"./connectors/chains/base.mjs\";\nimport \"./connectors/chains/baseSepolia.mjs\";\nimport \"./connectors/chains/berachainArtio.mjs\";\nimport \"./connectors/chains/celo.mjs\";\nimport \"./connectors/chains/celoAlfajores.mjs\";\nimport \"./connectors/chains/filecoin.mjs\";\nimport \"./connectors/chains/filecoinCalibration.mjs\";\nimport \"./connectors/chains/garnetHolesky.mjs\";\nimport \"./connectors/chains/holesky.mjs\";\nimport \"./connectors/chains/linea.mjs\";\nimport \"./connectors/chains/lineaTestnet.mjs\";\nimport \"./connectors/chains/lukso.mjs\";\nimport \"./connectors/chains/optimism.mjs\";\nimport \"./connectors/chains/optimismSepolia.mjs\";\nimport \"./connectors/chains/polygon.mjs\";\nimport \"./connectors/chains/polygonAmoy.mjs\";\nimport \"./connectors/chains/redstone.mjs\";\nimport \"./connectors/chains/sepolia.mjs\";\nimport \"./connectors/chains/zora.mjs\";\nimport \"./connectors/chains/zoraSepolia.mjs\";\nimport \"./connectors/chains/zoraTestnet.mjs\";\nimport \"tinycolor2\";\nfunction d(t, a, l, d) {\n  let h,\n    m,\n    u,\n    g,\n    f,\n    C,\n    b,\n    y,\n    w,\n    W,\n    A,\n    M,\n    O,\n    j,\n    U,\n    k = l ? console.warn : () => {};\n  a?.loginMethods ? (h = a.loginMethods.includes(\"email\"), m = a.loginMethods.includes(\"sms\"), g = a.loginMethods.includes(\"wallet\"), f = a.loginMethods.includes(\"google\"), C = a.loginMethods.includes(\"twitter\"), b = a.loginMethods.includes(\"discord\"), w = a.loginMethods.includes(\"spotify\"), W = a.loginMethods.includes(\"instagram\"), y = a.loginMethods.includes(\"tiktok\"), M = a.loginMethods.includes(\"github\"), A = a.loginMethods.includes(\"linkedin\"), O = a.loginMethods.includes(\"apple\"), j = a.loginMethods.includes(\"farcaster\"), U = a.loginMethods.includes(\"telegram\")) : (h = t.emailAuth, m = t.smsAuth, g = t.walletAuth || t.solanaWalletAuth, f = t.googleOAuth, C = t.twitterOAuth, b = t.discordOAuth, M = t.githubOAuth, w = t.spotifyOAuth, W = t.instagramOAuth, y = t.tiktokOAuth, A = t.linkedinOAuth, O = t.appleOAuth, j = t.farcasterAuth, U = t.telegramAuth), \"undefined\" != typeof window && \"function\" != typeof window.PublicKeyCredential ? u = !1 : t.passkeyAuth && (u = !0);\n  let v = [h, m].filter(Boolean),\n    S = [f, C, b, M, w, W, y, A, O, j, U].filter(Boolean),\n    x = [g].filter(Boolean),\n    L = [u && t.passkeysForSignupEnabled].filter(Boolean);\n  if (v.length + S.length + x.length + L.length === 0) throw Error(\"You must enable at least one login method\");\n  let P = void 0 !== a?.appearance?.showWalletLoginFirst ? a?.appearance?.showWalletLoginFirst : t.showWalletLoginFirst;\n  P && 0 === x.length ? (k(\"You should only enable `showWalletLoginFirst` when `wallet` logins are also enabled. `showWalletLoginFirst` has been set to false\"), P = !1) : P || S.length + v.length !== 0 || (k(\"You should only disable `showWalletLoginFirst` when `email`, `sms`, or social logins are also enabled. `showWalletLoginFirst` has been set to true\"), P = !0);\n  let F = a?.externalWallets?.walletConnect?.enabled ?? !0;\n  a?.loginMethods && a.loginMethodsAndOrder && k(\"You should only configure one of `loginMethods` or `loginMethodsAndOrder`\");\n  let E = o({\n      input: a?.appearance?.walletList,\n      overrides: a?.loginMethodsAndOrder\n    }),\n    T = n({\n      input: a?.loginMethodsAndOrder\n    }),\n    I = a?.intl?.defaultCountry ?? \"US\",\n    {\n      chains: q,\n      defaultChain: R\n    } = p({\n      supportedChains: a?.supportedChains,\n      defaultChainFromConfig: a?.defaultChain\n    }),\n    D = !!a?.defaultChain,\n    H = a?.customAuth?.getCustomAccessToken && !1 !== a?.customAuth?.enabled,\n    B = a?.embeddedWallets?.requireUserPasswordOnCreate,\n    Y = a?.embeddedWallets?.createOnLogin,\n    z = H ? \"all-users\" : t.embeddedWalletConfig.createOnLogin,\n    K = a?.solanaClusters ?? [];\n  return t.solanaWalletAuth && !a?.externalWallets?.solana?.connectors && console.warn(\"App configuration has Solana wallet login enabled, but no Solana wallet connectors have been passed to Privy. Make sure to pass Solana connectors to the `config.externalWallets.solana.connectors` field of the `PrivyProvider`\"), {\n    id: t.id,\n    name: t.name,\n    allowlistConfig: t.allowlistConfig,\n    legacyWalletUiConfig: t.legacyWalletUiConfig,\n    appearance: {\n      logo: a?.appearance?.logo ?? t.logoUrl,\n      landingHeader: a?.appearance?.landingHeader ?? e.appearance.landingHeader,\n      loginMessage: \"string\" == typeof a?.appearance?.loginMessage ? a?.appearance?.loginMessage.slice(0, 100) : a?.appearance?.loginMessage,\n      footerLogo: a?.appearance?.footerLogo,\n      palette: c({\n        backgroundTheme: a?.appearance?.theme ?? e.appearance.theme,\n        accentHex: a?.appearance?.accentColor ?? t.accentColor ?? e.appearance.accentColor\n      }),\n      loginGroupPriority: P ? \"web3-first\" : \"web2-first\",\n      hideDirectWeb2Inputs: !!a?.appearance?.hideDirectWeb2Inputs,\n      walletList: E,\n      walletChainType: a?.appearance?.walletChainType ?? (({\n        evmWalletAuth: e,\n        solanaWalletAuth: n\n      }) => e && n ? \"ethereum-and-solana\" : e ? \"ethereum-only\" : n ? \"solana-only\" : \"ethereum-only\")({\n        evmWalletAuth: t.walletAuth ?? !1,\n        solanaWalletAuth: t.solanaWalletAuth ?? !1\n      })\n    },\n    loginMethods: {\n      wallet: g,\n      email: h,\n      sms: m,\n      passkey: u,\n      google: f,\n      twitter: C,\n      discord: b,\n      github: M,\n      spotify: w,\n      instagram: W,\n      tiktok: y,\n      linkedin: A,\n      apple: O,\n      farcaster: j,\n      telegram: U\n    },\n    disablePlusEmails: t.disablePlusEmails,\n    loginMethodsAndOrder: T,\n    legal: {\n      termsAndConditionsUrl: a?.legal?.termsAndConditionsUrl ?? t.termsAndConditionsUrl,\n      privacyPolicyUrl: a?.legal?.privacyPolicyUrl ?? t.privacyPolicyUrl,\n      requireUsersAcceptTerms: t.requireUsersAcceptTerms ?? !1\n    },\n    walletConnectCloudProjectId: a?.walletConnectCloudProjectId ?? t.walletConnectCloudProjectId ?? e.walletConnectCloudProjectId,\n    rpcConfig: {\n      rpcUrls: {},\n      rpcTimeouts: {}\n    },\n    chains: q,\n    solanaClusters: {\n      \"mainnet-beta\": K.find(e => \"mainnet-beta\" === e.name)?.rpcUrl || i,\n      testnet: K.find(e => \"testnet\" === e.name)?.rpcUrl || s,\n      devnet: K.find(e => \"devnet\" === e.name)?.rpcUrl || r\n    },\n    defaultChain: R,\n    intl: {\n      defaultCountry: I\n    },\n    shouldEnforceDefaultChainOnConnect: D,\n    captchaEnabled: t.captchaEnabled ?? e.captchaEnabled,\n    captchaSiteKey: t.captchaSiteKey,\n    externalWallets: {\n      coinbaseWallet: {\n        connectionOptions: a?.externalWallets?.coinbaseWallet?.connectionOptions ?? e.externalWallets.coinbaseWallet.connectionOptions\n      },\n      walletConnect: {\n        enabled: F\n      },\n      solana: {\n        connectors: a?.externalWallets?.solana?.connectors\n      }\n    },\n    embeddedWallets: {\n      requireUserOwnedRecoveryOnCreate: B ?? (!H && t.embeddedWalletConfig.requireUserOwnedRecoveryOnCreate),\n      userOwnedRecoveryOptions: H ? [\"user-passcode\"] : t.embeddedWalletConfig.userOwnedRecoveryOptions,\n      priceDisplay: {\n        primary: \"fiat-currency\",\n        secondary: \"native-token\"\n      },\n      ethereum: {\n        createOnLogin: Y ?? a?.embeddedWallets?.ethereum?.createOnLogin ?? z\n      },\n      solana: {\n        createOnLogin: a?.embeddedWallets?.solana?.createOnLogin ?? \"off\"\n      },\n      showWalletUIs: a?.embeddedWallets?.showWalletUIs ?? t.enforceWalletUis ?? !0,\n      extendedCalldataDecoding: a?.embeddedWallets?.extendedCalldataDecoding ?? !1,\n      transactionScanning: {\n        enabled: a?.embeddedWallets?.transactionScanning?.enabled ?? !1,\n        domain: a?.embeddedWallets?.transactionScanning?.domain ?? d ?? \"https://auth.privy.io\"\n      }\n    },\n    mfa: {\n      methods: t.mfaMethods ?? [],\n      noPromptOnMfaRequired: a?.mfa?.noPromptOnMfaRequired ?? !1\n    },\n    passkeys: {\n      shouldUnlinkOnUnenrollMfa: a?.passkeys?.shouldUnlinkOnUnenrollMfa,\n      shouldUnenrollMfaOnUnlink: a?.passkeys?.shouldUnenrollMfaOnUnlink\n    },\n    customAuth: H ? {\n      enabled: !0,\n      ...a.customAuth\n    } : void 0,\n    loginConfig: {\n      telegramAuthConfiguration: t.telegramAuthConfiguration,\n      passkeysForSignupEnabled: t.passkeysForSignupEnabled\n    },\n    headless: !!a?.headless,\n    render: {\n      standalone: a?._render?.standalone ?? e._render.standalone\n    },\n    fundingConfig: t.fundingConfig,\n    fundingMethodConfig: {\n      ...(a?.fundingMethodConfig ?? e.fundingMethodConfig),\n      moonpay: {\n        ...(a?.fundingMethodConfig?.moonpay ?? e.fundingMethodConfig.moonpay),\n        useSandbox: a?.fundingMethodConfig?.moonpay.useSandbox ?? a?.fiatOnRamp?.useSandbox ?? e.fundingMethodConfig.moonpay.useSandbox\n      }\n    }\n  };\n}\nfunction h(e) {\n  if (!e) return {};\n  let {\n    appearance: n,\n    supportedChains: o,\n    defaultChain: t,\n    externalWallets: a,\n    ...l\n  } = e;\n  return {\n    ...l,\n    ...(o ? {\n      supportedChains: o.map(e => e.id)\n    } : void 0),\n    ...(t ? {\n      defaultChain: t.id\n    } : void 0),\n    ...(a ? {\n      walletConnect: a.walletConnect,\n      coinbaseWallet: a.coinbaseWallet,\n      solana: {\n        connectors: a.solana?.connectors?.get().map(e => e.walletClientType)\n      }\n    } : void 0)\n  };\n}\nfunction p({\n  supportedChains: e,\n  defaultChainFromConfig: n\n}) {\n  let o;\n  if (e) {\n    if (0 === e.length) throw Error(\"`supportedChains` must contain at least one chain\");\n    o = e.map(e => {\n      if (e.rpcUrls.privyWalletOverride) return e;\n      let n = t.find(n => n.id === e.id),\n        o = n?.rpcUrls.privy?.http[0];\n      return o ? l(e, o) : e;\n    });\n  } else o = [...t];\n  let i = e ? o[0] : a,\n    s = n ?? i;\n  if (!o.find(e => e.id === s.id)) throw Error(\"`defaultChain` must be included in `supportedChains`\");\n  return {\n    chains: o,\n    defaultChain: s\n  };\n}\nexport { p as buildChainsAndDefaultChain, d as generateAppConfig, h as generateClientConfigAnalyticsPayload };","map":{"version":3,"names":["defaultClientConfig","e","toCustomLoginMethodConfig","n","toWalletListConfig","o","DEFAULT_SUPPORTED_CHAINS","t","mainnet","a","addPrivyRpcToChain","l","SOLANA_MAINNET_RPC_URL","i","SOLANA_TESTNET_RPC_URL","s","SOLANA_DEVNET_RPC_URL","r","generatePalette","c","d","h","m","u","g","f","C","b","y","w","W","A","M","O","j","U","k","console","warn","loginMethods","includes","emailAuth","smsAuth","walletAuth","solanaWalletAuth","googleOAuth","twitterOAuth","discordOAuth","githubOAuth","spotifyOAuth","instagramOAuth","tiktokOAuth","linkedinOAuth","appleOAuth","farcasterAuth","telegramAuth","window","PublicKeyCredential","passkeyAuth","v","filter","Boolean","S","x","L","passkeysForSignupEnabled","length","Error","P","appearance","showWalletLoginFirst","F","externalWallets","walletConnect","enabled","loginMethodsAndOrder","E","input","walletList","overrides","T","I","intl","defaultCountry","chains","q","defaultChain","R","p","supportedChains","defaultChainFromConfig","D","H","customAuth","getCustomAccessToken","B","embeddedWallets","requireUserPasswordOnCreate","Y","createOnLogin","z","embeddedWalletConfig","K","solanaClusters","solana","connectors","id","name","allowlistConfig","legacyWalletUiConfig","logo","logoUrl","landingHeader","loginMessage","slice","footerLogo","palette","backgroundTheme","theme","accentHex","accentColor","loginGroupPriority","hideDirectWeb2Inputs","walletChainType","evmWalletAuth","wallet","email","sms","passkey","google","twitter","discord","github","spotify","instagram","tiktok","linkedin","apple","farcaster","telegram","disablePlusEmails","legal","termsAndConditionsUrl","privacyPolicyUrl","requireUsersAcceptTerms","walletConnectCloudProjectId","rpcConfig","rpcUrls","rpcTimeouts","find","rpcUrl","testnet","devnet","shouldEnforceDefaultChainOnConnect","captchaEnabled","captchaSiteKey","coinbaseWallet","connectionOptions","requireUserOwnedRecoveryOnCreate","userOwnedRecoveryOptions","priceDisplay","primary","secondary","ethereum","showWalletUIs","enforceWalletUis","extendedCalldataDecoding","transactionScanning","domain","mfa","methods","mfaMethods","noPromptOnMfaRequired","passkeys","shouldUnlinkOnUnenrollMfa","shouldUnenrollMfaOnUnlink","loginConfig","telegramAuthConfiguration","headless","render","standalone","_render","fundingConfig","fundingMethodConfig","moonpay","useSandbox","fiatOnRamp","map","get","walletClientType","privyWalletOverride","privy","http","buildChainsAndDefaultChain","generateAppConfig","generateClientConfigAnalyticsPayload"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/config.mjs"],"sourcesContent":["import{defaultClientConfig as e}from\"./configuration/defaultClientConfig.mjs\";import{toCustomLoginMethodConfig as n}from\"./configuration/login-methods.mjs\";import{toWalletListConfig as o}from\"./configuration/wallets.mjs\";import{DEFAULT_SUPPORTED_CHAINS as t}from\"./connectors/chains/index.mjs\";import{mainnet as a}from\"./connectors/chains/mainnet.mjs\";import{addPrivyRpcToChain as l}from\"./connectors/chains/utils.mjs\";import{SOLANA_MAINNET_RPC_URL as i,SOLANA_TESTNET_RPC_URL as s,SOLANA_DEVNET_RPC_URL as r}from\"./lib/solana/index.mjs\";import{generatePalette as c}from\"./theme.mjs\";import\"./constants.mjs\";import\"./connectors/chains/arbitrum.mjs\";import\"./connectors/chains/arbitrumSepolia.mjs\";import\"./connectors/chains/avalanche.mjs\";import\"./connectors/chains/avalancheFuji.mjs\";import\"./connectors/chains/base.mjs\";import\"./connectors/chains/baseSepolia.mjs\";import\"./connectors/chains/berachainArtio.mjs\";import\"./connectors/chains/celo.mjs\";import\"./connectors/chains/celoAlfajores.mjs\";import\"./connectors/chains/filecoin.mjs\";import\"./connectors/chains/filecoinCalibration.mjs\";import\"./connectors/chains/garnetHolesky.mjs\";import\"./connectors/chains/holesky.mjs\";import\"./connectors/chains/linea.mjs\";import\"./connectors/chains/lineaTestnet.mjs\";import\"./connectors/chains/lukso.mjs\";import\"./connectors/chains/optimism.mjs\";import\"./connectors/chains/optimismSepolia.mjs\";import\"./connectors/chains/polygon.mjs\";import\"./connectors/chains/polygonAmoy.mjs\";import\"./connectors/chains/redstone.mjs\";import\"./connectors/chains/sepolia.mjs\";import\"./connectors/chains/zora.mjs\";import\"./connectors/chains/zoraSepolia.mjs\";import\"./connectors/chains/zoraTestnet.mjs\";import\"tinycolor2\";function d(t,a,l,d){let h,m,u,g,f,C,b,y,w,W,A,M,O,j,U,k=l?console.warn:()=>{};a?.loginMethods?(h=a.loginMethods.includes(\"email\"),m=a.loginMethods.includes(\"sms\"),g=a.loginMethods.includes(\"wallet\"),f=a.loginMethods.includes(\"google\"),C=a.loginMethods.includes(\"twitter\"),b=a.loginMethods.includes(\"discord\"),w=a.loginMethods.includes(\"spotify\"),W=a.loginMethods.includes(\"instagram\"),y=a.loginMethods.includes(\"tiktok\"),M=a.loginMethods.includes(\"github\"),A=a.loginMethods.includes(\"linkedin\"),O=a.loginMethods.includes(\"apple\"),j=a.loginMethods.includes(\"farcaster\"),U=a.loginMethods.includes(\"telegram\")):(h=t.emailAuth,m=t.smsAuth,g=t.walletAuth||t.solanaWalletAuth,f=t.googleOAuth,C=t.twitterOAuth,b=t.discordOAuth,M=t.githubOAuth,w=t.spotifyOAuth,W=t.instagramOAuth,y=t.tiktokOAuth,A=t.linkedinOAuth,O=t.appleOAuth,j=t.farcasterAuth,U=t.telegramAuth),\"undefined\"!=typeof window&&\"function\"!=typeof window.PublicKeyCredential?u=!1:t.passkeyAuth&&(u=!0);let v=[h,m].filter(Boolean),S=[f,C,b,M,w,W,y,A,O,j,U].filter(Boolean),x=[g].filter(Boolean),L=[u&&t.passkeysForSignupEnabled].filter(Boolean);if(v.length+S.length+x.length+L.length===0)throw Error(\"You must enable at least one login method\");let P=void 0!==a?.appearance?.showWalletLoginFirst?a?.appearance?.showWalletLoginFirst:t.showWalletLoginFirst;P&&0===x.length?(k(\"You should only enable `showWalletLoginFirst` when `wallet` logins are also enabled. `showWalletLoginFirst` has been set to false\"),P=!1):P||S.length+v.length!==0||(k(\"You should only disable `showWalletLoginFirst` when `email`, `sms`, or social logins are also enabled. `showWalletLoginFirst` has been set to true\"),P=!0);let F=a?.externalWallets?.walletConnect?.enabled??!0;a?.loginMethods&&a.loginMethodsAndOrder&&k(\"You should only configure one of `loginMethods` or `loginMethodsAndOrder`\");let E=o({input:a?.appearance?.walletList,overrides:a?.loginMethodsAndOrder}),T=n({input:a?.loginMethodsAndOrder}),I=a?.intl?.defaultCountry??\"US\",{chains:q,defaultChain:R}=p({supportedChains:a?.supportedChains,defaultChainFromConfig:a?.defaultChain}),D=!!a?.defaultChain,H=a?.customAuth?.getCustomAccessToken&&!1!==a?.customAuth?.enabled,B=a?.embeddedWallets?.requireUserPasswordOnCreate,Y=a?.embeddedWallets?.createOnLogin,z=H?\"all-users\":t.embeddedWalletConfig.createOnLogin,K=a?.solanaClusters??[];return t.solanaWalletAuth&&!a?.externalWallets?.solana?.connectors&&console.warn(\"App configuration has Solana wallet login enabled, but no Solana wallet connectors have been passed to Privy. Make sure to pass Solana connectors to the `config.externalWallets.solana.connectors` field of the `PrivyProvider`\"),{id:t.id,name:t.name,allowlistConfig:t.allowlistConfig,legacyWalletUiConfig:t.legacyWalletUiConfig,appearance:{logo:a?.appearance?.logo??t.logoUrl,landingHeader:a?.appearance?.landingHeader??e.appearance.landingHeader,loginMessage:\"string\"==typeof a?.appearance?.loginMessage?a?.appearance?.loginMessage.slice(0,100):a?.appearance?.loginMessage,footerLogo:a?.appearance?.footerLogo,palette:c({backgroundTheme:a?.appearance?.theme??e.appearance.theme,accentHex:a?.appearance?.accentColor??t.accentColor??e.appearance.accentColor}),loginGroupPriority:P?\"web3-first\":\"web2-first\",hideDirectWeb2Inputs:!!a?.appearance?.hideDirectWeb2Inputs,walletList:E,walletChainType:a?.appearance?.walletChainType??(({evmWalletAuth:e,solanaWalletAuth:n})=>e&&n?\"ethereum-and-solana\":e?\"ethereum-only\":n?\"solana-only\":\"ethereum-only\")({evmWalletAuth:t.walletAuth??!1,solanaWalletAuth:t.solanaWalletAuth??!1})},loginMethods:{wallet:g,email:h,sms:m,passkey:u,google:f,twitter:C,discord:b,github:M,spotify:w,instagram:W,tiktok:y,linkedin:A,apple:O,farcaster:j,telegram:U},disablePlusEmails:t.disablePlusEmails,loginMethodsAndOrder:T,legal:{termsAndConditionsUrl:a?.legal?.termsAndConditionsUrl??t.termsAndConditionsUrl,privacyPolicyUrl:a?.legal?.privacyPolicyUrl??t.privacyPolicyUrl,requireUsersAcceptTerms:t.requireUsersAcceptTerms??!1},walletConnectCloudProjectId:a?.walletConnectCloudProjectId??t.walletConnectCloudProjectId??e.walletConnectCloudProjectId,rpcConfig:{rpcUrls:{},rpcTimeouts:{}},chains:q,solanaClusters:{\"mainnet-beta\":K.find((e=>\"mainnet-beta\"===e.name))?.rpcUrl||i,testnet:K.find((e=>\"testnet\"===e.name))?.rpcUrl||s,devnet:K.find((e=>\"devnet\"===e.name))?.rpcUrl||r},defaultChain:R,intl:{defaultCountry:I},shouldEnforceDefaultChainOnConnect:D,captchaEnabled:t.captchaEnabled??e.captchaEnabled,captchaSiteKey:t.captchaSiteKey,externalWallets:{coinbaseWallet:{connectionOptions:a?.externalWallets?.coinbaseWallet?.connectionOptions??e.externalWallets.coinbaseWallet.connectionOptions},walletConnect:{enabled:F},solana:{connectors:a?.externalWallets?.solana?.connectors}},embeddedWallets:{requireUserOwnedRecoveryOnCreate:B??(!H&&t.embeddedWalletConfig.requireUserOwnedRecoveryOnCreate),userOwnedRecoveryOptions:H?[\"user-passcode\"]:t.embeddedWalletConfig.userOwnedRecoveryOptions,priceDisplay:{primary:\"fiat-currency\",secondary:\"native-token\"},ethereum:{createOnLogin:Y??a?.embeddedWallets?.ethereum?.createOnLogin??z},solana:{createOnLogin:a?.embeddedWallets?.solana?.createOnLogin??\"off\"},showWalletUIs:a?.embeddedWallets?.showWalletUIs??t.enforceWalletUis??!0,extendedCalldataDecoding:a?.embeddedWallets?.extendedCalldataDecoding??!1,transactionScanning:{enabled:a?.embeddedWallets?.transactionScanning?.enabled??!1,domain:a?.embeddedWallets?.transactionScanning?.domain??d??\"https://auth.privy.io\"}},mfa:{methods:t.mfaMethods??[],noPromptOnMfaRequired:a?.mfa?.noPromptOnMfaRequired??!1},passkeys:{shouldUnlinkOnUnenrollMfa:a?.passkeys?.shouldUnlinkOnUnenrollMfa,shouldUnenrollMfaOnUnlink:a?.passkeys?.shouldUnenrollMfaOnUnlink},customAuth:H?{enabled:!0,...a.customAuth}:void 0,loginConfig:{telegramAuthConfiguration:t.telegramAuthConfiguration,passkeysForSignupEnabled:t.passkeysForSignupEnabled},headless:!!a?.headless,render:{standalone:a?._render?.standalone??e._render.standalone},fundingConfig:t.fundingConfig,fundingMethodConfig:{...a?.fundingMethodConfig??e.fundingMethodConfig,moonpay:{...a?.fundingMethodConfig?.moonpay??e.fundingMethodConfig.moonpay,useSandbox:a?.fundingMethodConfig?.moonpay.useSandbox??a?.fiatOnRamp?.useSandbox??e.fundingMethodConfig.moonpay.useSandbox}}}}function h(e){if(!e)return{};let{appearance:n,supportedChains:o,defaultChain:t,externalWallets:a,...l}=e;return{...l,...o?{supportedChains:o.map((e=>e.id))}:void 0,...t?{defaultChain:t.id}:void 0,...a?{walletConnect:a.walletConnect,coinbaseWallet:a.coinbaseWallet,solana:{connectors:a.solana?.connectors?.get().map((e=>e.walletClientType))}}:void 0}}function p({supportedChains:e,defaultChainFromConfig:n}){let o;if(e){if(0===e.length)throw Error(\"`supportedChains` must contain at least one chain\");o=e.map((e=>{if(e.rpcUrls.privyWalletOverride)return e;let n=t.find((n=>n.id===e.id)),o=n?.rpcUrls.privy?.http[0];return o?l(e,o):e}))}else o=[...t];let i=e?o[0]:a,s=n??i;if(!o.find((e=>e.id===s.id)))throw Error(\"`defaultChain` must be included in `supportedChains`\");return{chains:o,defaultChain:s}}export{p as buildChainsAndDefaultChain,d as generateAppConfig,h as generateClientConfigAnalyticsPayload};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}