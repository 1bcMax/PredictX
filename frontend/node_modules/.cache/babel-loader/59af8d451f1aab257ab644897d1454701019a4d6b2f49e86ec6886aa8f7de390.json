{"ast":null,"code":"import { isHex as t, getAddress as e } from \"viem\";\nconst l = l => {\n  let r = localStorage.getItem(\"-walletlink:https://www.walletlink.org:Addresses\")?.split(\" \").filter(e => t(e, {\n    strict: !0\n  })).map(t => e(t));\n  return !!r?.length && !!l?.linkedAccounts.filter(t => \"wallet\" == t.type && r.includes(t.address)).length;\n};\nexport { l as userAlreadyHasConnectedCoinbaseWallet };","map":{"version":3,"names":["isHex","t","getAddress","e","l","r","localStorage","getItem","split","filter","strict","map","length","linkedAccounts","type","includes","address","userAlreadyHasConnectedCoinbaseWallet"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/connectors/userAlreadyHasConnectedCoinbaseWallet.mjs"],"sourcesContent":["import{isHex as t,getAddress as e}from\"viem\";const l=l=>{let r=localStorage.getItem(\"-walletlink:https://www.walletlink.org:Addresses\")?.split(\" \").filter((e=>t(e,{strict:!0}))).map((t=>e(t)));return!!r?.length&&!!l?.linkedAccounts.filter((t=>\"wallet\"==t.type&&r.includes(t.address))).length};export{l as userAlreadyHasConnectedCoinbaseWallet};\n"],"mappings":"AAAA,SAAOA,KAAK,IAAIC,CAAC,EAACC,UAAU,IAAIC,CAAC,QAAK,MAAM;AAAC,MAAMC,CAAC,GAACA,CAAC,IAAE;EAAC,IAAIC,CAAC,GAACC,YAAY,CAACC,OAAO,CAAC,kDAAkD,CAAC,EAAEC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAEN,CAAC,IAAEF,CAAC,CAACE,CAAC,EAAC;IAACO,MAAM,EAAC,CAAC;EAAC,CAAC,CAAE,CAAC,CAACC,GAAG,CAAEV,CAAC,IAAEE,CAAC,CAACF,CAAC,CAAE,CAAC;EAAC,OAAM,CAAC,CAACI,CAAC,EAAEO,MAAM,IAAE,CAAC,CAACR,CAAC,EAAES,cAAc,CAACJ,MAAM,CAAER,CAAC,IAAE,QAAQ,IAAEA,CAAC,CAACa,IAAI,IAAET,CAAC,CAACU,QAAQ,CAACd,CAAC,CAACe,OAAO,CAAE,CAAC,CAACJ,MAAM;AAAA,CAAC;AAAC,SAAOR,CAAC,IAAIa,qCAAqC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}