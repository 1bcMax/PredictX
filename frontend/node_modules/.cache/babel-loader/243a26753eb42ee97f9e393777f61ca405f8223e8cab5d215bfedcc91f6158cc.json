{"ast":null,"code":"import { PrivyClientError as e } from \"../Error.mjs\";\nclass t {\n  async sign({\n    message: e\n  }) {\n    return await this.request({\n      method: \"sign\",\n      params: {\n        message: new TextDecoder(\"utf8\").decode(e)\n      }\n    });\n  }\n  async signTransaction({\n    psbt: e\n  }) {\n    return await this.request({\n      method: \"signTransaction\",\n      params: {\n        psbt: e\n      }\n    });\n  }\n  async request(t) {\n    if (!(await this._privyInternal.getAccessToken())) throw new e({\n      error: \"Missing access token\",\n      code: \"attempted_rpc_call_before_logged_in\"\n    });\n    return this.handleIFrameRpc(t);\n  }\n  async handleIFrameRpc(t) {\n    try {\n      let e = await this._privyInternal.getAccessToken();\n      if (!e) throw Error(\"Missing access token. User must be authenticated.\");\n      return this._privyInternal.createAnalyticsEvent(\"embedded_wallet_sdk_rpc_started\", {\n        method: t.method,\n        address: this._account.address\n      }), (await this._proxy.rpcWallet({\n        accessToken: e,\n        request: t,\n        entropyId: this._entropyId,\n        entropyIdVerifier: this._entropyIdVerifier,\n        hdWalletIndex: this._account.wallet_index,\n        chainType: this._account.chain_type\n      })).response.data;\n    } catch (r) {\n      console.error(r);\n      let s = r instanceof Error ? r.message : \"Unable to make wallet request\";\n      throw this._privyInternal.createAnalyticsEvent(\"embedded_wallet_sdk_rpc_failed\", {\n        method: t.method,\n        address: this._account.address,\n        error: s\n      }), new e({\n        code: \"embedded_wallet_request_error\",\n        error: s\n      });\n    }\n  }\n  toJSON() {\n    return `PrivyEmbeddedBitcoinProvider { address: '${this._account.address}', request: [Function] }`;\n  }\n  constructor({\n    proxy: e,\n    privyInternal: t,\n    account: r,\n    entropyId: s,\n    entropyIdVerifier: a\n  }) {\n    this._proxy = e, this._privyInternal = t, this._account = r, this._entropyId = s, this._entropyIdVerifier = a;\n  }\n}\nexport { t as EmbeddedBitcoinWalletProvider };","map":{"version":3,"names":["PrivyClientError","e","t","sign","message","request","method","params","TextDecoder","decode","signTransaction","psbt","_privyInternal","getAccessToken","error","code","handleIFrameRpc","Error","createAnalyticsEvent","address","_account","_proxy","rpcWallet","accessToken","entropyId","_entropyId","entropyIdVerifier","_entropyIdVerifier","hdWalletIndex","wallet_index","chainType","chain_type","response","data","r","console","s","toJSON","constructor","proxy","privyInternal","account","a","EmbeddedBitcoinWalletProvider"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/node_modules/@privy-io/js-sdk-core/dist/esm/embedded/EmbeddedBitcoinWalletProvider.mjs"],"sourcesContent":["import{PrivyClientError as e}from\"../Error.mjs\";class t{async sign({message:e}){return await this.request({method:\"sign\",params:{message:new TextDecoder(\"utf8\").decode(e)}})}async signTransaction({psbt:e}){return await this.request({method:\"signTransaction\",params:{psbt:e}})}async request(t){if(!await this._privyInternal.getAccessToken())throw new e({error:\"Missing access token\",code:\"attempted_rpc_call_before_logged_in\"});return this.handleIFrameRpc(t)}async handleIFrameRpc(t){try{let e=await this._privyInternal.getAccessToken();if(!e)throw Error(\"Missing access token. User must be authenticated.\");return this._privyInternal.createAnalyticsEvent(\"embedded_wallet_sdk_rpc_started\",{method:t.method,address:this._account.address}),(await this._proxy.rpcWallet({accessToken:e,request:t,entropyId:this._entropyId,entropyIdVerifier:this._entropyIdVerifier,hdWalletIndex:this._account.wallet_index,chainType:this._account.chain_type})).response.data}catch(r){console.error(r);let s=r instanceof Error?r.message:\"Unable to make wallet request\";throw this._privyInternal.createAnalyticsEvent(\"embedded_wallet_sdk_rpc_failed\",{method:t.method,address:this._account.address,error:s}),new e({code:\"embedded_wallet_request_error\",error:s})}}toJSON(){return`PrivyEmbeddedBitcoinProvider { address: '${this._account.address}', request: [Function] }`}constructor({proxy:e,privyInternal:t,account:r,entropyId:s,entropyIdVerifier:a}){this._proxy=e,this._privyInternal=t,this._account=r,this._entropyId=s,this._entropyIdVerifier=a}}export{t as EmbeddedBitcoinWalletProvider};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}