{"ast":null,"code":"import { PrivyClientError as n } from \"../../errors.mjs\";\nimport { extractChainIdFromCAIP2 as o } from \"../caip2.mjs\";\nimport { filterSupportedOptions as i } from \"./filterSupportedOptions.mjs\";\nimport { isNewFundWalletConfig as e, isLegacyMoonpayConfig as t } from \"./moonpay/index.mjs\";\nimport { getIsTokenUsdc as r, UsdcAddressMap as s } from \"./usdc.mjs\";\nimport \"ofetch\";\nimport \"react\";\nimport \"../../constants.mjs\";\nimport \"../../hooks/internal-context.mjs\";\nimport \"../../hooks/index.mjs\";\nimport \"../../hooks/modal-context.mjs\";\nimport \"react/jsx-runtime\";\nimport \"../../components/PrefetchedImage.mjs\";\nimport \"../../configuration/context.mjs\";\nimport \"../../config.mjs\";\nimport \"../../configuration/defaultClientConfig.mjs\";\nimport \"../../configuration/login-methods.mjs\";\nimport \"../../configuration/wallets.mjs\";\nimport \"../../connectors/chains/index.mjs\";\nimport \"../../connectors/chains/arbitrum.mjs\";\nimport \"../../connectors/chains/arbitrumSepolia.mjs\";\nimport \"../../connectors/chains/avalanche.mjs\";\nimport \"../../connectors/chains/avalancheFuji.mjs\";\nimport \"../../connectors/chains/base.mjs\";\nimport \"../../connectors/chains/baseSepolia.mjs\";\nimport \"../../connectors/chains/berachainArtio.mjs\";\nimport \"../../connectors/chains/celo.mjs\";\nimport \"../../connectors/chains/celoAlfajores.mjs\";\nimport \"../../connectors/chains/filecoin.mjs\";\nimport \"../../connectors/chains/filecoinCalibration.mjs\";\nimport \"../../connectors/chains/garnetHolesky.mjs\";\nimport \"../../connectors/chains/holesky.mjs\";\nimport \"../../connectors/chains/linea.mjs\";\nimport \"../../connectors/chains/lineaTestnet.mjs\";\nimport \"../../connectors/chains/lukso.mjs\";\nimport \"../../connectors/chains/mainnet.mjs\";\nimport \"../../connectors/chains/optimism.mjs\";\nimport \"../../connectors/chains/optimismSepolia.mjs\";\nimport \"../../connectors/chains/polygon.mjs\";\nimport \"../../connectors/chains/polygonAmoy.mjs\";\nimport \"../../connectors/chains/redstone.mjs\";\nimport \"../../connectors/chains/sepolia.mjs\";\nimport \"../../connectors/chains/zora.mjs\";\nimport \"../../connectors/chains/zoraSepolia.mjs\";\nimport \"../../connectors/chains/zoraTestnet.mjs\";\nimport \"../../connectors/chains/utils.mjs\";\nimport \"../solana/index.mjs\";\nimport \"../../theme.mjs\";\nimport \"tinycolor2\";\nimport \"../cybr53.mjs\";\nimport \"../../screens/index.mjs\";\nimport \"./analytics.mjs\";\nconst a = ({\n  address: a,\n  appConfig: c,\n  fundWalletConfig: m,\n  methodScreen: d,\n  chainIdOverride: l,\n  comingFromSendTransactionScreen: p = !1\n}) => {\n  let f, h;\n  if (!c.fundingConfig) throw Error(\"Wallet funding is not enabled\");\n  let u = i(c.fundingConfig.options);\n  if (u.length < 1) throw Error(\"Wallet funding is not enabled\");\n  f = l || (e(m) && m.chain ? m.chain.id : o(c.fundingConfig.defaultRecommendedCurrency.chain));\n  let g = c.chains.find(n => n.id === f);\n  if (!g) throw new n(`Funding chain ${f} is not in PrivyProvider chains list`);\n  let j = e(m) && m.amount ? m.amount : c.fundingConfig.defaultRecommendedAmount,\n    C = !1;\n  function S() {\n    if (!f) return;\n    let n = s[f];\n    u.find(n => \"wallets\" === n.method) && !n && console.warn(\"Attempting to fund with USDC on chain where USDC address is not known. Funding via external wallet will be disabled.\"), h = n, C = !0;\n  }\n  e(m) && \"asset\" in m ? \"USDC\" === m.asset ? S() : \"string\" != typeof m.asset && \"erc20\" in m.asset && (C = r(h = m.asset.erc20, g)) : \"USDC\" === c.fundingConfig.defaultRecommendedCurrency.asset && S();\n  let b = m?.defaultFundingMethod;\n  return {\n    chainType: \"ethereum\",\n    address: a,\n    amount: j,\n    chain: g,\n    erc20Address: h,\n    erc20ContractInfo: C ? {\n      symbol: \"USDC\",\n      decimals: 6\n    } : void 0,\n    isUSDC: C,\n    methodScreen: d,\n    supportedOptions: u,\n    comingFromSendTransactionScreen: p,\n    defaultFundingMethod: b,\n    usingDefaultFundingMethod: !!b,\n    preferredCardProvider: m?.card?.preferredProvider,\n    crossChainBridgingEnabled: c.fundingConfig.crossChainBridgingEnabled ?? !1,\n    cluster: {\n      name: \"mainnet-beta\",\n      rpcUrl: c.solanaClusters[\"mainnet-beta\"]\n    },\n    ...(t(m) ? {\n      moonpayConfigOverride: m.config\n    } : {})\n  };\n};\nfunction c({\n  address: n,\n  fundWalletConfig: o,\n  appConfig: e,\n  comingFromSendTransactionScreen: t,\n  methodScreen: r\n}) {\n  if (!e.fundingConfig) throw Error(\"Wallet funding is not enabled\");\n  let s = i(e.fundingConfig.options);\n  if (s.length < 1) throw Error(\"Wallet funding is not enabled\");\n  let a = o?.amount ?? e.fundingConfig.defaultRecommendedAmount,\n    c = o?.defaultFundingMethod;\n  return {\n    chainType: \"solana\",\n    address: n,\n    supportedOptions: s,\n    amount: a,\n    isUSDC: !1,\n    methodScreen: r,\n    comingFromSendTransactionScreen: t,\n    cluster: {\n      name: o?.cluster?.name ?? \"mainnet-beta\",\n      rpcUrl: e.solanaClusters[o?.cluster?.name ?? \"mainnet-beta\"]\n    },\n    crossChainBridgingEnabled: e.fundingConfig.crossChainBridgingEnabled ?? !1,\n    defaultFundingMethod: c,\n    preferredCardProvider: o?.card?.preferredProvider,\n    usingDefaultFundingMethod: !!c\n  };\n}\nexport { a as prepareFundingModalData, c as prepareSolanaFundingModalData };","map":{"version":3,"names":["PrivyClientError","n","extractChainIdFromCAIP2","o","filterSupportedOptions","i","isNewFundWalletConfig","e","isLegacyMoonpayConfig","t","getIsTokenUsdc","r","UsdcAddressMap","s","a","address","appConfig","c","fundWalletConfig","m","methodScreen","d","chainIdOverride","l","comingFromSendTransactionScreen","p","f","h","fundingConfig","Error","u","options","length","chain","id","defaultRecommendedCurrency","g","chains","find","j","amount","defaultRecommendedAmount","C","S","method","console","warn","asset","erc20","b","defaultFundingMethod","chainType","erc20Address","erc20ContractInfo","symbol","decimals","isUSDC","supportedOptions","usingDefaultFundingMethod","preferredCardProvider","card","preferredProvider","crossChainBridgingEnabled","cluster","name","rpcUrl","solanaClusters","moonpayConfigOverride","config","prepareFundingModalData","prepareSolanaFundingModalData"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/lib/funding/prepareFundingModalData.mjs"],"sourcesContent":["import{PrivyClientError as n}from\"../../errors.mjs\";import{extractChainIdFromCAIP2 as o}from\"../caip2.mjs\";import{filterSupportedOptions as i}from\"./filterSupportedOptions.mjs\";import{isNewFundWalletConfig as e,isLegacyMoonpayConfig as t}from\"./moonpay/index.mjs\";import{getIsTokenUsdc as r,UsdcAddressMap as s}from\"./usdc.mjs\";import\"ofetch\";import\"react\";import\"../../constants.mjs\";import\"../../hooks/internal-context.mjs\";import\"../../hooks/index.mjs\";import\"../../hooks/modal-context.mjs\";import\"react/jsx-runtime\";import\"../../components/PrefetchedImage.mjs\";import\"../../configuration/context.mjs\";import\"../../config.mjs\";import\"../../configuration/defaultClientConfig.mjs\";import\"../../configuration/login-methods.mjs\";import\"../../configuration/wallets.mjs\";import\"../../connectors/chains/index.mjs\";import\"../../connectors/chains/arbitrum.mjs\";import\"../../connectors/chains/arbitrumSepolia.mjs\";import\"../../connectors/chains/avalanche.mjs\";import\"../../connectors/chains/avalancheFuji.mjs\";import\"../../connectors/chains/base.mjs\";import\"../../connectors/chains/baseSepolia.mjs\";import\"../../connectors/chains/berachainArtio.mjs\";import\"../../connectors/chains/celo.mjs\";import\"../../connectors/chains/celoAlfajores.mjs\";import\"../../connectors/chains/filecoin.mjs\";import\"../../connectors/chains/filecoinCalibration.mjs\";import\"../../connectors/chains/garnetHolesky.mjs\";import\"../../connectors/chains/holesky.mjs\";import\"../../connectors/chains/linea.mjs\";import\"../../connectors/chains/lineaTestnet.mjs\";import\"../../connectors/chains/lukso.mjs\";import\"../../connectors/chains/mainnet.mjs\";import\"../../connectors/chains/optimism.mjs\";import\"../../connectors/chains/optimismSepolia.mjs\";import\"../../connectors/chains/polygon.mjs\";import\"../../connectors/chains/polygonAmoy.mjs\";import\"../../connectors/chains/redstone.mjs\";import\"../../connectors/chains/sepolia.mjs\";import\"../../connectors/chains/zora.mjs\";import\"../../connectors/chains/zoraSepolia.mjs\";import\"../../connectors/chains/zoraTestnet.mjs\";import\"../../connectors/chains/utils.mjs\";import\"../solana/index.mjs\";import\"../../theme.mjs\";import\"tinycolor2\";import\"../cybr53.mjs\";import\"../../screens/index.mjs\";import\"./analytics.mjs\";const a=({address:a,appConfig:c,fundWalletConfig:m,methodScreen:d,chainIdOverride:l,comingFromSendTransactionScreen:p=!1})=>{let f,h;if(!c.fundingConfig)throw Error(\"Wallet funding is not enabled\");let u=i(c.fundingConfig.options);if(u.length<1)throw Error(\"Wallet funding is not enabled\");f=l||(e(m)&&m.chain?m.chain.id:o(c.fundingConfig.defaultRecommendedCurrency.chain));let g=c.chains.find((n=>n.id===f));if(!g)throw new n(`Funding chain ${f} is not in PrivyProvider chains list`);let j=e(m)&&m.amount?m.amount:c.fundingConfig.defaultRecommendedAmount,C=!1;function S(){if(!f)return;let n=s[f];u.find((n=>\"wallets\"===n.method))&&!n&&console.warn(\"Attempting to fund with USDC on chain where USDC address is not known. Funding via external wallet will be disabled.\"),h=n,C=!0}e(m)&&\"asset\"in m?\"USDC\"===m.asset?S():\"string\"!=typeof m.asset&&\"erc20\"in m.asset&&(C=r(h=m.asset.erc20,g)):\"USDC\"===c.fundingConfig.defaultRecommendedCurrency.asset&&S();let b=m?.defaultFundingMethod;return{chainType:\"ethereum\",address:a,amount:j,chain:g,erc20Address:h,erc20ContractInfo:C?{symbol:\"USDC\",decimals:6}:void 0,isUSDC:C,methodScreen:d,supportedOptions:u,comingFromSendTransactionScreen:p,defaultFundingMethod:b,usingDefaultFundingMethod:!!b,preferredCardProvider:m?.card?.preferredProvider,crossChainBridgingEnabled:c.fundingConfig.crossChainBridgingEnabled??!1,cluster:{name:\"mainnet-beta\",rpcUrl:c.solanaClusters[\"mainnet-beta\"]},...t(m)?{moonpayConfigOverride:m.config}:{}}};function c({address:n,fundWalletConfig:o,appConfig:e,comingFromSendTransactionScreen:t,methodScreen:r}){if(!e.fundingConfig)throw Error(\"Wallet funding is not enabled\");let s=i(e.fundingConfig.options);if(s.length<1)throw Error(\"Wallet funding is not enabled\");let a=o?.amount??e.fundingConfig.defaultRecommendedAmount,c=o?.defaultFundingMethod;return{chainType:\"solana\",address:n,supportedOptions:s,amount:a,isUSDC:!1,methodScreen:r,comingFromSendTransactionScreen:t,cluster:{name:o?.cluster?.name??\"mainnet-beta\",rpcUrl:e.solanaClusters[o?.cluster?.name??\"mainnet-beta\"]},crossChainBridgingEnabled:e.fundingConfig.crossChainBridgingEnabled??!1,defaultFundingMethod:c,preferredCardProvider:o?.card?.preferredProvider,usingDefaultFundingMethod:!!c}}export{a as prepareFundingModalData,c as prepareSolanaFundingModalData};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}