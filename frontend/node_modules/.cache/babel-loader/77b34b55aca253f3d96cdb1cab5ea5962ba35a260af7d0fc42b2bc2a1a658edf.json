{"ast":null,"code":"import { getCoinbaseOnRampUrl as e } from \"@privy-io/js-sdk-core\";\nimport { ModalScreen as n } from \"../../../screens/index.mjs\";\nimport { triggerPopup as i } from \"../../popup/triggerPopup.mjs\";\nimport { toCoinbaseBlockchainFromChainId as o } from \"./toCoinbaseBlockchainFromChainId.mjs\";\nimport \"../../../connectors/chains/arbitrum.mjs\";\nimport \"../../../connectors/chains/base.mjs\";\nimport \"../../../connectors/chains/mainnet.mjs\";\nimport \"../../../connectors/chains/optimism.mjs\";\nimport \"../../../connectors/chains/polygon.mjs\";\nimport \"../../../errors.mjs\";\nimport \"ofetch\";\nconst t = (t, a, r, s, c, m) => new Promise(async (p, u) => {\n  let d = i();\n  if (!d) return void u(Error(\"Unable to initialize flow\"));\n  let h = \"ethereum\" === a.chainType ? o(a.chain.id) : \"solana\",\n    l = a.isUSDC ? \"USDC\" : \"ethereum\" === a.chainType ? \"ETH\" : \"SOL\",\n    f = await t.initCoinbaseOnRamp({\n      addresses: [{\n        address: a.address,\n        blockchains: [h]\n      }],\n      assets: [l]\n    }),\n    {\n      url: g\n    } = e({\n      input: f,\n      amount: a.amount,\n      blockchain: h,\n      asset: l,\n      experience: m\n    });\n  d.location = g.toString();\n  let b = {\n    ...c?.funding,\n    showAlternateFundingMethod: !0\n  };\n  a.usingDefaultFundingMethod && (b.usingDefaultFundingMethod = !1), r({\n    funding: b,\n    coinbaseOnrampStatus: {\n      popup: d\n    }\n  }), s(n.COINBASE_ONRAMP_STATUS_SCREEN), t.createAnalyticsEvent({\n    eventName: \"sdk_fiat_on_ramp_started\",\n    payload: {\n      provider: \"buy\" === m ? \"coinbase-onramp\" : \"coinbase-exchange\",\n      value: a.amount,\n      chainType: a.chainType,\n      chainId: \"ethereum\" === a.chainType ? a.chain.id : a.cluster.name\n    }\n  }), setTimeout(() => {\n    r({\n      funding: b,\n      coinbaseOnrampStatus: {\n        partnerUserId: f.partner_user_id,\n        popup: d\n      }\n    });\n  }, 5e3), p();\n});\nexport { t as triggerCoinbaseFlow };","map":{"version":3,"names":["getCoinbaseOnRampUrl","e","ModalScreen","n","triggerPopup","i","toCoinbaseBlockchainFromChainId","o","t","a","r","s","c","m","Promise","p","u","d","Error","h","chainType","chain","id","l","isUSDC","f","initCoinbaseOnRamp","addresses","address","blockchains","assets","url","g","input","amount","blockchain","asset","experience","location","toString","b","funding","showAlternateFundingMethod","usingDefaultFundingMethod","coinbaseOnrampStatus","popup","COINBASE_ONRAMP_STATUS_SCREEN","createAnalyticsEvent","eventName","payload","provider","value","chainId","cluster","name","setTimeout","partnerUserId","partner_user_id","triggerCoinbaseFlow"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/lib/funding/coinbase/triggerCoinbaseFlow.mjs"],"sourcesContent":["import{getCoinbaseOnRampUrl as e}from\"@privy-io/js-sdk-core\";import{ModalScreen as n}from\"../../../screens/index.mjs\";import{triggerPopup as i}from\"../../popup/triggerPopup.mjs\";import{toCoinbaseBlockchainFromChainId as o}from\"./toCoinbaseBlockchainFromChainId.mjs\";import\"../../../connectors/chains/arbitrum.mjs\";import\"../../../connectors/chains/base.mjs\";import\"../../../connectors/chains/mainnet.mjs\";import\"../../../connectors/chains/optimism.mjs\";import\"../../../connectors/chains/polygon.mjs\";import\"../../../errors.mjs\";import\"ofetch\";const t=(t,a,r,s,c,m)=>new Promise((async(p,u)=>{let d=i();if(!d)return void u(Error(\"Unable to initialize flow\"));let h=\"ethereum\"===a.chainType?o(a.chain.id):\"solana\",l=a.isUSDC?\"USDC\":\"ethereum\"===a.chainType?\"ETH\":\"SOL\",f=await t.initCoinbaseOnRamp({addresses:[{address:a.address,blockchains:[h]}],assets:[l]}),{url:g}=e({input:f,amount:a.amount,blockchain:h,asset:l,experience:m});d.location=g.toString();let b={...c?.funding,showAlternateFundingMethod:!0};a.usingDefaultFundingMethod&&(b.usingDefaultFundingMethod=!1),r({funding:b,coinbaseOnrampStatus:{popup:d}}),s(n.COINBASE_ONRAMP_STATUS_SCREEN),t.createAnalyticsEvent({eventName:\"sdk_fiat_on_ramp_started\",payload:{provider:\"buy\"===m?\"coinbase-onramp\":\"coinbase-exchange\",value:a.amount,chainType:a.chainType,chainId:\"ethereum\"===a.chainType?a.chain.id:a.cluster.name}}),setTimeout((()=>{r({funding:b,coinbaseOnrampStatus:{partnerUserId:f.partner_user_id,popup:d}})}),5e3),p()}));export{t as triggerCoinbaseFlow};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}