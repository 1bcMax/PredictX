{"ast":null,"code":"import { z as r } from \"zod\";\nimport { WalletAddress as s, SolanaWalletAddress as e } from \"./core.mjs\";\nimport \"bs58\";\nimport \"ethers\";\nimport \"libphonenumber-js/max\";\nlet a = r.enum([\"ethereum\", \"bitcoin\", \"base\", \"avacchain\", \"optimism\", \"solana\", \"polygon\", \"arbitrum\", \"stellar\"]),\n  t = r.enum([\"eth\", \"ETH\", \"USDC\"]).transform(r => r.toUpperCase()),\n  o = r.enum([\"SOL\", \"USDC\"]).transform(r => r.toUpperCase()),\n  n = r.object({\n    addresses: r.array(r.object({\n      address: s,\n      blockchains: r.array(a)\n    })).max(1).min(1),\n    assets: r.array(t).optional()\n  }),\n  i = r.object({\n    addresses: r.array(r.object({\n      address: e,\n      blockchains: r.array(a)\n    })).max(1).min(1),\n    assets: r.array(o).optional()\n  });\nconst m = r.union([n, i]),\n  p = r.object({\n    app_id: r.string(),\n    session_token: r.string(),\n    channel_id: r.string(),\n    partner_user_id: r.string()\n  }),\n  c = r.object({\n    status: r.enum([\"pending\", \"success\", \"failure\"])\n  });\nexport { m as CoinbaseOnRampInitInput, p as CoinbaseOnRampInitResponse, c as CoinbaseOnRampStatusResponse };","map":{"version":3,"names":["z","r","WalletAddress","s","SolanaWalletAddress","e","a","enum","t","transform","toUpperCase","o","n","object","addresses","array","address","blockchains","max","min","assets","optional","i","m","union","p","app_id","string","session_token","channel_id","partner_user_id","c","status","CoinbaseOnRampInitInput","CoinbaseOnRampInitResponse","CoinbaseOnRampStatusResponse"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/public-api/dist/esm/schemas/coinbase.mjs"],"sourcesContent":["import{z as r}from\"zod\";import{WalletAddress as s,SolanaWalletAddress as e}from\"./core.mjs\";import\"bs58\";import\"ethers\";import\"libphonenumber-js/max\";let a=r.enum([\"ethereum\",\"bitcoin\",\"base\",\"avacchain\",\"optimism\",\"solana\",\"polygon\",\"arbitrum\",\"stellar\"]),t=r.enum([\"eth\",\"ETH\",\"USDC\"]).transform((r=>r.toUpperCase())),o=r.enum([\"SOL\",\"USDC\"]).transform((r=>r.toUpperCase())),n=r.object({addresses:r.array(r.object({address:s,blockchains:r.array(a)})).max(1).min(1),assets:r.array(t).optional()}),i=r.object({addresses:r.array(r.object({address:e,blockchains:r.array(a)})).max(1).min(1),assets:r.array(o).optional()});const m=r.union([n,i]),p=r.object({app_id:r.string(),session_token:r.string(),channel_id:r.string(),partner_user_id:r.string()}),c=r.object({status:r.enum([\"pending\",\"success\",\"failure\"])});export{m as CoinbaseOnRampInitInput,p as CoinbaseOnRampInitResponse,c as CoinbaseOnRampStatusResponse};\n"],"mappings":"AAAA,SAAOA,CAAC,IAAIC,CAAC,QAAK,KAAK;AAAC,SAAOC,aAAa,IAAIC,CAAC,EAACC,mBAAmB,IAAIC,CAAC,QAAK,YAAY;AAAC,OAAM,MAAM;AAAC,OAAM,QAAQ;AAAC,OAAM,uBAAuB;AAAC,IAAIC,CAAC,GAACL,CAAC,CAACM,IAAI,CAAC,CAAC,UAAU,EAAC,SAAS,EAAC,MAAM,EAAC,WAAW,EAAC,UAAU,EAAC,QAAQ,EAAC,SAAS,EAAC,UAAU,EAAC,SAAS,CAAC,CAAC;EAACC,CAAC,GAACP,CAAC,CAACM,IAAI,CAAC,CAAC,KAAK,EAAC,KAAK,EAAC,MAAM,CAAC,CAAC,CAACE,SAAS,CAAER,CAAC,IAAEA,CAAC,CAACS,WAAW,CAAC,CAAE,CAAC;EAACC,CAAC,GAACV,CAAC,CAACM,IAAI,CAAC,CAAC,KAAK,EAAC,MAAM,CAAC,CAAC,CAACE,SAAS,CAAER,CAAC,IAAEA,CAAC,CAACS,WAAW,CAAC,CAAE,CAAC;EAACE,CAAC,GAACX,CAAC,CAACY,MAAM,CAAC;IAACC,SAAS,EAACb,CAAC,CAACc,KAAK,CAACd,CAAC,CAACY,MAAM,CAAC;MAACG,OAAO,EAACb,CAAC;MAACc,WAAW,EAAChB,CAAC,CAACc,KAAK,CAACT,CAAC;IAAC,CAAC,CAAC,CAAC,CAACY,GAAG,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;IAACC,MAAM,EAACnB,CAAC,CAACc,KAAK,CAACP,CAAC,CAAC,CAACa,QAAQ,CAAC;EAAC,CAAC,CAAC;EAACC,CAAC,GAACrB,CAAC,CAACY,MAAM,CAAC;IAACC,SAAS,EAACb,CAAC,CAACc,KAAK,CAACd,CAAC,CAACY,MAAM,CAAC;MAACG,OAAO,EAACX,CAAC;MAACY,WAAW,EAAChB,CAAC,CAACc,KAAK,CAACT,CAAC;IAAC,CAAC,CAAC,CAAC,CAACY,GAAG,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;IAACC,MAAM,EAACnB,CAAC,CAACc,KAAK,CAACJ,CAAC,CAAC,CAACU,QAAQ,CAAC;EAAC,CAAC,CAAC;AAAC,MAAME,CAAC,GAACtB,CAAC,CAACuB,KAAK,CAAC,CAACZ,CAAC,EAACU,CAAC,CAAC,CAAC;EAACG,CAAC,GAACxB,CAAC,CAACY,MAAM,CAAC;IAACa,MAAM,EAACzB,CAAC,CAAC0B,MAAM,CAAC,CAAC;IAACC,aAAa,EAAC3B,CAAC,CAAC0B,MAAM,CAAC,CAAC;IAACE,UAAU,EAAC5B,CAAC,CAAC0B,MAAM,CAAC,CAAC;IAACG,eAAe,EAAC7B,CAAC,CAAC0B,MAAM,CAAC;EAAC,CAAC,CAAC;EAACI,CAAC,GAAC9B,CAAC,CAACY,MAAM,CAAC;IAACmB,MAAM,EAAC/B,CAAC,CAACM,IAAI,CAAC,CAAC,SAAS,EAAC,SAAS,EAAC,SAAS,CAAC;EAAC,CAAC,CAAC;AAAC,SAAOgB,CAAC,IAAIU,uBAAuB,EAACR,CAAC,IAAIS,0BAA0B,EAACH,CAAC,IAAII,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}