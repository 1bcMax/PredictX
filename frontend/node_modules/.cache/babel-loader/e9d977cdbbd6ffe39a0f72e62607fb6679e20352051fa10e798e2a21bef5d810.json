{"ast":null,"code":"import { PrivyIframeError as e } from \"./errors.mjs\";\nimport \"./types.mjs\";\nasync function r(r, t, i, a, n = !1, o, c) {\n  let m = n,\n    s = async o => {\n      if (m) {\n        o === (n ? 0 : 1) ? a() : i.current?.reject(new e(\"missing_or_invalid_mfa\", \"MFA verification failed, retry.\"));\n        let m = await new Promise((r, a) => {\n          t.current = {\n            resolve: r,\n            reject: a\n          }, setTimeout(() => {\n            let r = new e(\"mfa_timeout\", \"Timed out waiting for MFA code\");\n            i.current?.reject(r), a(r);\n          }, c);\n        });\n        return await r(m);\n      }\n      return await r();\n    },\n    f = null;\n  for (let e = 0; e < o; e++) try {\n    f = await s(e), i.current?.resolve(void 0);\n    break;\n  } catch (e) {\n    if (\"missing_or_invalid_mfa\" !== e.type) throw i.current?.resolve(void 0), e;\n    m = !0;\n  }\n  if (null === f) {\n    let r = new e(\"mfa_verification_max_attempts_reached\", \"Max MFA verification attempts reached\");\n    throw i.current?.reject(r), r;\n  }\n  return f;\n}\nexport { r as withMfa };","map":{"version":3,"names":["PrivyIframeError","e","r","t","i","a","n","o","c","m","s","current","reject","Promise","resolve","setTimeout","f","type","withMfa"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/node_modules/@privy-io/js-sdk-core/dist/esm/embedded/withMfa.mjs"],"sourcesContent":["import{PrivyIframeError as e}from\"./errors.mjs\";import\"./types.mjs\";async function r(r,t,i,a,n=!1,o,c){let m=n,s=async o=>{if(m){o===(n?0:1)?a():i.current?.reject(new e(\"missing_or_invalid_mfa\",\"MFA verification failed, retry.\"));let m=await new Promise(((r,a)=>{t.current={resolve:r,reject:a},setTimeout((()=>{let r=new e(\"mfa_timeout\",\"Timed out waiting for MFA code\");i.current?.reject(r),a(r)}),c)}));return await r(m)}return await r()},f=null;for(let e=0;e<o;e++)try{f=await s(e),i.current?.resolve(void 0);break}catch(e){if(\"missing_or_invalid_mfa\"!==e.type)throw i.current?.resolve(void 0),e;m=!0}if(null===f){let r=new e(\"mfa_verification_max_attempts_reached\",\"Max MFA verification attempts reached\");throw i.current?.reject(r),r}return f}export{r as withMfa};\n"],"mappings":"AAAA,SAAOA,gBAAgB,IAAIC,CAAC,QAAK,cAAc;AAAC,OAAM,aAAa;AAAC,eAAeC,CAACA,CAACA,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,GAAC,CAAC,CAAC,EAACC,CAAC,EAACC,CAAC,EAAC;EAAC,IAAIC,CAAC,GAACH,CAAC;IAACI,CAAC,GAAC,MAAMH,CAAC,IAAE;MAAC,IAAGE,CAAC,EAAC;QAACF,CAAC,MAAID,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAACD,CAAC,CAAC,CAAC,GAACD,CAAC,CAACO,OAAO,EAAEC,MAAM,CAAC,IAAIX,CAAC,CAAC,wBAAwB,EAAC,iCAAiC,CAAC,CAAC;QAAC,IAAIQ,CAAC,GAAC,MAAM,IAAII,OAAO,CAAE,CAACX,CAAC,EAACG,CAAC,KAAG;UAACF,CAAC,CAACQ,OAAO,GAAC;YAACG,OAAO,EAACZ,CAAC;YAACU,MAAM,EAACP;UAAC,CAAC,EAACU,UAAU,CAAE,MAAI;YAAC,IAAIb,CAAC,GAAC,IAAID,CAAC,CAAC,aAAa,EAAC,gCAAgC,CAAC;YAACG,CAAC,CAACO,OAAO,EAAEC,MAAM,CAACV,CAAC,CAAC,EAACG,CAAC,CAACH,CAAC,CAAC;UAAA,CAAC,EAAEM,CAAC,CAAC;QAAA,CAAE,CAAC;QAAC,OAAO,MAAMN,CAAC,CAACO,CAAC,CAAC;MAAA;MAAC,OAAO,MAAMP,CAAC,CAAC,CAAC;IAAA,CAAC;IAACc,CAAC,GAAC,IAAI;EAAC,KAAI,IAAIf,CAAC,GAAC,CAAC,EAACA,CAAC,GAACM,CAAC,EAACN,CAAC,EAAE,EAAC,IAAG;IAACe,CAAC,GAAC,MAAMN,CAAC,CAACT,CAAC,CAAC,EAACG,CAAC,CAACO,OAAO,EAAEG,OAAO,CAAC,KAAK,CAAC,CAAC;IAAC;EAAK,CAAC,QAAMb,CAAC,EAAC;IAAC,IAAG,wBAAwB,KAAGA,CAAC,CAACgB,IAAI,EAAC,MAAMb,CAAC,CAACO,OAAO,EAAEG,OAAO,CAAC,KAAK,CAAC,CAAC,EAACb,CAAC;IAACQ,CAAC,GAAC,CAAC,CAAC;EAAA;EAAC,IAAG,IAAI,KAAGO,CAAC,EAAC;IAAC,IAAId,CAAC,GAAC,IAAID,CAAC,CAAC,uCAAuC,EAAC,uCAAuC,CAAC;IAAC,MAAMG,CAAC,CAACO,OAAO,EAAEC,MAAM,CAACV,CAAC,CAAC,EAACA,CAAC;EAAA;EAAC,OAAOc,CAAC;AAAA;AAAC,SAAOd,CAAC,IAAIgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}