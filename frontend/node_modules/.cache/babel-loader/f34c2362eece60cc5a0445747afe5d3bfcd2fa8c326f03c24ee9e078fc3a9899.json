{"ast":null,"code":"const e = e => {\n  if (\"ethereum\" === e.chain_type) return {\n    entropyId: e.address,\n    entropyIdVerifier: \"ethereum-address-verifier\"\n  };\n  if (\"solana\" === e.chain_type) return {\n    entropyId: e.address,\n    entropyIdVerifier: \"solana-address-verifier\"\n  };\n  throw Error(\"Invalid embedded wallet account type\");\n};\nexport { e as getEntropyDetailsFromAccount };","map":{"version":3,"names":["e","chain_type","entropyId","address","entropyIdVerifier","Error","getEntropyDetailsFromAccount"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/node_modules/@privy-io/js-sdk-core/dist/esm/utils/getEntropyDetailsFromAccount.mjs"],"sourcesContent":["const e=e=>{if(\"ethereum\"===e.chain_type)return{entropyId:e.address,entropyIdVerifier:\"ethereum-address-verifier\"};if(\"solana\"===e.chain_type)return{entropyId:e.address,entropyIdVerifier:\"solana-address-verifier\"};throw Error(\"Invalid embedded wallet account type\")};export{e as getEntropyDetailsFromAccount};\n"],"mappings":"AAAA,MAAMA,CAAC,GAACA,CAAC,IAAE;EAAC,IAAG,UAAU,KAAGA,CAAC,CAACC,UAAU,EAAC,OAAM;IAACC,SAAS,EAACF,CAAC,CAACG,OAAO;IAACC,iBAAiB,EAAC;EAA2B,CAAC;EAAC,IAAG,QAAQ,KAAGJ,CAAC,CAACC,UAAU,EAAC,OAAM;IAACC,SAAS,EAACF,CAAC,CAACG,OAAO;IAACC,iBAAiB,EAAC;EAAyB,CAAC;EAAC,MAAMC,KAAK,CAAC,sCAAsC,CAAC;AAAA,CAAC;AAAC,SAAOL,CAAC,IAAIM,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}