{"ast":null,"code":"function e(e) {\n  let r = new RegExp(RegExp(\"^eip155:(?<chainId>\\\\d+)$\", \"gm\")),\n    t = r.exec(e)?.groups?.chainId;\n  if (t) return parseInt(t);\n  throw Error(\"Chain ID not compatible with CAIP-2 format.\");\n}\nexport { e as extractChainIdFromCAIP2 };","map":{"version":3,"names":["e","r","RegExp","t","exec","groups","chainId","parseInt","Error","extractChainIdFromCAIP2"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/lib/caip2.mjs"],"sourcesContent":["function e(e){let r=new RegExp(RegExp(\"^eip155:(?<chainId>\\\\d+)$\",\"gm\")),t=r.exec(e)?.groups?.chainId;if(t)return parseInt(t);throw Error(\"Chain ID not compatible with CAIP-2 format.\")}export{e as extractChainIdFromCAIP2};\n"],"mappings":"AAAA,SAASA,CAACA,CAACA,CAAC,EAAC;EAAC,IAAIC,CAAC,GAAC,IAAIC,MAAM,CAACA,MAAM,CAAC,2BAA2B,EAAC,IAAI,CAAC,CAAC;IAACC,CAAC,GAACF,CAAC,CAACG,IAAI,CAACJ,CAAC,CAAC,EAAEK,MAAM,EAAEC,OAAO;EAAC,IAAGH,CAAC,EAAC,OAAOI,QAAQ,CAACJ,CAAC,CAAC;EAAC,MAAMK,KAAK,CAAC,6CAA6C,CAAC;AAAA;AAAC,SAAOR,CAAC,IAAIS,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}