{"ast":null,"code":"import { SolanaWalletConnector as o } from \"./index.mjs\";\nimport { DEFAULT_RPC_TIMEOUT as t } from \"../../constants.mjs\";\nimport { PrivyProxyProvider as i } from \"../privyProxyProvider.mjs\";\nimport \"../../hooks/index.mjs\";\nimport \"../base.mjs\";\nimport \"eventemitter3\";\nimport \"../errors.mjs\";\nimport \"@privy-io/js-sdk-core\";\nimport \"../../errors.mjs\";\nimport \"ofetch\";\nimport \"../stored-connection.mjs\";\nimport \"../../storage.mjs\";\nclass n extends o {\n  get walletBranding() {\n    return {\n      id: this.id,\n      name: this.name,\n      icon: this.icon\n    };\n  }\n  async initialize() {\n    this.initialized = !0, this.emit(\"initialized\");\n  }\n  async connect() {\n    throw Error(\"connect called for an uninstalled wallet via the SolanaNullConnector\");\n  }\n  constructor({\n    id: o,\n    name: n,\n    icon: r\n  }) {\n    super({\n      name: n\n    }, !1), this.connectorType = \"null\", this.proxyProvider = new i(void 0, t), this.disconnect = async () => {\n      throw Error(\"disconnect called for an uninstalled wallet via the SolanaNullConnector\");\n    }, this.promptConnection = async () => {\n      throw Error(\"promptConnection called for an uninstalled wallet via the SolanaNullConnector\");\n    }, this.id = o, this.name = n, this.icon = r;\n  }\n}\nexport { n as SolanaNullConnector };","map":{"version":3,"names":["SolanaWalletConnector","o","DEFAULT_RPC_TIMEOUT","t","PrivyProxyProvider","i","n","walletBranding","id","name","icon","initialize","initialized","emit","connect","Error","constructor","r","connectorType","proxyProvider","disconnect","promptConnection","SolanaNullConnector"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/connectors/solana/SolanaNullConnector.mjs"],"sourcesContent":["import{SolanaWalletConnector as o}from\"./index.mjs\";import{DEFAULT_RPC_TIMEOUT as t}from\"../../constants.mjs\";import{PrivyProxyProvider as i}from\"../privyProxyProvider.mjs\";import\"../../hooks/index.mjs\";import\"../base.mjs\";import\"eventemitter3\";import\"../errors.mjs\";import\"@privy-io/js-sdk-core\";import\"../../errors.mjs\";import\"ofetch\";import\"../stored-connection.mjs\";import\"../../storage.mjs\";class n extends o{get walletBranding(){return{id:this.id,name:this.name,icon:this.icon}}async initialize(){this.initialized=!0,this.emit(\"initialized\")}async connect(){throw Error(\"connect called for an uninstalled wallet via the SolanaNullConnector\")}constructor({id:o,name:n,icon:r}){super({name:n},!1),this.connectorType=\"null\",this.proxyProvider=new i(void 0,t),this.disconnect=async()=>{throw Error(\"disconnect called for an uninstalled wallet via the SolanaNullConnector\")},this.promptConnection=async()=>{throw Error(\"promptConnection called for an uninstalled wallet via the SolanaNullConnector\")},this.id=o,this.name=n,this.icon=r}}export{n as SolanaNullConnector};\n"],"mappings":"AAAA,SAAOA,qBAAqB,IAAIC,CAAC,QAAK,aAAa;AAAC,SAAOC,mBAAmB,IAAIC,CAAC,QAAK,qBAAqB;AAAC,SAAOC,kBAAkB,IAAIC,CAAC,QAAK,2BAA2B;AAAC,OAAM,uBAAuB;AAAC,OAAM,aAAa;AAAC,OAAM,eAAe;AAAC,OAAM,eAAe;AAAC,OAAM,uBAAuB;AAAC,OAAM,kBAAkB;AAAC,OAAM,QAAQ;AAAC,OAAM,0BAA0B;AAAC,OAAM,mBAAmB;AAAC,MAAMC,CAAC,SAASL,CAAC;EAAC,IAAIM,cAAcA,CAAA,EAAE;IAAC,OAAM;MAACC,EAAE,EAAC,IAAI,CAACA,EAAE;MAACC,IAAI,EAAC,IAAI,CAACA,IAAI;MAACC,IAAI,EAAC,IAAI,CAACA;IAAI,CAAC;EAAA;EAAC,MAAMC,UAAUA,CAAA,EAAE;IAAC,IAAI,CAACC,WAAW,GAAC,CAAC,CAAC,EAAC,IAAI,CAACC,IAAI,CAAC,aAAa,CAAC;EAAA;EAAC,MAAMC,OAAOA,CAAA,EAAE;IAAC,MAAMC,KAAK,CAAC,sEAAsE,CAAC;EAAA;EAACC,WAAWA,CAAC;IAACR,EAAE,EAACP,CAAC;IAACQ,IAAI,EAACH,CAAC;IAACI,IAAI,EAACO;EAAC,CAAC,EAAC;IAAC,KAAK,CAAC;MAACR,IAAI,EAACH;IAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,IAAI,CAACY,aAAa,GAAC,MAAM,EAAC,IAAI,CAACC,aAAa,GAAC,IAAId,CAAC,CAAC,KAAK,CAAC,EAACF,CAAC,CAAC,EAAC,IAAI,CAACiB,UAAU,GAAC,YAAS;MAAC,MAAML,KAAK,CAAC,yEAAyE,CAAC;IAAA,CAAC,EAAC,IAAI,CAACM,gBAAgB,GAAC,YAAS;MAAC,MAAMN,KAAK,CAAC,+EAA+E,CAAC;IAAA,CAAC,EAAC,IAAI,CAACP,EAAE,GAACP,CAAC,EAAC,IAAI,CAACQ,IAAI,GAACH,CAAC,EAAC,IAAI,CAACI,IAAI,GAACO,CAAC;EAAA;AAAC;AAAC,SAAOX,CAAC,IAAIgB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}