{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.fetchRetry = factory());\n})(this, function () {\n  'use strict';\n\n  var fetchRetry = function (fetch, defaults) {\n    defaults = defaults || {};\n    if (typeof fetch !== 'function') {\n      throw new ArgumentError('fetch must be a function');\n    }\n    if (typeof defaults !== 'object') {\n      throw new ArgumentError('defaults must be an object');\n    }\n    if (defaults.retries !== undefined && !isPositiveInteger(defaults.retries)) {\n      throw new ArgumentError('retries must be a positive integer');\n    }\n    if (defaults.retryDelay !== undefined && !isPositiveInteger(defaults.retryDelay) && typeof defaults.retryDelay !== 'function') {\n      throw new ArgumentError('retryDelay must be a positive integer or a function returning a positive integer');\n    }\n    if (defaults.retryOn !== undefined && !Array.isArray(defaults.retryOn) && typeof defaults.retryOn !== 'function') {\n      throw new ArgumentError('retryOn property expects an array or function');\n    }\n    var baseDefaults = {\n      retries: 3,\n      retryDelay: 1000,\n      retryOn: []\n    };\n    defaults = Object.assign(baseDefaults, defaults);\n    return function fetchRetry(input, init) {\n      var retries = defaults.retries;\n      var retryDelay = defaults.retryDelay;\n      var retryOn = defaults.retryOn;\n      if (init && init.retries !== undefined) {\n        if (isPositiveInteger(init.retries)) {\n          retries = init.retries;\n        } else {\n          throw new ArgumentError('retries must be a positive integer');\n        }\n      }\n      if (init && init.retryDelay !== undefined) {\n        if (isPositiveInteger(init.retryDelay) || typeof init.retryDelay === 'function') {\n          retryDelay = init.retryDelay;\n        } else {\n          throw new ArgumentError('retryDelay must be a positive integer or a function returning a positive integer');\n        }\n      }\n      if (init && init.retryOn) {\n        if (Array.isArray(init.retryOn) || typeof init.retryOn === 'function') {\n          retryOn = init.retryOn;\n        } else {\n          throw new ArgumentError('retryOn property expects an array or function');\n        }\n      }\n\n      // eslint-disable-next-line no-undef\n      return new Promise(function (resolve, reject) {\n        var wrappedFetch = function (attempt) {\n          // As of node 18, this is no longer needed since node comes with native support for fetch:\n          /* istanbul ignore next */\n          var _input = typeof Request !== 'undefined' && input instanceof Request ? input.clone() : input;\n          fetch(_input, init).then(function (response) {\n            if (Array.isArray(retryOn) && retryOn.indexOf(response.status) === -1) {\n              resolve(response);\n            } else if (typeof retryOn === 'function') {\n              try {\n                // eslint-disable-next-line no-undef\n                return Promise.resolve(retryOn(attempt, null, response)).then(function (retryOnResponse) {\n                  if (retryOnResponse) {\n                    retry(attempt, null, response);\n                  } else {\n                    resolve(response);\n                  }\n                }).catch(reject);\n              } catch (error) {\n                reject(error);\n              }\n            } else {\n              if (attempt < retries) {\n                retry(attempt, null, response);\n              } else {\n                resolve(response);\n              }\n            }\n          }).catch(function (error) {\n            if (typeof retryOn === 'function') {\n              try {\n                // eslint-disable-next-line no-undef\n                Promise.resolve(retryOn(attempt, error, null)).then(function (retryOnResponse) {\n                  if (retryOnResponse) {\n                    retry(attempt, error, null);\n                  } else {\n                    reject(error);\n                  }\n                }).catch(function (error) {\n                  reject(error);\n                });\n              } catch (error) {\n                reject(error);\n              }\n            } else if (attempt < retries) {\n              retry(attempt, error, null);\n            } else {\n              reject(error);\n            }\n          });\n        };\n        function retry(attempt, error, response) {\n          var delay = typeof retryDelay === 'function' ? retryDelay(attempt, error, response) : retryDelay;\n          setTimeout(function () {\n            wrappedFetch(++attempt);\n          }, delay);\n        }\n        wrappedFetch(0);\n      });\n    };\n  };\n  function isPositiveInteger(value) {\n    return Number.isInteger(value) && value >= 0;\n  }\n  function ArgumentError(message) {\n    this.name = 'ArgumentError';\n    this.message = message;\n  }\n  return fetchRetry;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","fetchRetry","fetch","defaults","ArgumentError","retries","undefined","isPositiveInteger","retryDelay","retryOn","Array","isArray","baseDefaults","Object","assign","input","init","Promise","resolve","reject","wrappedFetch","attempt","_input","Request","clone","then","response","indexOf","status","retryOnResponse","retry","catch","error","delay","setTimeout","value","Number","isInteger","message","name"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/fetch-retry/dist/fetch-retry.umd.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.fetchRetry = factory());\n})(this, (function () { 'use strict';\n\n  var fetchRetry = function (fetch, defaults) {\n    defaults = defaults || {};\n    if (typeof fetch !== 'function') {\n      throw new ArgumentError('fetch must be a function');\n    }\n\n    if (typeof defaults !== 'object') {\n      throw new ArgumentError('defaults must be an object');\n    }\n\n    if (defaults.retries !== undefined && !isPositiveInteger(defaults.retries)) {\n      throw new ArgumentError('retries must be a positive integer');\n    }\n\n    if (defaults.retryDelay !== undefined && !isPositiveInteger(defaults.retryDelay) && typeof defaults.retryDelay !== 'function') {\n      throw new ArgumentError('retryDelay must be a positive integer or a function returning a positive integer');\n    }\n\n    if (defaults.retryOn !== undefined && !Array.isArray(defaults.retryOn) && typeof defaults.retryOn !== 'function') {\n      throw new ArgumentError('retryOn property expects an array or function');\n    }\n\n    var baseDefaults = {\n      retries: 3,\n      retryDelay: 1000,\n      retryOn: [],\n    };\n\n    defaults = Object.assign(baseDefaults, defaults);\n\n    return function fetchRetry(input, init) {\n      var retries = defaults.retries;\n      var retryDelay = defaults.retryDelay;\n      var retryOn = defaults.retryOn;\n\n      if (init && init.retries !== undefined) {\n        if (isPositiveInteger(init.retries)) {\n          retries = init.retries;\n        } else {\n          throw new ArgumentError('retries must be a positive integer');\n        }\n      }\n\n      if (init && init.retryDelay !== undefined) {\n        if (isPositiveInteger(init.retryDelay) || (typeof init.retryDelay === 'function')) {\n          retryDelay = init.retryDelay;\n        } else {\n          throw new ArgumentError('retryDelay must be a positive integer or a function returning a positive integer');\n        }\n      }\n\n      if (init && init.retryOn) {\n        if (Array.isArray(init.retryOn) || (typeof init.retryOn === 'function')) {\n          retryOn = init.retryOn;\n        } else {\n          throw new ArgumentError('retryOn property expects an array or function');\n        }\n      }\n\n      // eslint-disable-next-line no-undef\n      return new Promise(function (resolve, reject) {\n        var wrappedFetch = function (attempt) {\n          // As of node 18, this is no longer needed since node comes with native support for fetch:\n          /* istanbul ignore next */\n          var _input =\n            typeof Request !== 'undefined' && input instanceof Request\n              ? input.clone()\n              : input;\n          fetch(_input, init)\n            .then(function (response) {\n              if (Array.isArray(retryOn) && retryOn.indexOf(response.status) === -1) {\n                resolve(response);\n              } else if (typeof retryOn === 'function') {\n                try {\n                  // eslint-disable-next-line no-undef\n                  return Promise.resolve(retryOn(attempt, null, response))\n                    .then(function (retryOnResponse) {\n                      if(retryOnResponse) {\n                        retry(attempt, null, response);\n                      } else {\n                        resolve(response);\n                      }\n                    }).catch(reject);\n                } catch (error) {\n                  reject(error);\n                }\n              } else {\n                if (attempt < retries) {\n                  retry(attempt, null, response);\n                } else {\n                  resolve(response);\n                }\n              }\n            })\n            .catch(function (error) {\n              if (typeof retryOn === 'function') {\n                try {\n                  // eslint-disable-next-line no-undef\n                  Promise.resolve(retryOn(attempt, error, null))\n                    .then(function (retryOnResponse) {\n                      if(retryOnResponse) {\n                        retry(attempt, error, null);\n                      } else {\n                        reject(error);\n                      }\n                    })\n                    .catch(function(error) {\n                      reject(error);\n                    });\n                } catch(error) {\n                  reject(error);\n                }\n              } else if (attempt < retries) {\n                retry(attempt, error, null);\n              } else {\n                reject(error);\n              }\n            });\n        };\n\n        function retry(attempt, error, response) {\n          var delay = (typeof retryDelay === 'function') ?\n            retryDelay(attempt, error, response) : retryDelay;\n          setTimeout(function () {\n            wrappedFetch(++attempt);\n          }, delay);\n        }\n\n        wrappedFetch(0);\n      });\n    };\n  };\n\n  function isPositiveInteger(value) {\n    return Number.isInteger(value) && value >= 0;\n  }\n\n  function ArgumentError(message) {\n    this.name = 'ArgumentError';\n    this.message = message;\n  }\n\n  return fetchRetry;\n\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}