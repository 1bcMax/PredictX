{"ast":null,"code":"import { useEffect as t } from \"react\";\nimport { PrivyClientError as e, PrivyErrorCode as r } from \"../../errors.mjs\";\nimport \"ofetch\";\nlet a = \"0x0000000000000000000000000000000000000000\";\nconst s = ({\n  destinationCurrency: t,\n  ...e\n}) => ({\n  tradeType: \"EXACT_OUTPUT\",\n  originCurrency: a,\n  destinationCurrency: t ?? a,\n  ...e\n});\nlet n = \"https://api.relay.link\",\n  i = \"https://api.testnets.relay.link\";\nconst o = async ({\n    input: t,\n    isTestnet: e\n  }) => {\n    let r = await fetch((e ? i : n) + \"/execute/swap\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(t)\n      }),\n      a = await r.json();\n    if (!(r.ok || \"string\" == typeof a.message && a.message.startsWith(\"Invalid address\"))) throw console.error(\"Relay error:\", a), Error(a.message ?? \"Error fetching quote from relay\");\n    return a;\n  },\n  l = t => {\n    let e = t.steps[0]?.items?.[0];\n    if (e) return {\n      from: e.data.from,\n      to: e.data.to,\n      value: Number(e.data.value),\n      chainId: Number(e.data.chainId),\n      data: e.data.data\n    };\n  };\nasync function c({\n  transactionHash: t,\n  isTestnet: e\n}) {\n  let r = await fetch((e ? i : n) + \"/requests/v2?hash=\" + t),\n    a = await r.json();\n  if (!r.ok) {\n    if (\"message\" in a && \"string\" == typeof a.message) throw Error(a.message);\n    throw Error(\"Error fetching request from relay\");\n  }\n  return a.requests.at(0)?.status ?? \"pending\";\n}\nfunction u({\n  transactionHash: e,\n  wallet: r,\n  isTestnet: a,\n  bridgingStatus: s,\n  setBridgingStatus: n,\n  onSuccess: i,\n  onFailure: o\n}) {\n  t(() => {\n    if (e && r && s) {\n      if ([\"delayed\", \"waiting\", \"pending\"].includes(s)) {\n        let t = setInterval(async () => {\n          try {\n            let t = await c({\n              transactionHash: e,\n              isTestnet: a\n            });\n            n(t);\n          } catch (t) {\n            console.error(t);\n          }\n        }, 1e3);\n        return () => clearInterval(t);\n      }\n      \"success\" === s ? i({\n        transactionHash: e,\n        wallet: r\n      }) : [\"refund\", \"failure\"].includes(s) && o({\n        error: new d(e, a)\n      });\n    }\n  }, [s, e, a, r]);\n}\nclass d extends e {\n  constructor(t, e) {\n    super(\"We were unable to complete the bridging transaction. Funds will be refunded on your wallet.\", void 0, r.TRANSACTION_FAILURE), this.relayLink = e ? `https://testnets.relay.link/transaction/${t}` : `https://relay.link/transaction/${t}`;\n  }\n}\nexport { d as RelayRequestError, o as getQuote, l as toEvmTransactionRequestInfoFromQuote, s as toGetQuoteInput, u as useBridgingStatusPolling };","map":{"version":3,"names":["useEffect","t","PrivyClientError","e","PrivyErrorCode","r","a","s","destinationCurrency","tradeType","originCurrency","n","i","o","input","isTestnet","fetch","method","headers","body","JSON","stringify","json","ok","message","startsWith","console","error","Error","l","steps","items","from","data","to","value","Number","chainId","c","transactionHash","requests","at","status","u","wallet","bridgingStatus","setBridgingStatus","onSuccess","onFailure","includes","setInterval","clearInterval","d","constructor","TRANSACTION_FAILURE","relayLink","RelayRequestError","getQuote","toEvmTransactionRequestInfoFromQuote","toGetQuoteInput","useBridgingStatusPolling"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/lib/funding/reservoir.mjs"],"sourcesContent":["import{useEffect as t}from\"react\";import{PrivyClientError as e,PrivyErrorCode as r}from\"../../errors.mjs\";import\"ofetch\";let a=\"0x0000000000000000000000000000000000000000\";const s=({destinationCurrency:t,...e})=>({tradeType:\"EXACT_OUTPUT\",originCurrency:a,destinationCurrency:t??a,...e});let n=\"https://api.relay.link\",i=\"https://api.testnets.relay.link\";const o=async({input:t,isTestnet:e})=>{let r=await fetch((e?i:n)+\"/execute/swap\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(t)}),a=await r.json();if(!(r.ok||\"string\"==typeof a.message&&a.message.startsWith(\"Invalid address\")))throw console.error(\"Relay error:\",a),Error(a.message??\"Error fetching quote from relay\");return a},l=t=>{let e=t.steps[0]?.items?.[0];if(e)return{from:e.data.from,to:e.data.to,value:Number(e.data.value),chainId:Number(e.data.chainId),data:e.data.data}};async function c({transactionHash:t,isTestnet:e}){let r=await fetch((e?i:n)+\"/requests/v2?hash=\"+t),a=await r.json();if(!r.ok){if(\"message\"in a&&\"string\"==typeof a.message)throw Error(a.message);throw Error(\"Error fetching request from relay\")}return a.requests.at(0)?.status??\"pending\"}function u({transactionHash:e,wallet:r,isTestnet:a,bridgingStatus:s,setBridgingStatus:n,onSuccess:i,onFailure:o}){t((()=>{if(e&&r&&s){if([\"delayed\",\"waiting\",\"pending\"].includes(s)){let t=setInterval((async()=>{try{let t=await c({transactionHash:e,isTestnet:a});n(t)}catch(t){console.error(t)}}),1e3);return()=>clearInterval(t)}\"success\"===s?i({transactionHash:e,wallet:r}):[\"refund\",\"failure\"].includes(s)&&o({error:new d(e,a)})}}),[s,e,a,r])}class d extends e{constructor(t,e){super(\"We were unable to complete the bridging transaction. Funds will be refunded on your wallet.\",void 0,r.TRANSACTION_FAILURE),this.relayLink=e?`https://testnets.relay.link/transaction/${t}`:`https://relay.link/transaction/${t}`}}export{d as RelayRequestError,o as getQuote,l as toEvmTransactionRequestInfoFromQuote,s as toGetQuoteInput,u as useBridgingStatusPolling};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}