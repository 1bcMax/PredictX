{"ast":null,"code":"import { v4 as t } from \"uuid\";\nclass e {\n  async invokeRpc({\n    method: e,\n    params: n\n  }) {\n    let r = await fetch(this.cluster.rpcUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        jsonrpc: \"2.0\",\n        id: t(),\n        method: e,\n        params: n\n      })\n    });\n    return await r.json();\n  }\n  async getBalance(t) {\n    try {\n      let e = await this.invokeRpc({\n        method: \"getBalance\",\n        params: [t]\n      });\n      return e.error ? null : BigInt(e.result.value);\n    } catch (t) {\n      return null;\n    }\n  }\n  async getTokenAccountsByOwner(t, e) {\n    try {\n      let n = await this.invokeRpc({\n        method: \"getTokenAccountsByOwner\",\n        params: [t, {\n          mint: e\n        }, {\n          encoding: \"jsonParsed\"\n        }]\n      });\n      if (n.error) return null;\n      let r = n.result.value.at(0)?.account?.data?.parsed?.info?.tokenAmount;\n      return r ? {\n        amount: BigInt(r.amount),\n        decimals: r.decimals\n      } : null;\n    } catch (t) {\n      return null;\n    }\n  }\n  async getAccountInfo(t) {\n    try {\n      let e = await this.invokeRpc({\n        method: \"getAccountInfo\",\n        params: [t, {\n          encoding: \"jsonParsed\"\n        }]\n      });\n      if (e.error) return null;\n      let n = e.result.value?.data?.parsed?.info;\n      return n ? {\n        decimals: n.decimals\n      } : null;\n    } catch (t) {\n      return null;\n    }\n  }\n  constructor(t) {\n    this.cluster = t;\n  }\n}\nexport { e as SolanaClient };","map":{"version":3,"names":["v4","t","e","invokeRpc","method","params","n","r","fetch","cluster","rpcUrl","headers","body","JSON","stringify","jsonrpc","id","json","getBalance","error","BigInt","result","value","getTokenAccountsByOwner","mint","encoding","at","account","data","parsed","info","tokenAmount","amount","decimals","getAccountInfo","constructor","SolanaClient"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/node_modules/@privy-io/js-sdk-core/dist/esm/solana/client.mjs"],"sourcesContent":["import{v4 as t}from\"uuid\";class e{async invokeRpc({method:e,params:n}){let r=await fetch(this.cluster.rpcUrl,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({jsonrpc:\"2.0\",id:t(),method:e,params:n})});return await r.json()}async getBalance(t){try{let e=await this.invokeRpc({method:\"getBalance\",params:[t]});return e.error?null:BigInt(e.result.value)}catch(t){return null}}async getTokenAccountsByOwner(t,e){try{let n=await this.invokeRpc({method:\"getTokenAccountsByOwner\",params:[t,{mint:e},{encoding:\"jsonParsed\"}]});if(n.error)return null;let r=n.result.value.at(0)?.account?.data?.parsed?.info?.tokenAmount;return r?{amount:BigInt(r.amount),decimals:r.decimals}:null}catch(t){return null}}async getAccountInfo(t){try{let e=await this.invokeRpc({method:\"getAccountInfo\",params:[t,{encoding:\"jsonParsed\"}]});if(e.error)return null;let n=e.result.value?.data?.parsed?.info;return n?{decimals:n.decimals}:null}catch(t){return null}}constructor(t){this.cluster=t}}export{e as SolanaClient};\n"],"mappings":"AAAA,SAAOA,EAAE,IAAIC,CAAC,QAAK,MAAM;AAAC,MAAMC,CAAC;EAAC,MAAMC,SAASA,CAAC;IAACC,MAAM,EAACF,CAAC;IAACG,MAAM,EAACC;EAAC,CAAC,EAAC;IAAC,IAAIC,CAAC,GAAC,MAAMC,KAAK,CAAC,IAAI,CAACC,OAAO,CAACC,MAAM,EAAC;MAACN,MAAM,EAAC,MAAM;MAACO,OAAO,EAAC;QAAC,cAAc,EAAC;MAAkB,CAAC;MAACC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;QAACC,OAAO,EAAC,KAAK;QAACC,EAAE,EAACf,CAAC,CAAC,CAAC;QAACG,MAAM,EAACF,CAAC;QAACG,MAAM,EAACC;MAAC,CAAC;IAAC,CAAC,CAAC;IAAC,OAAO,MAAMC,CAAC,CAACU,IAAI,CAAC,CAAC;EAAA;EAAC,MAAMC,UAAUA,CAACjB,CAAC,EAAC;IAAC,IAAG;MAAC,IAAIC,CAAC,GAAC,MAAM,IAAI,CAACC,SAAS,CAAC;QAACC,MAAM,EAAC,YAAY;QAACC,MAAM,EAAC,CAACJ,CAAC;MAAC,CAAC,CAAC;MAAC,OAAOC,CAAC,CAACiB,KAAK,GAAC,IAAI,GAACC,MAAM,CAAClB,CAAC,CAACmB,MAAM,CAACC,KAAK,CAAC;IAAA,CAAC,QAAMrB,CAAC,EAAC;MAAC,OAAO,IAAI;IAAA;EAAC;EAAC,MAAMsB,uBAAuBA,CAACtB,CAAC,EAACC,CAAC,EAAC;IAAC,IAAG;MAAC,IAAII,CAAC,GAAC,MAAM,IAAI,CAACH,SAAS,CAAC;QAACC,MAAM,EAAC,yBAAyB;QAACC,MAAM,EAAC,CAACJ,CAAC,EAAC;UAACuB,IAAI,EAACtB;QAAC,CAAC,EAAC;UAACuB,QAAQ,EAAC;QAAY,CAAC;MAAC,CAAC,CAAC;MAAC,IAAGnB,CAAC,CAACa,KAAK,EAAC,OAAO,IAAI;MAAC,IAAIZ,CAAC,GAACD,CAAC,CAACe,MAAM,CAACC,KAAK,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEC,OAAO,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,WAAW;MAAC,OAAOxB,CAAC,GAAC;QAACyB,MAAM,EAACZ,MAAM,CAACb,CAAC,CAACyB,MAAM,CAAC;QAACC,QAAQ,EAAC1B,CAAC,CAAC0B;MAAQ,CAAC,GAAC,IAAI;IAAA,CAAC,QAAMhC,CAAC,EAAC;MAAC,OAAO,IAAI;IAAA;EAAC;EAAC,MAAMiC,cAAcA,CAACjC,CAAC,EAAC;IAAC,IAAG;MAAC,IAAIC,CAAC,GAAC,MAAM,IAAI,CAACC,SAAS,CAAC;QAACC,MAAM,EAAC,gBAAgB;QAACC,MAAM,EAAC,CAACJ,CAAC,EAAC;UAACwB,QAAQ,EAAC;QAAY,CAAC;MAAC,CAAC,CAAC;MAAC,IAAGvB,CAAC,CAACiB,KAAK,EAAC,OAAO,IAAI;MAAC,IAAIb,CAAC,GAACJ,CAAC,CAACmB,MAAM,CAACC,KAAK,EAAEM,IAAI,EAAEC,MAAM,EAAEC,IAAI;MAAC,OAAOxB,CAAC,GAAC;QAAC2B,QAAQ,EAAC3B,CAAC,CAAC2B;MAAQ,CAAC,GAAC,IAAI;IAAA,CAAC,QAAMhC,CAAC,EAAC;MAAC,OAAO,IAAI;IAAA;EAAC;EAACkC,WAAWA,CAAClC,CAAC,EAAC;IAAC,IAAI,CAACQ,OAAO,GAACR,CAAC;EAAA;AAAC;AAAC,SAAOC,CAAC,IAAIkC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}