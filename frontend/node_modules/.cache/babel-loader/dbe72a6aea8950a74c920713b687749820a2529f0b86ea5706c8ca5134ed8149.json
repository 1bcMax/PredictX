{"ast":null,"code":"function e(e, s) {\n  let l = [],\n    a = [];\n  if (e) for (let s of e) if (s.in[0]) {\n    let e;\n    e = \"ERC721\" === s.asset.type || \"approve_for_all\" === s.in[0].value ? {\n      nftName: s.asset.name\n    } : {\n      iconUrl: s.asset.logo_url,\n      value: s.in[0].value,\n      symbol: s.asset.symbol,\n      usdValue: s.in[0].usd_price\n    }, l.push(e);\n  } else if (s.out[0]?.value) {\n    let e;\n    e = \"ERC721\" === s.asset.type || \"approve_for_all\" === s.out[0].value ? {\n      nftName: s.asset.name\n    } : {\n      iconUrl: s.asset.logo_url,\n      value: s.out[0].value,\n      symbol: s.asset.symbol,\n      usdValue: s.out[0].usd_price\n    }, a.push(e);\n  }\n  for (let e of s) for (let s of Object.keys(e.spenders)) {\n    let l;\n    l = \"ERC721\" === e.asset.type || \"approve_for_all\" === e.spenders[s]?.value ? {\n      nftName: e.asset.name\n    } : {\n      iconUrl: e.asset.logo_url,\n      value: e.spenders[s]?.value,\n      symbol: e.asset.symbol,\n      usdValue: e.spenders[s]?.usd_price\n    }, a.push(l);\n  }\n  return {\n    assetsIn: l,\n    assetsOut: a\n  };\n}\nexport { e as parseTokenDescriptions };","map":{"version":3,"names":["e","s","l","a","in","asset","type","value","nftName","name","iconUrl","logo_url","symbol","usdValue","usd_price","push","out","Object","keys","spenders","assetsIn","assetsOut","parseTokenDescriptions"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/screens/SendTransactionScreen/lib.mjs"],"sourcesContent":["function e(e,s){let l=[],a=[];if(e)for(let s of e)if(s.in[0]){let e;e=\"ERC721\"===s.asset.type||\"approve_for_all\"===s.in[0].value?{nftName:s.asset.name}:{iconUrl:s.asset.logo_url,value:s.in[0].value,symbol:s.asset.symbol,usdValue:s.in[0].usd_price},l.push(e)}else if(s.out[0]?.value){let e;e=\"ERC721\"===s.asset.type||\"approve_for_all\"===s.out[0].value?{nftName:s.asset.name}:{iconUrl:s.asset.logo_url,value:s.out[0].value,symbol:s.asset.symbol,usdValue:s.out[0].usd_price},a.push(e)}for(let e of s)for(let s of Object.keys(e.spenders)){let l;l=\"ERC721\"===e.asset.type||\"approve_for_all\"===e.spenders[s]?.value?{nftName:e.asset.name}:{iconUrl:e.asset.logo_url,value:e.spenders[s]?.value,symbol:e.asset.symbol,usdValue:e.spenders[s]?.usd_price},a.push(l)}return{assetsIn:l,assetsOut:a}}export{e as parseTokenDescriptions};\n"],"mappings":"AAAA,SAASA,CAACA,CAACA,CAAC,EAACC,CAAC,EAAC;EAAC,IAAIC,CAAC,GAAC,EAAE;IAACC,CAAC,GAAC,EAAE;EAAC,IAAGH,CAAC,EAAC,KAAI,IAAIC,CAAC,IAAID,CAAC,EAAC,IAAGC,CAAC,CAACG,EAAE,CAAC,CAAC,CAAC,EAAC;IAAC,IAAIJ,CAAC;IAACA,CAAC,GAAC,QAAQ,KAAGC,CAAC,CAACI,KAAK,CAACC,IAAI,IAAE,iBAAiB,KAAGL,CAAC,CAACG,EAAE,CAAC,CAAC,CAAC,CAACG,KAAK,GAAC;MAACC,OAAO,EAACP,CAAC,CAACI,KAAK,CAACI;IAAI,CAAC,GAAC;MAACC,OAAO,EAACT,CAAC,CAACI,KAAK,CAACM,QAAQ;MAACJ,KAAK,EAACN,CAAC,CAACG,EAAE,CAAC,CAAC,CAAC,CAACG,KAAK;MAACK,MAAM,EAACX,CAAC,CAACI,KAAK,CAACO,MAAM;MAACC,QAAQ,EAACZ,CAAC,CAACG,EAAE,CAAC,CAAC,CAAC,CAACU;IAAS,CAAC,EAACZ,CAAC,CAACa,IAAI,CAACf,CAAC,CAAC;EAAA,CAAC,MAAK,IAAGC,CAAC,CAACe,GAAG,CAAC,CAAC,CAAC,EAAET,KAAK,EAAC;IAAC,IAAIP,CAAC;IAACA,CAAC,GAAC,QAAQ,KAAGC,CAAC,CAACI,KAAK,CAACC,IAAI,IAAE,iBAAiB,KAAGL,CAAC,CAACe,GAAG,CAAC,CAAC,CAAC,CAACT,KAAK,GAAC;MAACC,OAAO,EAACP,CAAC,CAACI,KAAK,CAACI;IAAI,CAAC,GAAC;MAACC,OAAO,EAACT,CAAC,CAACI,KAAK,CAACM,QAAQ;MAACJ,KAAK,EAACN,CAAC,CAACe,GAAG,CAAC,CAAC,CAAC,CAACT,KAAK;MAACK,MAAM,EAACX,CAAC,CAACI,KAAK,CAACO,MAAM;MAACC,QAAQ,EAACZ,CAAC,CAACe,GAAG,CAAC,CAAC,CAAC,CAACF;IAAS,CAAC,EAACX,CAAC,CAACY,IAAI,CAACf,CAAC,CAAC;EAAA;EAAC,KAAI,IAAIA,CAAC,IAAIC,CAAC,EAAC,KAAI,IAAIA,CAAC,IAAIgB,MAAM,CAACC,IAAI,CAAClB,CAAC,CAACmB,QAAQ,CAAC,EAAC;IAAC,IAAIjB,CAAC;IAACA,CAAC,GAAC,QAAQ,KAAGF,CAAC,CAACK,KAAK,CAACC,IAAI,IAAE,iBAAiB,KAAGN,CAAC,CAACmB,QAAQ,CAAClB,CAAC,CAAC,EAAEM,KAAK,GAAC;MAACC,OAAO,EAACR,CAAC,CAACK,KAAK,CAACI;IAAI,CAAC,GAAC;MAACC,OAAO,EAACV,CAAC,CAACK,KAAK,CAACM,QAAQ;MAACJ,KAAK,EAACP,CAAC,CAACmB,QAAQ,CAAClB,CAAC,CAAC,EAAEM,KAAK;MAACK,MAAM,EAACZ,CAAC,CAACK,KAAK,CAACO,MAAM;MAACC,QAAQ,EAACb,CAAC,CAACmB,QAAQ,CAAClB,CAAC,CAAC,EAAEa;IAAS,CAAC,EAACX,CAAC,CAACY,IAAI,CAACb,CAAC,CAAC;EAAA;EAAC,OAAM;IAACkB,QAAQ,EAAClB,CAAC;IAACmB,SAAS,EAAClB;EAAC,CAAC;AAAA;AAAC,SAAOH,CAAC,IAAIsB,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}