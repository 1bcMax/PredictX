{"ast":null,"code":"import { arbitrum as e } from \"../chains/arbitrum.mjs\";\nimport { base as s } from \"../chains/base.mjs\";\nimport { mainnet as a } from \"../chains/mainnet.mjs\";\nimport { optimism as t } from \"../chains/optimism.mjs\";\nimport { polygon as r } from \"../chains/polygon.mjs\";\nlet n = new Set([a.id, s.id, t.id, r.id, e.id]),\n  i = new Set([a.id, s.id, r.id, t.id]),\n  c = {\n    buy: \"CARD\",\n    send: \"CRYPTO_ACCOUNT\"\n  },\n  o = {\n    USDC: \"2b92315d-eab7-5bef-84fa-089a131333f5\",\n    ETH: \"d85dce9b-5b73-5c3c-8978-522ce1d1c1b4\",\n    BTC: \"5b71fc48-3dd3-540c-809b-f8c94d0e68b5\",\n    SOL: \"4f039497-3af8-5bb3-951c-6df9afa9be1c\",\n    POL: \"026bcc1e-9163-591c-a709-34dd18b2e7a1\"\n  },\n  d = {\n    [a.id]: \"ethereum\",\n    [s.id]: \"base\",\n    [t.id]: \"optimism\",\n    [r.id]: \"polygon\",\n    [e.id]: \"arbitrum\"\n  };\nfunction m({\n  input: e,\n  amount: s,\n  blockchain: a,\n  asset: t,\n  experience: r\n}) {\n  let n = new URL(\"https://pay.coinbase.com/buy/select-asset\");\n  return n.searchParams.set(\"appId\", e.app_id), n.searchParams.set(\"sessionToken\", e.session_token), n.searchParams.set(\"defaultExperience\", r), n.searchParams.set(\"presetCryptoAmount\", s.startsWith(\".\") ? `0${s}` : s), n.searchParams.set(\"defaultNetwork\", a), n.searchParams.set(\"defaultPaymentMethod\", c[r]), n.searchParams.set(\"defaultAsset\", o[t]), n.searchParams.set(\"partnerUserId\", e.partner_user_id), {\n    url: n\n  };\n}\nconst p = (e, s) => {\n  switch (s) {\n    case \"native-currency\":\n      return n.has(e);\n    case \"USDC\":\n      return i.has(e);\n    default:\n      return console.warn(\"Unknown asset passed to Coinbase Onramp\"), !1;\n  }\n};\nfunction u(e) {\n  return d[e];\n}\nfunction b(e, s) {\n  return \"USDC\" === s ? \"USDC\" : e === r.id ? \"POL\" : \"ETH\";\n}\nexport { m as getCoinbaseOnRampUrl, p as isSupportedChainIdForCoinbaseOnramp, b as toCoinbaseAssetId, u as toCoinbaseBlockchainFromChainId };","map":{"version":3,"names":["arbitrum","e","base","s","mainnet","a","optimism","t","polygon","r","n","Set","id","i","c","buy","send","o","USDC","ETH","BTC","SOL","POL","d","m","input","amount","blockchain","asset","experience","URL","searchParams","set","app_id","session_token","startsWith","partner_user_id","url","p","has","console","warn","u","b","getCoinbaseOnRampUrl","isSupportedChainIdForCoinbaseOnramp","toCoinbaseAssetId","toCoinbaseBlockchainFromChainId"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/node_modules/@privy-io/js-sdk-core/dist/esm/funding/coinbase.mjs"],"sourcesContent":["import{arbitrum as e}from\"../chains/arbitrum.mjs\";import{base as s}from\"../chains/base.mjs\";import{mainnet as a}from\"../chains/mainnet.mjs\";import{optimism as t}from\"../chains/optimism.mjs\";import{polygon as r}from\"../chains/polygon.mjs\";let n=new Set([a.id,s.id,t.id,r.id,e.id]),i=new Set([a.id,s.id,r.id,t.id]),c={buy:\"CARD\",send:\"CRYPTO_ACCOUNT\"},o={USDC:\"2b92315d-eab7-5bef-84fa-089a131333f5\",ETH:\"d85dce9b-5b73-5c3c-8978-522ce1d1c1b4\",BTC:\"5b71fc48-3dd3-540c-809b-f8c94d0e68b5\",SOL:\"4f039497-3af8-5bb3-951c-6df9afa9be1c\",POL:\"026bcc1e-9163-591c-a709-34dd18b2e7a1\"},d={[a.id]:\"ethereum\",[s.id]:\"base\",[t.id]:\"optimism\",[r.id]:\"polygon\",[e.id]:\"arbitrum\"};function m({input:e,amount:s,blockchain:a,asset:t,experience:r}){let n=new URL(\"https://pay.coinbase.com/buy/select-asset\");return n.searchParams.set(\"appId\",e.app_id),n.searchParams.set(\"sessionToken\",e.session_token),n.searchParams.set(\"defaultExperience\",r),n.searchParams.set(\"presetCryptoAmount\",s.startsWith(\".\")?`0${s}`:s),n.searchParams.set(\"defaultNetwork\",a),n.searchParams.set(\"defaultPaymentMethod\",c[r]),n.searchParams.set(\"defaultAsset\",o[t]),n.searchParams.set(\"partnerUserId\",e.partner_user_id),{url:n}}const p=(e,s)=>{switch(s){case\"native-currency\":return n.has(e);case\"USDC\":return i.has(e);default:return console.warn(\"Unknown asset passed to Coinbase Onramp\"),!1}};function u(e){return d[e]}function b(e,s){return\"USDC\"===s?\"USDC\":e===r.id?\"POL\":\"ETH\"}export{m as getCoinbaseOnRampUrl,p as isSupportedChainIdForCoinbaseOnramp,b as toCoinbaseAssetId,u as toCoinbaseBlockchainFromChainId};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}