{"ast":null,"code":"import { base64url as t } from \"jose\";\nimport { getGuestCredentialStorageKey as e } from \"../constants.mjs\";\nimport { randomBytes as r } from \"../crypto.mjs\";\nimport { PrivyClientError as o, formatApiError as s } from \"../errors.mjs\";\nimport { guestAccountAuthenticatePath as i } from \"../paths.mjs\";\nimport a, { isLocalStorageAccessible as n } from \"../storage.mjs\";\nimport \"ofetch\";\nclass m {\n  getOrCreateGuestCredential(o) {\n    let s = e(o);\n    if (n()) {\n      if (a.get(s)) return a.get(s);\n      {\n        let e = t.encode(r(32));\n        return a.put(s, e), e;\n      }\n    }\n    return t.encode(r(32));\n  }\n  async authenticate() {\n    if (!this.api) throw new o(\"Auth flow has no API instance\");\n    try {\n      return await this.api.post(i, {\n        guest_credential: this.meta.guestCredential\n      });\n    } catch (t) {\n      throw s(t);\n    }\n  }\n  async link() {\n    throw Error(\"Linking is not supported for the guest flow\");\n  }\n  constructor(t) {\n    this.meta = {\n      guestCredential: this.getOrCreateGuestCredential(t)\n    };\n  }\n}\nexport { m as GuestFlow };","map":{"version":3,"names":["base64url","t","getGuestCredentialStorageKey","e","randomBytes","r","PrivyClientError","o","formatApiError","s","guestAccountAuthenticatePath","i","a","isLocalStorageAccessible","n","m","getOrCreateGuestCredential","get","encode","put","authenticate","api","post","guest_credential","meta","guestCredential","link","Error","constructor","GuestFlow"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/auth-flows/guest.mjs"],"sourcesContent":["import{base64url as t}from\"jose\";import{getGuestCredentialStorageKey as e}from\"../constants.mjs\";import{randomBytes as r}from\"../crypto.mjs\";import{PrivyClientError as o,formatApiError as s}from\"../errors.mjs\";import{guestAccountAuthenticatePath as i}from\"../paths.mjs\";import a,{isLocalStorageAccessible as n}from\"../storage.mjs\";import\"ofetch\";class m{getOrCreateGuestCredential(o){let s=e(o);if(n()){if(a.get(s))return a.get(s);{let e=t.encode(r(32));return a.put(s,e),e}}return t.encode(r(32))}async authenticate(){if(!this.api)throw new o(\"Auth flow has no API instance\");try{return await this.api.post(i,{guest_credential:this.meta.guestCredential})}catch(t){throw s(t)}}async link(){throw Error(\"Linking is not supported for the guest flow\")}constructor(t){this.meta={guestCredential:this.getOrCreateGuestCredential(t)}}}export{m as GuestFlow};\n"],"mappings":"AAAA,SAAOA,SAAS,IAAIC,CAAC,QAAK,MAAM;AAAC,SAAOC,4BAA4B,IAAIC,CAAC,QAAK,kBAAkB;AAAC,SAAOC,WAAW,IAAIC,CAAC,QAAK,eAAe;AAAC,SAAOC,gBAAgB,IAAIC,CAAC,EAACC,cAAc,IAAIC,CAAC,QAAK,eAAe;AAAC,SAAOC,4BAA4B,IAAIC,CAAC,QAAK,cAAc;AAAC,OAAOC,CAAC,IAAEC,wBAAwB,IAAIC,CAAC,QAAK,gBAAgB;AAAC,OAAM,QAAQ;AAAC,MAAMC,CAAC;EAACC,0BAA0BA,CAACT,CAAC,EAAC;IAAC,IAAIE,CAAC,GAACN,CAAC,CAACI,CAAC,CAAC;IAAC,IAAGO,CAAC,CAAC,CAAC,EAAC;MAAC,IAAGF,CAAC,CAACK,GAAG,CAACR,CAAC,CAAC,EAAC,OAAOG,CAAC,CAACK,GAAG,CAACR,CAAC,CAAC;MAAC;QAAC,IAAIN,CAAC,GAACF,CAAC,CAACiB,MAAM,CAACb,CAAC,CAAC,EAAE,CAAC,CAAC;QAAC,OAAOO,CAAC,CAACO,GAAG,CAACV,CAAC,EAACN,CAAC,CAAC,EAACA,CAAC;MAAA;IAAC;IAAC,OAAOF,CAAC,CAACiB,MAAM,CAACb,CAAC,CAAC,EAAE,CAAC,CAAC;EAAA;EAAC,MAAMe,YAAYA,CAAA,EAAE;IAAC,IAAG,CAAC,IAAI,CAACC,GAAG,EAAC,MAAM,IAAId,CAAC,CAAC,+BAA+B,CAAC;IAAC,IAAG;MAAC,OAAO,MAAM,IAAI,CAACc,GAAG,CAACC,IAAI,CAACX,CAAC,EAAC;QAACY,gBAAgB,EAAC,IAAI,CAACC,IAAI,CAACC;MAAe,CAAC,CAAC;IAAA,CAAC,QAAMxB,CAAC,EAAC;MAAC,MAAMQ,CAAC,CAACR,CAAC,CAAC;IAAA;EAAC;EAAC,MAAMyB,IAAIA,CAAA,EAAE;IAAC,MAAMC,KAAK,CAAC,6CAA6C,CAAC;EAAA;EAACC,WAAWA,CAAC3B,CAAC,EAAC;IAAC,IAAI,CAACuB,IAAI,GAAC;MAACC,eAAe,EAAC,IAAI,CAACT,0BAA0B,CAACf,CAAC;IAAC,CAAC;EAAA;AAAC;AAAC,SAAOc,CAAC,IAAIc,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}