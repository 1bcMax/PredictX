{"ast":null,"code":"import { z as r } from \"zod\";\nimport { InvalidInputError as i, PrivyErrorCode as o } from \"@privy-io/api-base\";\nimport { UserId as e } from \"./core.mjs\";\nimport \"bs58\";\nimport \"ethers\";\nimport \"libphonenumber-js/max\";\nconst t = r.object({\n    account_id: r.string({\n      required_error: \"Account ID must be provided\",\n      invalid_type_error: \"Account ID is not a valid string\"\n    }).min(1)\n  }),\n  p = r.object({\n    app_id: r.string({\n      required_error: \"App ID must be provided\",\n      invalid_type_error: \"App ID is not a valid string\"\n    }).min(1)\n  }).transform(({\n    app_id: r\n  }) => ({\n    app_id: r,\n    appId: r\n  })).catch(({\n    error: r\n  }) => {\n    throw new i(r.message, o.MISSING_OR_INVALID_PRIVY_APP_ID);\n  }),\n  m = r.object({\n    cursor: e.optional(),\n    limit: r.coerce.number().max(100, {\n      message: \"Query limit can be at maximum 100 records.\"\n    }).optional()\n  });\nexport { t as AccountIdFromPath, p as AppIdFromPath, m as Pagination };","map":{"version":3,"names":["z","r","InvalidInputError","i","PrivyErrorCode","o","UserId","e","t","object","account_id","string","required_error","invalid_type_error","min","p","app_id","transform","appId","catch","error","message","MISSING_OR_INVALID_PRIVY_APP_ID","m","cursor","optional","limit","coerce","number","max","AccountIdFromPath","AppIdFromPath","Pagination"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/public-api/dist/esm/schemas/api.mjs"],"sourcesContent":["import{z as r}from\"zod\";import{InvalidInputError as i,PrivyErrorCode as o}from\"@privy-io/api-base\";import{UserId as e}from\"./core.mjs\";import\"bs58\";import\"ethers\";import\"libphonenumber-js/max\";const t=r.object({account_id:r.string({required_error:\"Account ID must be provided\",invalid_type_error:\"Account ID is not a valid string\"}).min(1)}),p=r.object({app_id:r.string({required_error:\"App ID must be provided\",invalid_type_error:\"App ID is not a valid string\"}).min(1)}).transform((({app_id:r})=>({app_id:r,appId:r}))).catch((({error:r})=>{throw new i(r.message,o.MISSING_OR_INVALID_PRIVY_APP_ID)})),m=r.object({cursor:e.optional(),limit:r.coerce.number().max(100,{message:\"Query limit can be at maximum 100 records.\"}).optional()});export{t as AccountIdFromPath,p as AppIdFromPath,m as Pagination};\n"],"mappings":"AAAA,SAAOA,CAAC,IAAIC,CAAC,QAAK,KAAK;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,EAACC,cAAc,IAAIC,CAAC,QAAK,oBAAoB;AAAC,SAAOC,MAAM,IAAIC,CAAC,QAAK,YAAY;AAAC,OAAM,MAAM;AAAC,OAAM,QAAQ;AAAC,OAAM,uBAAuB;AAAC,MAAMC,CAAC,GAACP,CAAC,CAACQ,MAAM,CAAC;IAACC,UAAU,EAACT,CAAC,CAACU,MAAM,CAAC;MAACC,cAAc,EAAC,6BAA6B;MAACC,kBAAkB,EAAC;IAAkC,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC;EAAC,CAAC,CAAC;EAACC,CAAC,GAACd,CAAC,CAACQ,MAAM,CAAC;IAACO,MAAM,EAACf,CAAC,CAACU,MAAM,CAAC;MAACC,cAAc,EAAC,yBAAyB;MAACC,kBAAkB,EAAC;IAA8B,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC;EAAC,CAAC,CAAC,CAACG,SAAS,CAAE,CAAC;IAACD,MAAM,EAACf;EAAC,CAAC,MAAI;IAACe,MAAM,EAACf,CAAC;IAACiB,KAAK,EAACjB;EAAC,CAAC,CAAE,CAAC,CAACkB,KAAK,CAAE,CAAC;IAACC,KAAK,EAACnB;EAAC,CAAC,KAAG;IAAC,MAAM,IAAIE,CAAC,CAACF,CAAC,CAACoB,OAAO,EAAChB,CAAC,CAACiB,+BAA+B,CAAC;EAAA,CAAE,CAAC;EAACC,CAAC,GAACtB,CAAC,CAACQ,MAAM,CAAC;IAACe,MAAM,EAACjB,CAAC,CAACkB,QAAQ,CAAC,CAAC;IAACC,KAAK,EAACzB,CAAC,CAAC0B,MAAM,CAACC,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,GAAG,EAAC;MAACR,OAAO,EAAC;IAA4C,CAAC,CAAC,CAACI,QAAQ,CAAC;EAAC,CAAC,CAAC;AAAC,SAAOjB,CAAC,IAAIsB,iBAAiB,EAACf,CAAC,IAAIgB,aAAa,EAACR,CAAC,IAAIS,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}