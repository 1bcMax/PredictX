{"ast":null,"code":"import { z as e } from \"zod\";\nimport { UnauthorizedError as t, PrivyErrorCode as o } from \"@privy-io/api-base\";\nimport { SUPPORTED_OAUTH_PROVIDERS as r } from \"../constants/oauth.mjs\";\nimport { BaseAccountTransferInput as i } from \"./account-transfer.mjs\";\nimport { AuthenticateMode as s } from \"./core.mjs\";\nimport { User as n, OAuthTokens as a } from \"./user.mjs\";\nimport \"bs58\";\nimport \"ethers\";\nimport \"libphonenumber-js/max\";\nimport \"./smart-wallet-config.mjs\";\nimport \"../constants/smart-wallets.mjs\";\nconst p = e.enum(r, {\n    invalid_type_error: \"Please specify a supported provider.\",\n    required_error: \"Please specify a supported provider.\"\n  }),\n  m = p.or(e.custom(e => \"string\" == typeof e && /^privy:[a-z0-9]{25}$/i.test(e), {\n    message: \"Please specify a supported provider.\"\n  })),\n  c = e.object({\n    authorization_code: e.string(),\n    state_code: e.string(),\n    code_verifier: e.string().min(43).max(128).optional(),\n    code_type: e.enum([\"raw\"]).optional()\n  }).merge(s).catch(() => {\n    throw new t(\"Please specify authorization_code and state_code.\", o.INVALID_CREDENTIALS);\n  }),\n  l = e.object({\n    redirect_to: e.string({\n      required_error: \"Please provide a redirect_to value.\"\n    }),\n    provider: m,\n    token: e.string().optional(),\n    state_code: e.string().optional(),\n    code_challenge: e.string().optional()\n  }),\n  d = e.object({\n    authorization_code: e.string(),\n    state_code: e.string(),\n    code_verifier: e.string().min(43).max(128).optional(),\n    code_type: e.enum([\"raw\"]).optional()\n  }),\n  u = e.object({\n    subject: e.string(),\n    provider: m\n  }),\n  g = e.object({\n    url: e.string()\n  }),\n  _ = n.extend({\n    oauth_tokens: a.optional()\n  }),\n  f = i.extend({\n    userInfo: e.object({\n      subject: e.string(),\n      name: e.string().optional(),\n      username: e.string().optional(),\n      profilePictureUrl: e.string().optional(),\n      email: e.string().optional().nullable(),\n      vanityName: e.string().optional()\n    })\n  });\nexport { c as AuthenticateOauthInput, p as ExternalOAuthProvider, d as LinkOAuthInput, l as OAuthInitInput, g as OAuthInitResponse, _ as OAuthLinkResponse, m as OAuthProvider, u as OAuthUnlinkInput, r as SUPPORTED_OAUTH_PROVIDERS, f as TransferOAuthInput };","map":{"version":3,"names":["z","e","UnauthorizedError","t","PrivyErrorCode","o","SUPPORTED_OAUTH_PROVIDERS","r","BaseAccountTransferInput","i","AuthenticateMode","s","User","n","OAuthTokens","a","p","enum","invalid_type_error","required_error","m","or","custom","test","message","c","object","authorization_code","string","state_code","code_verifier","min","max","optional","code_type","merge","catch","INVALID_CREDENTIALS","l","redirect_to","provider","token","code_challenge","d","u","subject","g","url","_","extend","oauth_tokens","f","userInfo","name","username","profilePictureUrl","email","nullable","vanityName","AuthenticateOauthInput","ExternalOAuthProvider","LinkOAuthInput","OAuthInitInput","OAuthInitResponse","OAuthLinkResponse","OAuthProvider","OAuthUnlinkInput","TransferOAuthInput"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/public-api/dist/esm/schemas/oauth.mjs"],"sourcesContent":["import{z as e}from\"zod\";import{UnauthorizedError as t,PrivyErrorCode as o}from\"@privy-io/api-base\";import{SUPPORTED_OAUTH_PROVIDERS as r}from\"../constants/oauth.mjs\";import{BaseAccountTransferInput as i}from\"./account-transfer.mjs\";import{AuthenticateMode as s}from\"./core.mjs\";import{User as n,OAuthTokens as a}from\"./user.mjs\";import\"bs58\";import\"ethers\";import\"libphonenumber-js/max\";import\"./smart-wallet-config.mjs\";import\"../constants/smart-wallets.mjs\";const p=e.enum(r,{invalid_type_error:\"Please specify a supported provider.\",required_error:\"Please specify a supported provider.\"}),m=p.or(e.custom((e=>\"string\"==typeof e&&/^privy:[a-z0-9]{25}$/i.test(e)),{message:\"Please specify a supported provider.\"})),c=e.object({authorization_code:e.string(),state_code:e.string(),code_verifier:e.string().min(43).max(128).optional(),code_type:e.enum([\"raw\"]).optional()}).merge(s).catch((()=>{throw new t(\"Please specify authorization_code and state_code.\",o.INVALID_CREDENTIALS)})),l=e.object({redirect_to:e.string({required_error:\"Please provide a redirect_to value.\"}),provider:m,token:e.string().optional(),state_code:e.string().optional(),code_challenge:e.string().optional()}),d=e.object({authorization_code:e.string(),state_code:e.string(),code_verifier:e.string().min(43).max(128).optional(),code_type:e.enum([\"raw\"]).optional()}),u=e.object({subject:e.string(),provider:m}),g=e.object({url:e.string()}),_=n.extend({oauth_tokens:a.optional()}),f=i.extend({userInfo:e.object({subject:e.string(),name:e.string().optional(),username:e.string().optional(),profilePictureUrl:e.string().optional(),email:e.string().optional().nullable(),vanityName:e.string().optional()})});export{c as AuthenticateOauthInput,p as ExternalOAuthProvider,d as LinkOAuthInput,l as OAuthInitInput,g as OAuthInitResponse,_ as OAuthLinkResponse,m as OAuthProvider,u as OAuthUnlinkInput,r as SUPPORTED_OAUTH_PROVIDERS,f as TransferOAuthInput};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}