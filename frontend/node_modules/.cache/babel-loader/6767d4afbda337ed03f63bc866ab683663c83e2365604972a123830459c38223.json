{"ast":null,"code":"import { PrivyClientError as e } from \"../../Error.mjs\";\nimport { getUserValidDelegateWallets as t, getRootWalletForDelegation as r } from \"./utils.mjs\";\nimport \"../../utils/getAllUserEmbeddedEthereumWallets.mjs\";\nimport \"../../utils/getAllUserEmbeddedSolanaWallets.mjs\";\nimport \"../../utils/getUserEmbeddedEthereumWallet.mjs\";\nimport \"../../utils/getUserEmbeddedSolanaWallet.mjs\";\nconst d = d => async ({\n  address: a,\n  chainType: s\n}) => {\n  let {\n    user: l\n  } = await d.user.get();\n  if (!l) throw new e({\n    code: \"delegated_actions_before_logged_in\",\n    error: \"Must be logged in to delegate wallets\"\n  });\n  if (\"solana\" !== s && \"ethereum\" !== s) throw new e({\n    code: \"unsupported_chain_type\",\n    error: \"Only Solana and Ethereum embedded wallets are supported for delegation and revocation.\"\n  });\n  let o = t(l).find(e => e.chain_type === s && e.address === a);\n  if (!o) throw new e({\n    code: \"delegated_actions_wallet_not_found\",\n    error: \"Address to delegate is not associated with current user.\"\n  });\n  if (o.delegated) return {\n    user: l\n  };\n  let i = r(o, l);\n  if (!i) throw new e({\n    code: \"delegated_actions_wallet_not_found\",\n    error: \"Address to delegate is not associated with current user.\"\n  });\n  await d.embeddedWallet.delegateWallets({\n    rootWallet: {\n      address: i.address,\n      chainType: i.chain_type,\n      imported: i.imported\n    },\n    delegatedWallets: [{\n      address: o.address,\n      chainType: o.chain_type,\n      walletIndex: o.wallet_index\n    }]\n  });\n  let {\n    user: n\n  } = await d.user.get();\n  return {\n    user: n\n  };\n};\nexport { d as delegateWallet };","map":{"version":3,"names":["PrivyClientError","e","getUserValidDelegateWallets","t","getRootWalletForDelegation","r","d","address","a","chainType","s","user","l","get","code","error","o","find","chain_type","delegated","i","embeddedWallet","delegateWallets","rootWallet","imported","delegatedWallets","walletIndex","wallet_index","n","delegateWallet"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/node_modules/@privy-io/js-sdk-core/dist/esm/action/delegatedActions/delegateWallet.mjs"],"sourcesContent":["import{PrivyClientError as e}from\"../../Error.mjs\";import{getUserValidDelegateWallets as t,getRootWalletForDelegation as r}from\"./utils.mjs\";import\"../../utils/getAllUserEmbeddedEthereumWallets.mjs\";import\"../../utils/getAllUserEmbeddedSolanaWallets.mjs\";import\"../../utils/getUserEmbeddedEthereumWallet.mjs\";import\"../../utils/getUserEmbeddedSolanaWallet.mjs\";const d=d=>async({address:a,chainType:s})=>{let{user:l}=await d.user.get();if(!l)throw new e({code:\"delegated_actions_before_logged_in\",error:\"Must be logged in to delegate wallets\"});if(\"solana\"!==s&&\"ethereum\"!==s)throw new e({code:\"unsupported_chain_type\",error:\"Only Solana and Ethereum embedded wallets are supported for delegation and revocation.\"});let o=t(l).find((e=>e.chain_type===s&&e.address===a));if(!o)throw new e({code:\"delegated_actions_wallet_not_found\",error:\"Address to delegate is not associated with current user.\"});if(o.delegated)return{user:l};let i=r(o,l);if(!i)throw new e({code:\"delegated_actions_wallet_not_found\",error:\"Address to delegate is not associated with current user.\"});await d.embeddedWallet.delegateWallets({rootWallet:{address:i.address,chainType:i.chain_type,imported:i.imported},delegatedWallets:[{address:o.address,chainType:o.chain_type,walletIndex:o.wallet_index}]});let{user:n}=await d.user.get();return{user:n}};export{d as delegateWallet};\n"],"mappings":"AAAA,SAAOA,gBAAgB,IAAIC,CAAC,QAAK,iBAAiB;AAAC,SAAOC,2BAA2B,IAAIC,CAAC,EAACC,0BAA0B,IAAIC,CAAC,QAAK,aAAa;AAAC,OAAM,mDAAmD;AAAC,OAAM,iDAAiD;AAAC,OAAM,+CAA+C;AAAC,OAAM,6CAA6C;AAAC,MAAMC,CAAC,GAACA,CAAC,IAAE,OAAM;EAACC,OAAO,EAACC,CAAC;EAACC,SAAS,EAACC;AAAC,CAAC,KAAG;EAAC,IAAG;IAACC,IAAI,EAACC;EAAC,CAAC,GAAC,MAAMN,CAAC,CAACK,IAAI,CAACE,GAAG,CAAC,CAAC;EAAC,IAAG,CAACD,CAAC,EAAC,MAAM,IAAIX,CAAC,CAAC;IAACa,IAAI,EAAC,oCAAoC;IAACC,KAAK,EAAC;EAAuC,CAAC,CAAC;EAAC,IAAG,QAAQ,KAAGL,CAAC,IAAE,UAAU,KAAGA,CAAC,EAAC,MAAM,IAAIT,CAAC,CAAC;IAACa,IAAI,EAAC,wBAAwB;IAACC,KAAK,EAAC;EAAwF,CAAC,CAAC;EAAC,IAAIC,CAAC,GAACb,CAAC,CAACS,CAAC,CAAC,CAACK,IAAI,CAAEhB,CAAC,IAAEA,CAAC,CAACiB,UAAU,KAAGR,CAAC,IAAET,CAAC,CAACM,OAAO,KAAGC,CAAE,CAAC;EAAC,IAAG,CAACQ,CAAC,EAAC,MAAM,IAAIf,CAAC,CAAC;IAACa,IAAI,EAAC,oCAAoC;IAACC,KAAK,EAAC;EAA0D,CAAC,CAAC;EAAC,IAAGC,CAAC,CAACG,SAAS,EAAC,OAAM;IAACR,IAAI,EAACC;EAAC,CAAC;EAAC,IAAIQ,CAAC,GAACf,CAAC,CAACW,CAAC,EAACJ,CAAC,CAAC;EAAC,IAAG,CAACQ,CAAC,EAAC,MAAM,IAAInB,CAAC,CAAC;IAACa,IAAI,EAAC,oCAAoC;IAACC,KAAK,EAAC;EAA0D,CAAC,CAAC;EAAC,MAAMT,CAAC,CAACe,cAAc,CAACC,eAAe,CAAC;IAACC,UAAU,EAAC;MAAChB,OAAO,EAACa,CAAC,CAACb,OAAO;MAACE,SAAS,EAACW,CAAC,CAACF,UAAU;MAACM,QAAQ,EAACJ,CAAC,CAACI;IAAQ,CAAC;IAACC,gBAAgB,EAAC,CAAC;MAAClB,OAAO,EAACS,CAAC,CAACT,OAAO;MAACE,SAAS,EAACO,CAAC,CAACE,UAAU;MAACQ,WAAW,EAACV,CAAC,CAACW;IAAY,CAAC;EAAC,CAAC,CAAC;EAAC,IAAG;IAAChB,IAAI,EAACiB;EAAC,CAAC,GAAC,MAAMtB,CAAC,CAACK,IAAI,CAACE,GAAG,CAAC,CAAC;EAAC,OAAM;IAACF,IAAI,EAACiB;EAAC,CAAC;AAAA,CAAC;AAAC,SAAOtB,CAAC,IAAIuB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}