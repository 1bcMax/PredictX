{"ast":null,"code":"import { PrivyIframeError as e } from \"./errors.mjs\";\nimport \"./types.mjs\";\nasync function r(r, t, i, a, n, o = !1) {\n  let c = o,\n    f = async f => {\n      if (c && t && t.length > 0) {\n        f === (o ? 0 : 1) ? n(\"configureMfa\", \"onMfaRequired\", {\n          mfaMethods: t\n        }) : a.current?.reject(new e(\"missing_or_invalid_mfa\", \"MFA verification failed, retry.\"));\n        let c = await new Promise((r, t) => {\n          i.current = {\n            resolve: r,\n            reject: t\n          }, setTimeout(() => {\n            let r = new e(\"mfa_timeout\", \"Timed out waiting for MFA code\");\n            a.current?.reject(r), t(r);\n          }, 3e5);\n        });\n        return await r(c);\n      }\n      return await r();\n    },\n    m = null;\n  for (let e = 0; e < 4; e++) try {\n    m = await f(e), a.current?.resolve(void 0);\n    break;\n  } catch (e) {\n    if (\"missing_or_invalid_mfa\" !== e.type) throw a.current?.resolve(void 0), e;\n    c = !0;\n  }\n  if (null === m) {\n    let r = new e(\"mfa_verification_max_attempts_reached\", \"Max MFA verification attempts reached\");\n    throw a.current?.reject(r), r;\n  }\n  return m;\n}\nexport { r as invokeWithMfa };","map":{"version":3,"names":["PrivyIframeError","e","r","t","i","a","n","o","c","f","length","mfaMethods","current","reject","Promise","resolve","setTimeout","m","type","invokeWithMfa"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/embedded-wallets/invokeWithMfa.mjs"],"sourcesContent":["import{PrivyIframeError as e}from\"./errors.mjs\";import\"./types.mjs\";async function r(r,t,i,a,n,o=!1){let c=o,f=async f=>{if(c&&t&&t.length>0){f===(o?0:1)?n(\"configureMfa\",\"onMfaRequired\",{mfaMethods:t}):a.current?.reject(new e(\"missing_or_invalid_mfa\",\"MFA verification failed, retry.\"));let c=await new Promise(((r,t)=>{i.current={resolve:r,reject:t},setTimeout((()=>{let r=new e(\"mfa_timeout\",\"Timed out waiting for MFA code\");a.current?.reject(r),t(r)}),3e5)}));return await r(c)}return await r()},m=null;for(let e=0;e<4;e++)try{m=await f(e),a.current?.resolve(void 0);break}catch(e){if(\"missing_or_invalid_mfa\"!==e.type)throw a.current?.resolve(void 0),e;c=!0}if(null===m){let r=new e(\"mfa_verification_max_attempts_reached\",\"Max MFA verification attempts reached\");throw a.current?.reject(r),r}return m}export{r as invokeWithMfa};\n"],"mappings":"AAAA,SAAOA,gBAAgB,IAAIC,CAAC,QAAK,cAAc;AAAC,OAAM,aAAa;AAAC,eAAeC,CAACA,CAACA,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,GAAC,CAAC,CAAC,EAAC;EAAC,IAAIC,CAAC,GAACD,CAAC;IAACE,CAAC,GAAC,MAAMA,CAAC,IAAE;MAAC,IAAGD,CAAC,IAAEL,CAAC,IAAEA,CAAC,CAACO,MAAM,GAAC,CAAC,EAAC;QAACD,CAAC,MAAIF,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAACD,CAAC,CAAC,cAAc,EAAC,eAAe,EAAC;UAACK,UAAU,EAACR;QAAC,CAAC,CAAC,GAACE,CAAC,CAACO,OAAO,EAAEC,MAAM,CAAC,IAAIZ,CAAC,CAAC,wBAAwB,EAAC,iCAAiC,CAAC,CAAC;QAAC,IAAIO,CAAC,GAAC,MAAM,IAAIM,OAAO,CAAE,CAACZ,CAAC,EAACC,CAAC,KAAG;UAACC,CAAC,CAACQ,OAAO,GAAC;YAACG,OAAO,EAACb,CAAC;YAACW,MAAM,EAACV;UAAC,CAAC,EAACa,UAAU,CAAE,MAAI;YAAC,IAAId,CAAC,GAAC,IAAID,CAAC,CAAC,aAAa,EAAC,gCAAgC,CAAC;YAACI,CAAC,CAACO,OAAO,EAAEC,MAAM,CAACX,CAAC,CAAC,EAACC,CAAC,CAACD,CAAC,CAAC;UAAA,CAAC,EAAE,GAAG,CAAC;QAAA,CAAE,CAAC;QAAC,OAAO,MAAMA,CAAC,CAACM,CAAC,CAAC;MAAA;MAAC,OAAO,MAAMN,CAAC,CAAC,CAAC;IAAA,CAAC;IAACe,CAAC,GAAC,IAAI;EAAC,KAAI,IAAIhB,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,CAAC,EAACA,CAAC,EAAE,EAAC,IAAG;IAACgB,CAAC,GAAC,MAAMR,CAAC,CAACR,CAAC,CAAC,EAACI,CAAC,CAACO,OAAO,EAAEG,OAAO,CAAC,KAAK,CAAC,CAAC;IAAC;EAAK,CAAC,QAAMd,CAAC,EAAC;IAAC,IAAG,wBAAwB,KAAGA,CAAC,CAACiB,IAAI,EAAC,MAAMb,CAAC,CAACO,OAAO,EAAEG,OAAO,CAAC,KAAK,CAAC,CAAC,EAACd,CAAC;IAACO,CAAC,GAAC,CAAC,CAAC;EAAA;EAAC,IAAG,IAAI,KAAGS,CAAC,EAAC;IAAC,IAAIf,CAAC,GAAC,IAAID,CAAC,CAAC,uCAAuC,EAAC,uCAAuC,CAAC;IAAC,MAAMI,CAAC,CAACO,OAAO,EAAEC,MAAM,CAACX,CAAC,CAAC,EAACA,CAAC;EAAA;EAAC,OAAOe,CAAC;AAAA;AAAC,SAAOf,CAAC,IAAIiB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}