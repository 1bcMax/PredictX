{"ast":null,"code":"import { isVersionedTransaction as o } from \"./isVersionedTransaction.mjs\";\nfunction e(e, t) {\n  let n = (o(e) ? e.message : e.compileMessage()).staticAccountKeys.find(o => o.toBase58() === t);\n  if (!n) throw Error(`Transaction does not contain public key ${t}`);\n  return n;\n}\nexport { e as getWalletPublicKeyFromTransaction };","map":{"version":3,"names":["isVersionedTransaction","o","e","t","n","message","compileMessage","staticAccountKeys","find","toBase58","Error","getWalletPublicKeyFromTransaction"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/node_modules/@privy-io/js-sdk-core/dist/esm/solana/getWalletPublicKeyFromTransaction.mjs"],"sourcesContent":["import{isVersionedTransaction as o}from\"./isVersionedTransaction.mjs\";function e(e,t){let n=(o(e)?e.message:e.compileMessage()).staticAccountKeys.find((o=>o.toBase58()===t));if(!n)throw Error(`Transaction does not contain public key ${t}`);return n}export{e as getWalletPublicKeyFromTransaction};\n"],"mappings":"AAAA,SAAOA,sBAAsB,IAAIC,CAAC,QAAK,8BAA8B;AAAC,SAASC,CAACA,CAACA,CAAC,EAACC,CAAC,EAAC;EAAC,IAAIC,CAAC,GAAC,CAACH,CAAC,CAACC,CAAC,CAAC,GAACA,CAAC,CAACG,OAAO,GAACH,CAAC,CAACI,cAAc,CAAC,CAAC,EAAEC,iBAAiB,CAACC,IAAI,CAAEP,CAAC,IAAEA,CAAC,CAACQ,QAAQ,CAAC,CAAC,KAAGN,CAAE,CAAC;EAAC,IAAG,CAACC,CAAC,EAAC,MAAMM,KAAK,CAAC,2CAA2CP,CAAC,EAAE,CAAC;EAAC,OAAOC,CAAC;AAAA;AAAC,SAAOF,CAAC,IAAIS,iCAAiC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}