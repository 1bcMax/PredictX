{"ast":null,"code":"import { z as e } from \"zod\";\nimport { Email as r, WalletAddress as n, SolanaWalletAddress as a } from \"./core.mjs\";\nimport \"bs58\";\nimport \"ethers\";\nimport \"libphonenumber-js/max\";\nlet t = e.enum([\"ach_bank_transfer\", \"credit_debit_card\", \"gbp_bank_transfer\", \"gbp_open_banking_payment\", \"mobile_wallet\", \"sepa_bank_transfer\", \"sepa_open_banking_payment\", \"pix_instant_payment\", \"yellow_card_bank_transfer\"]),\n  _ = e.enum([\"AVAX_CCHAIN\", \"CELO_CELO\", \"CUSD_CELO\", \"DAI_ETHEREUM\", \"ETH_ETHEREUM\", \"ETH_ARBITRUM\", \"ETH_OPTIMISM\", \"ETH_POLYGON\", \"ETH_BASE\", \"FIL_FVM\", \"MATIC_ETHEREUM\", \"MATIC_POLYGON\", \"USDC_ETHEREUM\", \"USDC_ARBITRUM\", \"USDC_OPTIMISM\", \"USDC_POLYGON\", \"USDC_BASE\", \"USDT_ETHEREUM\", \"USDT_POLYGON\", \"WETH_POLYGON\", \"WBTC_ETHEREUM\", \"BNB_BNB\", \"BNB_BSC\", \"CELO\", \"CUSD\", \"DAI\", \"ETH\", \"FIL\", \"MATIC\", \"USDC\", \"USDT\", \"WETH\", \"WBTC\"]),\n  E = e.object({\n    quoteCurrencyAmount: e.number().optional(),\n    email: r.optional(),\n    paymentMethod: t.optional(),\n    uiConfig: e.object({\n      accentColor: e.string().optional(),\n      theme: e.enum([\"light\", \"dark\"]).optional()\n    }).optional()\n  }),\n  T = e.object({\n    address: n,\n    config: E.extend({\n      currencyCode: _.transform(e => {\n        switch (e) {\n          case \"AVAX_CCHAIN\":\n            return \"AVAX_CCHAIN\";\n          case \"CELO_CELO\":\n            return \"CELO\";\n          case \"CUSD_CELO\":\n            return \"CUSD\";\n          case \"DAI_ETHEREUM\":\n            return \"DAI\";\n          case \"ETH_ETHEREUM\":\n            return \"ETH\";\n          case \"ETH_ARBITRUM\":\n            return \"ETH_ARBITRUM\";\n          case \"ETH_OPTIMISM\":\n            return \"ETH_OPTIMISM\";\n          case \"ETH_POLYGON\":\n            return \"ETH_POLYGON\";\n          case \"ETH_BASE\":\n            return \"ETH_BASE\";\n          case \"FIL_FVM\":\n            return \"FIL\";\n          case \"MATIC_ETHEREUM\":\n            return \"MATIC\";\n          case \"MATIC_POLYGON\":\n            return \"MATIC_POLYGON\";\n          case \"USDC_ETHEREUM\":\n            return \"USDC\";\n          case \"USDC_ARBITRUM\":\n            return \"USDC_ARBITRUM\";\n          case \"USDC_OPTIMISM\":\n            return \"USDC_OPTIMISM\";\n          case \"USDC_POLYGON\":\n            return \"USDC_POLYGON\";\n          case \"USDC_BASE\":\n            return \"USDC_BASE\";\n          case \"USDT_ETHEREUM\":\n            return \"USDT\";\n          case \"USDT_POLYGON\":\n            return \"USDT_POLYGON\";\n          case \"WETH_POLYGON\":\n            return \"WETH\";\n          case \"WBTC_ETHEREUM\":\n            return \"WBTC\";\n          case \"BNB_BNB\":\n            return \"BNB\";\n          case \"BNB_BSC\":\n            return \"BNB_BSC\";\n          case \"CELO\":\n          case \"CUSD\":\n          case \"DAI\":\n          case \"ETH\":\n          case \"FIL\":\n          case \"MATIC\":\n          case \"USDC\":\n          case \"USDT\":\n          case \"WETH\":\n          case \"WBTC\":\n            return e;\n          default:\n            throw Error(`Invalid currency code: ${e}`);\n        }\n      }).optional()\n    })\n  }),\n  c = e.object({\n    address: a,\n    config: E.extend({\n      currencyCode: e.enum([\"SOL\", \"USDC_SOL\"]).optional()\n    })\n  });\nconst o = e.union([T, c]).and(e.object({\n    useSandbox: e.boolean().optional().default(!1)\n  })),\n  C = e.object({\n    signedUrl: e.string(),\n    externalTransactionId: e.string()\n  });\nexport { o as MoonpayOnRampSignInput, C as MoonpayOnRampSignResponse };","map":{"version":3,"names":["z","e","Email","r","WalletAddress","n","SolanaWalletAddress","a","t","enum","_","E","object","quoteCurrencyAmount","number","optional","email","paymentMethod","uiConfig","accentColor","string","theme","T","address","config","extend","currencyCode","transform","Error","c","o","union","and","useSandbox","boolean","default","C","signedUrl","externalTransactionId","MoonpayOnRampSignInput","MoonpayOnRampSignResponse"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/public-api/dist/esm/schemas/moonpay.mjs"],"sourcesContent":["import{z as e}from\"zod\";import{Email as r,WalletAddress as n,SolanaWalletAddress as a}from\"./core.mjs\";import\"bs58\";import\"ethers\";import\"libphonenumber-js/max\";let t=e.enum([\"ach_bank_transfer\",\"credit_debit_card\",\"gbp_bank_transfer\",\"gbp_open_banking_payment\",\"mobile_wallet\",\"sepa_bank_transfer\",\"sepa_open_banking_payment\",\"pix_instant_payment\",\"yellow_card_bank_transfer\"]),_=e.enum([\"AVAX_CCHAIN\",\"CELO_CELO\",\"CUSD_CELO\",\"DAI_ETHEREUM\",\"ETH_ETHEREUM\",\"ETH_ARBITRUM\",\"ETH_OPTIMISM\",\"ETH_POLYGON\",\"ETH_BASE\",\"FIL_FVM\",\"MATIC_ETHEREUM\",\"MATIC_POLYGON\",\"USDC_ETHEREUM\",\"USDC_ARBITRUM\",\"USDC_OPTIMISM\",\"USDC_POLYGON\",\"USDC_BASE\",\"USDT_ETHEREUM\",\"USDT_POLYGON\",\"WETH_POLYGON\",\"WBTC_ETHEREUM\",\"BNB_BNB\",\"BNB_BSC\",\"CELO\",\"CUSD\",\"DAI\",\"ETH\",\"FIL\",\"MATIC\",\"USDC\",\"USDT\",\"WETH\",\"WBTC\"]),E=e.object({quoteCurrencyAmount:e.number().optional(),email:r.optional(),paymentMethod:t.optional(),uiConfig:e.object({accentColor:e.string().optional(),theme:e.enum([\"light\",\"dark\"]).optional()}).optional()}),T=e.object({address:n,config:E.extend({currencyCode:_.transform((e=>{switch(e){case\"AVAX_CCHAIN\":return\"AVAX_CCHAIN\";case\"CELO_CELO\":return\"CELO\";case\"CUSD_CELO\":return\"CUSD\";case\"DAI_ETHEREUM\":return\"DAI\";case\"ETH_ETHEREUM\":return\"ETH\";case\"ETH_ARBITRUM\":return\"ETH_ARBITRUM\";case\"ETH_OPTIMISM\":return\"ETH_OPTIMISM\";case\"ETH_POLYGON\":return\"ETH_POLYGON\";case\"ETH_BASE\":return\"ETH_BASE\";case\"FIL_FVM\":return\"FIL\";case\"MATIC_ETHEREUM\":return\"MATIC\";case\"MATIC_POLYGON\":return\"MATIC_POLYGON\";case\"USDC_ETHEREUM\":return\"USDC\";case\"USDC_ARBITRUM\":return\"USDC_ARBITRUM\";case\"USDC_OPTIMISM\":return\"USDC_OPTIMISM\";case\"USDC_POLYGON\":return\"USDC_POLYGON\";case\"USDC_BASE\":return\"USDC_BASE\";case\"USDT_ETHEREUM\":return\"USDT\";case\"USDT_POLYGON\":return\"USDT_POLYGON\";case\"WETH_POLYGON\":return\"WETH\";case\"WBTC_ETHEREUM\":return\"WBTC\";case\"BNB_BNB\":return\"BNB\";case\"BNB_BSC\":return\"BNB_BSC\";case\"CELO\":case\"CUSD\":case\"DAI\":case\"ETH\":case\"FIL\":case\"MATIC\":case\"USDC\":case\"USDT\":case\"WETH\":case\"WBTC\":return e;default:throw Error(`Invalid currency code: ${e}`)}})).optional()})}),c=e.object({address:a,config:E.extend({currencyCode:e.enum([\"SOL\",\"USDC_SOL\"]).optional()})});const o=e.union([T,c]).and(e.object({useSandbox:e.boolean().optional().default(!1)})),C=e.object({signedUrl:e.string(),externalTransactionId:e.string()});export{o as MoonpayOnRampSignInput,C as MoonpayOnRampSignResponse};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}