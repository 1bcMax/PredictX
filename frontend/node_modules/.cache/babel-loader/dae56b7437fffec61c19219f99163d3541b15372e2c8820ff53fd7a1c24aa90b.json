{"ast":null,"code":"import { arbitrum as r } from \"../chains/arbitrum.mjs\";\nimport { avalanche as e } from \"../chains/avalanche.mjs\";\nimport { base as n } from \"../chains/base.mjs\";\nimport { celo as t } from \"../chains/celo.mjs\";\nimport { mainnet as i } from \"../chains/mainnet.mjs\";\nimport { optimism as a } from \"../chains/optimism.mjs\";\nimport { polygon as o } from \"../chains/polygon.mjs\";\nconst c = {\n  prod: {\n    url: \"https://api.moonpay.com/v1\",\n    key: \"pk_live_hirbpu0cVcLHrjktC9l7fbc9ctjv0SL\"\n  },\n  sandbox: {\n    url: \"https://api.moonpay.com/v1\",\n    key: \"pk_test_fqWjXZMSFwloh7orvJsRfjiUHXJqFzI\"\n  }\n};\nlet s = new Set([i.id, r.id, n.id, o.id, e.id, t.id]),\n  m = new Set([i.id, r.id, a.id, n.id, o.id]);\nfunction d(r, e) {\n  switch (e) {\n    case \"native-currency\":\n      return s.has(r);\n    case \"USDC\":\n      return m.has(r);\n    default:\n      return console.warn(\"Unknown asset passed to MoonPay Onramp\"), !1;\n  }\n}\nfunction u(a, c) {\n  switch (a) {\n    case r.id:\n      return \"native-currency\" === c ? \"ETH_ARBITRUM\" : \"USDC_ARBITRUM\";\n    case e.id:\n      return \"AVAX_CCHAIN\";\n    case n.id:\n      return \"native-currency\" === c ? \"ETH_BASE\" : \"USDC_BASE\";\n    case t.id:\n      return \"CELO_CELO\";\n    case o.id:\n      return \"native-currency\" === c ? \"MATIC_POLYGON\" : \"USDC_POLYGON\";\n    case i.id:\n      return \"native-currency\" === c ? \"ETH_ETHEREUM\" : \"USDC_ETHEREUM\";\n    default:\n      return console.warn(`Chain ${a} not supported by Moonpay, defaulting to Ethereum mainnet`), \"ETH_ETHEREUM\";\n  }\n}\nfunction p(r) {\n  switch (r) {\n    case \"card\":\n    case \"payment-request\":\n      return \"credit_debit_card\";\n    default:\n      throw Error(`Unsupported Moonpay funding method ${r}`);\n  }\n}\nexport { c as MoonpayEnvironments, u as chainToMoonpayCurrency, p as fundingMethodToMoonpayPaymentMethod, d as isSupportedChainIdForMoonpay };","map":{"version":3,"names":["arbitrum","r","avalanche","e","base","n","celo","t","mainnet","i","optimism","a","polygon","o","c","prod","url","key","sandbox","s","Set","id","m","d","has","console","warn","u","p","Error","MoonpayEnvironments","chainToMoonpayCurrency","fundingMethodToMoonpayPaymentMethod","isSupportedChainIdForMoonpay"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/node_modules/@privy-io/js-sdk-core/dist/esm/funding/moonpay.mjs"],"sourcesContent":["import{arbitrum as r}from\"../chains/arbitrum.mjs\";import{avalanche as e}from\"../chains/avalanche.mjs\";import{base as n}from\"../chains/base.mjs\";import{celo as t}from\"../chains/celo.mjs\";import{mainnet as i}from\"../chains/mainnet.mjs\";import{optimism as a}from\"../chains/optimism.mjs\";import{polygon as o}from\"../chains/polygon.mjs\";const c={prod:{url:\"https://api.moonpay.com/v1\",key:\"pk_live_hirbpu0cVcLHrjktC9l7fbc9ctjv0SL\"},sandbox:{url:\"https://api.moonpay.com/v1\",key:\"pk_test_fqWjXZMSFwloh7orvJsRfjiUHXJqFzI\"}};let s=new Set([i.id,r.id,n.id,o.id,e.id,t.id]),m=new Set([i.id,r.id,a.id,n.id,o.id]);function d(r,e){switch(e){case\"native-currency\":return s.has(r);case\"USDC\":return m.has(r);default:return console.warn(\"Unknown asset passed to MoonPay Onramp\"),!1}}function u(a,c){switch(a){case r.id:return\"native-currency\"===c?\"ETH_ARBITRUM\":\"USDC_ARBITRUM\";case e.id:return\"AVAX_CCHAIN\";case n.id:return\"native-currency\"===c?\"ETH_BASE\":\"USDC_BASE\";case t.id:return\"CELO_CELO\";case o.id:return\"native-currency\"===c?\"MATIC_POLYGON\":\"USDC_POLYGON\";case i.id:return\"native-currency\"===c?\"ETH_ETHEREUM\":\"USDC_ETHEREUM\";default:return console.warn(`Chain ${a} not supported by Moonpay, defaulting to Ethereum mainnet`),\"ETH_ETHEREUM\"}}function p(r){switch(r){case\"card\":case\"payment-request\":return\"credit_debit_card\";default:throw Error(`Unsupported Moonpay funding method ${r}`)}}export{c as MoonpayEnvironments,u as chainToMoonpayCurrency,p as fundingMethodToMoonpayPaymentMethod,d as isSupportedChainIdForMoonpay};\n"],"mappings":"AAAA,SAAOA,QAAQ,IAAIC,CAAC,QAAK,wBAAwB;AAAC,SAAOC,SAAS,IAAIC,CAAC,QAAK,yBAAyB;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,oBAAoB;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,oBAAoB;AAAC,SAAOC,OAAO,IAAIC,CAAC,QAAK,uBAAuB;AAAC,SAAOC,QAAQ,IAAIC,CAAC,QAAK,wBAAwB;AAAC,SAAOC,OAAO,IAAIC,CAAC,QAAK,uBAAuB;AAAC,MAAMC,CAAC,GAAC;EAACC,IAAI,EAAC;IAACC,GAAG,EAAC,4BAA4B;IAACC,GAAG,EAAC;EAAyC,CAAC;EAACC,OAAO,EAAC;IAACF,GAAG,EAAC,4BAA4B;IAACC,GAAG,EAAC;EAAyC;AAAC,CAAC;AAAC,IAAIE,CAAC,GAAC,IAAIC,GAAG,CAAC,CAACX,CAAC,CAACY,EAAE,EAACpB,CAAC,CAACoB,EAAE,EAAChB,CAAC,CAACgB,EAAE,EAACR,CAAC,CAACQ,EAAE,EAAClB,CAAC,CAACkB,EAAE,EAACd,CAAC,CAACc,EAAE,CAAC,CAAC;EAACC,CAAC,GAAC,IAAIF,GAAG,CAAC,CAACX,CAAC,CAACY,EAAE,EAACpB,CAAC,CAACoB,EAAE,EAACV,CAAC,CAACU,EAAE,EAAChB,CAAC,CAACgB,EAAE,EAACR,CAAC,CAACQ,EAAE,CAAC,CAAC;AAAC,SAASE,CAACA,CAACtB,CAAC,EAACE,CAAC,EAAC;EAAC,QAAOA,CAAC;IAAE,KAAI,iBAAiB;MAAC,OAAOgB,CAAC,CAACK,GAAG,CAACvB,CAAC,CAAC;IAAC,KAAI,MAAM;MAAC,OAAOqB,CAAC,CAACE,GAAG,CAACvB,CAAC,CAAC;IAAC;MAAQ,OAAOwB,OAAO,CAACC,IAAI,CAAC,wCAAwC,CAAC,EAAC,CAAC,CAAC;EAAA;AAAC;AAAC,SAASC,CAACA,CAAChB,CAAC,EAACG,CAAC,EAAC;EAAC,QAAOH,CAAC;IAAE,KAAKV,CAAC,CAACoB,EAAE;MAAC,OAAM,iBAAiB,KAAGP,CAAC,GAAC,cAAc,GAAC,eAAe;IAAC,KAAKX,CAAC,CAACkB,EAAE;MAAC,OAAM,aAAa;IAAC,KAAKhB,CAAC,CAACgB,EAAE;MAAC,OAAM,iBAAiB,KAAGP,CAAC,GAAC,UAAU,GAAC,WAAW;IAAC,KAAKP,CAAC,CAACc,EAAE;MAAC,OAAM,WAAW;IAAC,KAAKR,CAAC,CAACQ,EAAE;MAAC,OAAM,iBAAiB,KAAGP,CAAC,GAAC,eAAe,GAAC,cAAc;IAAC,KAAKL,CAAC,CAACY,EAAE;MAAC,OAAM,iBAAiB,KAAGP,CAAC,GAAC,cAAc,GAAC,eAAe;IAAC;MAAQ,OAAOW,OAAO,CAACC,IAAI,CAAC,SAASf,CAAC,2DAA2D,CAAC,EAAC,cAAc;EAAA;AAAC;AAAC,SAASiB,CAACA,CAAC3B,CAAC,EAAC;EAAC,QAAOA,CAAC;IAAE,KAAI,MAAM;IAAC,KAAI,iBAAiB;MAAC,OAAM,mBAAmB;IAAC;MAAQ,MAAM4B,KAAK,CAAC,sCAAsC5B,CAAC,EAAE,CAAC;EAAA;AAAC;AAAC,SAAOa,CAAC,IAAIgB,mBAAmB,EAACH,CAAC,IAAII,sBAAsB,EAACH,CAAC,IAAII,mCAAmC,EAACT,CAAC,IAAIU,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}