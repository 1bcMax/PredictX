{"ast":null,"code":"import { useCallback as t } from \"react\";\nimport { PrivyErrorCode as e } from \"../errors.mjs\";\nimport { useCaptcha as r, CaptchaError as o } from \"./captcha-context.mjs\";\nimport { usePrivyInternal as i } from \"./internal-context.mjs\";\nimport \"ofetch\";\nimport \"react/jsx-runtime\";\nimport \"./index.mjs\";\nimport \"../utils/index.mjs\";\nimport \"../connectors/get-legacy-injected-providers.mjs\";\nimport \"../connectors/is-wallet-installed.mjs\";\nimport \"../utils/eth/getPublicClient.mjs\";\nimport \"viem\";\nconst n = n => {\n  let s = r(),\n    {\n      initLoginWithTelegram: a,\n      loginWithTelegram: m,\n      telegramAuthState: l,\n      setTelegramAuthState: c\n    } = i();\n  return {\n    login: t(async t => {\n      try {\n        if (s.enabled && \"success\" !== s.status) throw new o(s.error, null, e.CAPTCHA_FAILURE);\n        await a(s.token, t?.disableSignup);\n        let {\n          user: r,\n          isNewUser: i,\n          loginAccount: l,\n          wasAlreadyAuthenticated: c\n        } = await m({\n          intent: \"login\"\n        });\n        n?.onComplete?.({\n          user: r,\n          isNewUser: i,\n          wasAlreadyAuthenticated: c,\n          loginMethod: \"telegram\",\n          loginAccount: l\n        });\n      } catch (t) {\n        throw c({\n          status: \"error\",\n          error: t\n        }), n?.onError?.(t.privyErrorCode || e.UNKNOWN_AUTH_ERROR), t;\n      }\n    }, [a, m, s]),\n    state: l\n  };\n};\nexport { n as useLoginWithTelegram };","map":{"version":3,"names":["useCallback","t","PrivyErrorCode","e","useCaptcha","r","CaptchaError","o","usePrivyInternal","i","n","s","initLoginWithTelegram","a","loginWithTelegram","m","telegramAuthState","l","setTelegramAuthState","c","login","enabled","status","error","CAPTCHA_FAILURE","token","disableSignup","user","isNewUser","loginAccount","wasAlreadyAuthenticated","intent","onComplete","loginMethod","onError","privyErrorCode","UNKNOWN_AUTH_ERROR","state","useLoginWithTelegram"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/hooks/useLoginWithTelegram.mjs"],"sourcesContent":["import{useCallback as t}from\"react\";import{PrivyErrorCode as e}from\"../errors.mjs\";import{useCaptcha as r,CaptchaError as o}from\"./captcha-context.mjs\";import{usePrivyInternal as i}from\"./internal-context.mjs\";import\"ofetch\";import\"react/jsx-runtime\";import\"./index.mjs\";import\"../utils/index.mjs\";import\"../connectors/get-legacy-injected-providers.mjs\";import\"../connectors/is-wallet-installed.mjs\";import\"../utils/eth/getPublicClient.mjs\";import\"viem\";const n=n=>{let s=r(),{initLoginWithTelegram:a,loginWithTelegram:m,telegramAuthState:l,setTelegramAuthState:c}=i();return{login:t((async t=>{try{if(s.enabled&&\"success\"!==s.status)throw new o(s.error,null,e.CAPTCHA_FAILURE);await a(s.token,t?.disableSignup);let{user:r,isNewUser:i,loginAccount:l,wasAlreadyAuthenticated:c}=await m({intent:\"login\"});n?.onComplete?.({user:r,isNewUser:i,wasAlreadyAuthenticated:c,loginMethod:\"telegram\",loginAccount:l})}catch(t){throw c({status:\"error\",error:t}),n?.onError?.(t.privyErrorCode||e.UNKNOWN_AUTH_ERROR),t}}),[a,m,s]),state:l}};export{n as useLoginWithTelegram};\n"],"mappings":"AAAA,SAAOA,WAAW,IAAIC,CAAC,QAAK,OAAO;AAAC,SAAOC,cAAc,IAAIC,CAAC,QAAK,eAAe;AAAC,SAAOC,UAAU,IAAIC,CAAC,EAACC,YAAY,IAAIC,CAAC,QAAK,uBAAuB;AAAC,SAAOC,gBAAgB,IAAIC,CAAC,QAAK,wBAAwB;AAAC,OAAM,QAAQ;AAAC,OAAM,mBAAmB;AAAC,OAAM,aAAa;AAAC,OAAM,oBAAoB;AAAC,OAAM,iDAAiD;AAAC,OAAM,uCAAuC;AAAC,OAAM,kCAAkC;AAAC,OAAM,MAAM;AAAC,MAAMC,CAAC,GAACA,CAAC,IAAE;EAAC,IAAIC,CAAC,GAACN,CAAC,CAAC,CAAC;IAAC;MAACO,qBAAqB,EAACC,CAAC;MAACC,iBAAiB,EAACC,CAAC;MAACC,iBAAiB,EAACC,CAAC;MAACC,oBAAoB,EAACC;IAAC,CAAC,GAACV,CAAC,CAAC,CAAC;EAAC,OAAM;IAACW,KAAK,EAACnB,CAAC,CAAE,MAAMA,CAAC,IAAE;MAAC,IAAG;QAAC,IAAGU,CAAC,CAACU,OAAO,IAAE,SAAS,KAAGV,CAAC,CAACW,MAAM,EAAC,MAAM,IAAIf,CAAC,CAACI,CAAC,CAACY,KAAK,EAAC,IAAI,EAACpB,CAAC,CAACqB,eAAe,CAAC;QAAC,MAAMX,CAAC,CAACF,CAAC,CAACc,KAAK,EAACxB,CAAC,EAAEyB,aAAa,CAAC;QAAC,IAAG;UAACC,IAAI,EAACtB,CAAC;UAACuB,SAAS,EAACnB,CAAC;UAACoB,YAAY,EAACZ,CAAC;UAACa,uBAAuB,EAACX;QAAC,CAAC,GAAC,MAAMJ,CAAC,CAAC;UAACgB,MAAM,EAAC;QAAO,CAAC,CAAC;QAACrB,CAAC,EAAEsB,UAAU,GAAG;UAACL,IAAI,EAACtB,CAAC;UAACuB,SAAS,EAACnB,CAAC;UAACqB,uBAAuB,EAACX,CAAC;UAACc,WAAW,EAAC,UAAU;UAACJ,YAAY,EAACZ;QAAC,CAAC,CAAC;MAAA,CAAC,QAAMhB,CAAC,EAAC;QAAC,MAAMkB,CAAC,CAAC;UAACG,MAAM,EAAC,OAAO;UAACC,KAAK,EAACtB;QAAC,CAAC,CAAC,EAACS,CAAC,EAAEwB,OAAO,GAAGjC,CAAC,CAACkC,cAAc,IAAEhC,CAAC,CAACiC,kBAAkB,CAAC,EAACnC,CAAC;MAAA;IAAC,CAAC,EAAE,CAACY,CAAC,EAACE,CAAC,EAACJ,CAAC,CAAC,CAAC;IAAC0B,KAAK,EAACpB;EAAC,CAAC;AAAA,CAAC;AAAC,SAAOP,CAAC,IAAI4B,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}