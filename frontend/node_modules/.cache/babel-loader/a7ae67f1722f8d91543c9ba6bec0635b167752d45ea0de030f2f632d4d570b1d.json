{"ast":null,"code":"import { RunEffectOnce as t } from \"../effect.mjs\";\nimport { PrivyClientError as e, PrivyErrorCode as i, formatApiError as s } from \"../errors.mjs\";\nimport { passkeyRegisterPath as n, passkeyAuthenticatePath as a, passkeyLinkPath as r, passkeyInitRegisterPath as o, passkeyInitAuthenticatePath as h, passkeyInitLinkPath as c } from \"../paths.mjs\";\nimport { getUiHeader as p } from \"./getUiHeader.mjs\";\nimport \"ofetch\";\nclass u {\n  async initRegisterFlow(t) {\n    if (!this.api) throw new e(\"Auth flow has no API instance\");\n    this.authenticateForRegistration = !0, this.meta.initRegisterResponse = await this.initRegisterOnce.execute(t);\n  }\n  async initAuthenticationFlow(t) {\n    if (!this.api) throw new e(\"Auth flow has no API instance\");\n    this.authenticateForRegistration = !1, this.meta.initAuthenticateResponse = await this.initAuthenticateOnce.execute(t);\n  }\n  async initLinkFlow() {\n    if (!this.api) throw new e(\"Auth flow has no API instance\");\n    this.meta.initLinkResponse = await this.initLinkOnce.execute();\n  }\n  async register() {\n    let t = await import(\"@simplewebauthn/browser\");\n    if (!this.api) throw new e(\"Auth flow has no API instance\");\n    if (!t.browserSupportsWebAuthn()) throw new e(\"WebAuthn is not supported in this browser\");\n    this.meta.initRegisterResponse || (this.meta.initRegisterResponse = await this.initRegisterOnce.execute());\n    try {\n      let e = this.meta.initRegisterResponse.options,\n        i = await t.startRegistration(this._transformInitLinkOptionsToCamelCase(e));\n      return this.meta.setPasskeyAuthState?.({\n        status: \"submitting-response\"\n      }), await this.api.post(n, {\n        relying_party: this.meta.initRegisterResponse.relying_party,\n        authenticator_response: this._transformRegistrationResponseToSnakeCase(i)\n      });\n    } catch (t) {\n      if (\"NotAllowedError\" === t.name) throw new e(\"Passkey request timed out or rejected by user.\", void 0, i.PASSKEY_NOT_ALLOWED);\n      throw s(t);\n    }\n  }\n  async authenticate() {\n    if (this.authenticateForRegistration) return this.register();\n    let t = await import(\"@simplewebauthn/browser\");\n    if (!this.api) throw new e(\"Auth flow has no API instance\");\n    if (!t.browserSupportsWebAuthn()) throw new e(\"WebAuthn is not supported in this browser\");\n    this.meta.initAuthenticateResponse || (this.meta.initAuthenticateResponse = await this.initAuthenticateOnce.execute());\n    let n = this.meta.allowedCredentialsIds?.map(t => ({\n      type: \"public-key\",\n      id: t\n    })) ?? this.meta.initAuthenticateResponse.options.allow_credentials;\n    try {\n      let e = await t.startAuthentication(this._transformInitAuthenticateOptionsToCamelCase({\n        ...this.meta.initAuthenticateResponse.options,\n        allow_credentials: n\n      }));\n      return this.meta.setPasskeyAuthState?.({\n        status: \"submitting-response\"\n      }), await this.api.post(a, {\n        relying_party: this.meta.initAuthenticateResponse.relying_party,\n        challenge: this.meta.initAuthenticateResponse.options.challenge,\n        authenticator_response: this._transformAuthenticationResponseToSnakeCase(e)\n      });\n    } catch (t) {\n      if (\"NotAllowedError\" === t.name) throw new e(\"Passkey request timed out or rejected by user.\", void 0, i.PASSKEY_NOT_ALLOWED);\n      throw s(t);\n    }\n  }\n  async link() {\n    let t = await import(\"@simplewebauthn/browser\");\n    if (!this.api) throw new e(\"Auth flow has no API instance\");\n    if (!t.browserSupportsWebAuthn()) throw new e(\"WebAuthn is not supported in this browser\");\n    this.meta.initLinkResponse || (this.meta.initLinkResponse = await this.initLinkOnce.execute());\n    try {\n      let e = this.meta.initLinkResponse.options,\n        i = await t.startRegistration(this._transformInitLinkOptionsToCamelCase(e));\n      return this.meta.setPasskeyAuthState?.({\n        status: \"submitting-response\"\n      }), await this.api.post(r, {\n        relying_party: this.meta.initLinkResponse.relying_party,\n        authenticator_response: this._transformRegistrationResponseToSnakeCase(i)\n      });\n    } catch (t) {\n      if (\"NotAllowedError\" === t.name) throw new e(\"Passkey request timed out or rejected by user.\", void 0, i.PASSKEY_NOT_ALLOWED);\n      throw s(t);\n    }\n  }\n  async _initRegisterOnce(t) {\n    if (!this.api) throw new e(\"Auth flow has no API instance\");\n    let i = p(t);\n    return await this.api.post(o, {\n      token: this.meta.captchaToken\n    }, {\n      headers: {\n        ...i\n      }\n    });\n  }\n  async _initAuthenticateOnce(t) {\n    if (!this.api) throw new e(\"Auth flow has no API instance\");\n    let i = p(t);\n    return await this.api.post(h, {\n      token: this.meta.captchaToken\n    }, {\n      headers: {\n        ...i\n      }\n    });\n  }\n  async _initLinkOnce() {\n    if (!this.api) throw new e(\"Auth flow has no API instance\");\n    return await this.api.post(c, {});\n  }\n  _transformInitLinkOptionsToCamelCase(t) {\n    return {\n      rp: t.rp,\n      user: {\n        id: t.user.id,\n        name: t.user.name,\n        displayName: t.user.display_name\n      },\n      challenge: t.challenge,\n      pubKeyCredParams: t.pub_key_cred_params.map(t => ({\n        type: t.type,\n        alg: t.alg\n      })),\n      timeout: t.timeout,\n      excludeCredentials: t.exclude_credentials?.map(t => ({\n        id: t.id,\n        type: t.type,\n        transports: t.transports\n      })),\n      authenticatorSelection: {\n        authenticatorAttachment: t.authenticator_selection?.authenticator_attachment,\n        requireResidentKey: t.authenticator_selection?.require_resident_key,\n        residentKey: t.authenticator_selection?.resident_key,\n        userVerification: t.authenticator_selection?.user_verification\n      },\n      attestation: t.attestation,\n      extensions: {\n        appid: t.extensions?.app_id,\n        credProps: t.extensions?.cred_props?.rk,\n        hmacCreateSecret: t.extensions?.hmac_create_secret\n      }\n    };\n  }\n  _transformRegistrationResponseToSnakeCase(t) {\n    return {\n      id: t.id,\n      raw_id: t.rawId,\n      response: {\n        client_data_json: t.response.clientDataJSON,\n        attestation_object: t.response.attestationObject,\n        authenticator_data: t.response.authenticatorData\n      },\n      authenticator_attachment: t.authenticatorAttachment,\n      client_extension_results: {\n        app_id: t.clientExtensionResults.appid,\n        cred_props: t.clientExtensionResults.credProps,\n        hmac_create_secret: t.clientExtensionResults.hmacCreateSecret\n      },\n      type: t.type\n    };\n  }\n  _transformInitAuthenticateOptionsToCamelCase(t) {\n    return {\n      rpId: t.rp_id,\n      challenge: t.challenge,\n      allowCredentials: t.allow_credentials?.map(t => ({\n        id: t.id,\n        type: t.type,\n        transports: t.transports\n      })) || [],\n      timeout: t.timeout,\n      extensions: {\n        appid: t.extensions?.app_id,\n        credProps: t.extensions?.cred_props,\n        hmacCreateSecret: t.extensions?.hmac_create_secret\n      },\n      userVerification: t.user_verification\n    };\n  }\n  _transformAuthenticationResponseToSnakeCase(t) {\n    return {\n      id: t.id,\n      raw_id: t.rawId,\n      response: {\n        client_data_json: t.response.clientDataJSON,\n        authenticator_data: t.response.authenticatorData,\n        signature: t.response.signature,\n        user_handle: t.response.userHandle\n      },\n      authenticator_attachment: t.authenticatorAttachment,\n      client_extension_results: {\n        app_id: t.clientExtensionResults.appid,\n        cred_props: t.clientExtensionResults.credProps,\n        hmac_create_secret: t.clientExtensionResults.hmacCreateSecret\n      },\n      type: t.type\n    };\n  }\n  constructor({\n    captchaToken: e,\n    setPasskeyAuthState: i\n  }) {\n    this.authenticateForRegistration = !1, this.initRegisterOnce = new t(this._initRegisterOnce.bind(this)), this.initAuthenticateOnce = new t(this._initAuthenticateOnce.bind(this)), this.initLinkOnce = new t(this._initLinkOnce.bind(this)), this.meta = {\n      captchaToken: e,\n      setPasskeyAuthState: i\n    };\n  }\n}\nexport { u as PasskeyFlow };","map":{"version":3,"names":["RunEffectOnce","t","PrivyClientError","e","PrivyErrorCode","i","formatApiError","s","passkeyRegisterPath","n","passkeyAuthenticatePath","a","passkeyLinkPath","r","passkeyInitRegisterPath","o","passkeyInitAuthenticatePath","h","passkeyInitLinkPath","c","getUiHeader","p","u","initRegisterFlow","api","authenticateForRegistration","meta","initRegisterResponse","initRegisterOnce","execute","initAuthenticationFlow","initAuthenticateResponse","initAuthenticateOnce","initLinkFlow","initLinkResponse","initLinkOnce","register","browserSupportsWebAuthn","options","startRegistration","_transformInitLinkOptionsToCamelCase","setPasskeyAuthState","status","post","relying_party","authenticator_response","_transformRegistrationResponseToSnakeCase","name","PASSKEY_NOT_ALLOWED","authenticate","allowedCredentialsIds","map","type","id","allow_credentials","startAuthentication","_transformInitAuthenticateOptionsToCamelCase","challenge","_transformAuthenticationResponseToSnakeCase","link","_initRegisterOnce","token","captchaToken","headers","_initAuthenticateOnce","_initLinkOnce","rp","user","displayName","display_name","pubKeyCredParams","pub_key_cred_params","alg","timeout","excludeCredentials","exclude_credentials","transports","authenticatorSelection","authenticatorAttachment","authenticator_selection","authenticator_attachment","requireResidentKey","require_resident_key","residentKey","resident_key","userVerification","user_verification","attestation","extensions","appid","app_id","credProps","cred_props","rk","hmacCreateSecret","hmac_create_secret","raw_id","rawId","response","client_data_json","clientDataJSON","attestation_object","attestationObject","authenticator_data","authenticatorData","client_extension_results","clientExtensionResults","rpId","rp_id","allowCredentials","signature","user_handle","userHandle","constructor","bind","PasskeyFlow"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/auth-flows/passkey.mjs"],"sourcesContent":["import{RunEffectOnce as t}from\"../effect.mjs\";import{PrivyClientError as e,PrivyErrorCode as i,formatApiError as s}from\"../errors.mjs\";import{passkeyRegisterPath as n,passkeyAuthenticatePath as a,passkeyLinkPath as r,passkeyInitRegisterPath as o,passkeyInitAuthenticatePath as h,passkeyInitLinkPath as c}from\"../paths.mjs\";import{getUiHeader as p}from\"./getUiHeader.mjs\";import\"ofetch\";class u{async initRegisterFlow(t){if(!this.api)throw new e(\"Auth flow has no API instance\");this.authenticateForRegistration=!0,this.meta.initRegisterResponse=await this.initRegisterOnce.execute(t)}async initAuthenticationFlow(t){if(!this.api)throw new e(\"Auth flow has no API instance\");this.authenticateForRegistration=!1,this.meta.initAuthenticateResponse=await this.initAuthenticateOnce.execute(t)}async initLinkFlow(){if(!this.api)throw new e(\"Auth flow has no API instance\");this.meta.initLinkResponse=await this.initLinkOnce.execute()}async register(){let t=await import(\"@simplewebauthn/browser\");if(!this.api)throw new e(\"Auth flow has no API instance\");if(!t.browserSupportsWebAuthn())throw new e(\"WebAuthn is not supported in this browser\");this.meta.initRegisterResponse||(this.meta.initRegisterResponse=await this.initRegisterOnce.execute());try{let e=this.meta.initRegisterResponse.options,i=await t.startRegistration(this._transformInitLinkOptionsToCamelCase(e));return this.meta.setPasskeyAuthState?.({status:\"submitting-response\"}),await this.api.post(n,{relying_party:this.meta.initRegisterResponse.relying_party,authenticator_response:this._transformRegistrationResponseToSnakeCase(i)})}catch(t){if(\"NotAllowedError\"===t.name)throw new e(\"Passkey request timed out or rejected by user.\",void 0,i.PASSKEY_NOT_ALLOWED);throw s(t)}}async authenticate(){if(this.authenticateForRegistration)return this.register();let t=await import(\"@simplewebauthn/browser\");if(!this.api)throw new e(\"Auth flow has no API instance\");if(!t.browserSupportsWebAuthn())throw new e(\"WebAuthn is not supported in this browser\");this.meta.initAuthenticateResponse||(this.meta.initAuthenticateResponse=await this.initAuthenticateOnce.execute());let n=this.meta.allowedCredentialsIds?.map((t=>({type:\"public-key\",id:t})))??this.meta.initAuthenticateResponse.options.allow_credentials;try{let e=await t.startAuthentication(this._transformInitAuthenticateOptionsToCamelCase({...this.meta.initAuthenticateResponse.options,allow_credentials:n}));return this.meta.setPasskeyAuthState?.({status:\"submitting-response\"}),await this.api.post(a,{relying_party:this.meta.initAuthenticateResponse.relying_party,challenge:this.meta.initAuthenticateResponse.options.challenge,authenticator_response:this._transformAuthenticationResponseToSnakeCase(e)})}catch(t){if(\"NotAllowedError\"===t.name)throw new e(\"Passkey request timed out or rejected by user.\",void 0,i.PASSKEY_NOT_ALLOWED);throw s(t)}}async link(){let t=await import(\"@simplewebauthn/browser\");if(!this.api)throw new e(\"Auth flow has no API instance\");if(!t.browserSupportsWebAuthn())throw new e(\"WebAuthn is not supported in this browser\");this.meta.initLinkResponse||(this.meta.initLinkResponse=await this.initLinkOnce.execute());try{let e=this.meta.initLinkResponse.options,i=await t.startRegistration(this._transformInitLinkOptionsToCamelCase(e));return this.meta.setPasskeyAuthState?.({status:\"submitting-response\"}),await this.api.post(r,{relying_party:this.meta.initLinkResponse.relying_party,authenticator_response:this._transformRegistrationResponseToSnakeCase(i)})}catch(t){if(\"NotAllowedError\"===t.name)throw new e(\"Passkey request timed out or rejected by user.\",void 0,i.PASSKEY_NOT_ALLOWED);throw s(t)}}async _initRegisterOnce(t){if(!this.api)throw new e(\"Auth flow has no API instance\");let i=p(t);return await this.api.post(o,{token:this.meta.captchaToken},{headers:{...i}})}async _initAuthenticateOnce(t){if(!this.api)throw new e(\"Auth flow has no API instance\");let i=p(t);return await this.api.post(h,{token:this.meta.captchaToken},{headers:{...i}})}async _initLinkOnce(){if(!this.api)throw new e(\"Auth flow has no API instance\");return await this.api.post(c,{})}_transformInitLinkOptionsToCamelCase(t){return{rp:t.rp,user:{id:t.user.id,name:t.user.name,displayName:t.user.display_name},challenge:t.challenge,pubKeyCredParams:t.pub_key_cred_params.map((t=>({type:t.type,alg:t.alg}))),timeout:t.timeout,excludeCredentials:t.exclude_credentials?.map((t=>({id:t.id,type:t.type,transports:t.transports}))),authenticatorSelection:{authenticatorAttachment:t.authenticator_selection?.authenticator_attachment,requireResidentKey:t.authenticator_selection?.require_resident_key,residentKey:t.authenticator_selection?.resident_key,userVerification:t.authenticator_selection?.user_verification},attestation:t.attestation,extensions:{appid:t.extensions?.app_id,credProps:t.extensions?.cred_props?.rk,hmacCreateSecret:t.extensions?.hmac_create_secret}}}_transformRegistrationResponseToSnakeCase(t){return{id:t.id,raw_id:t.rawId,response:{client_data_json:t.response.clientDataJSON,attestation_object:t.response.attestationObject,authenticator_data:t.response.authenticatorData},authenticator_attachment:t.authenticatorAttachment,client_extension_results:{app_id:t.clientExtensionResults.appid,cred_props:t.clientExtensionResults.credProps,hmac_create_secret:t.clientExtensionResults.hmacCreateSecret},type:t.type}}_transformInitAuthenticateOptionsToCamelCase(t){return{rpId:t.rp_id,challenge:t.challenge,allowCredentials:t.allow_credentials?.map((t=>({id:t.id,type:t.type,transports:t.transports})))||[],timeout:t.timeout,extensions:{appid:t.extensions?.app_id,credProps:t.extensions?.cred_props,hmacCreateSecret:t.extensions?.hmac_create_secret},userVerification:t.user_verification}}_transformAuthenticationResponseToSnakeCase(t){return{id:t.id,raw_id:t.rawId,response:{client_data_json:t.response.clientDataJSON,authenticator_data:t.response.authenticatorData,signature:t.response.signature,user_handle:t.response.userHandle},authenticator_attachment:t.authenticatorAttachment,client_extension_results:{app_id:t.clientExtensionResults.appid,cred_props:t.clientExtensionResults.credProps,hmac_create_secret:t.clientExtensionResults.hmacCreateSecret},type:t.type}}constructor({captchaToken:e,setPasskeyAuthState:i}){this.authenticateForRegistration=!1,this.initRegisterOnce=new t(this._initRegisterOnce.bind(this)),this.initAuthenticateOnce=new t(this._initAuthenticateOnce.bind(this)),this.initLinkOnce=new t(this._initLinkOnce.bind(this)),this.meta={captchaToken:e,setPasskeyAuthState:i}}}export{u as PasskeyFlow};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}