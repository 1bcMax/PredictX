{"ast":null,"code":"import t from \"zod\";\nimport { PhoneNumber as o, PasswordlessCode as e } from \"./core.mjs\";\nimport \"bs58\";\nimport \"ethers\";\nimport \"libphonenumber-js/max\";\nconst r = t.object({\n  token: t.string()\n}).strict();\nlet c = t.object({\n    action: t.literal(\"verify\")\n  }).strict(),\n  i = t.object({\n    action: t.literal(\"enroll\"),\n    phoneNumber: o\n  }).strict();\nconst n = t.union([c, i]),\n  s = t.object({\n    action: t.literal(\"enroll\").optional(),\n    code: e,\n    phoneNumber: o\n  }).strict(),\n  b = t.object({\n    code: e,\n    phoneNumber: o\n  }).strict(),\n  l = t.object({\n    code: e\n  }).strict(),\n  m = t.object({\n    code: e\n  }).strict(),\n  p = t.object({\n    totpSecret: t.string(),\n    totpAuthUrl: t.string()\n  }).strict();\nexport { s as MfaSmsAuthenticateEnrollInput, b as MfaSmsEnrollInput, n as MfaSmsInitInput, l as MfaSmsVerifyInput, m as MfaTotpInput, r as MfaVerifyResponse, p as ResponseTotpInitMfa };","map":{"version":3,"names":["t","PhoneNumber","o","PasswordlessCode","e","r","object","token","string","strict","c","action","literal","i","phoneNumber","n","union","s","optional","code","b","l","m","p","totpSecret","totpAuthUrl","MfaSmsAuthenticateEnrollInput","MfaSmsEnrollInput","MfaSmsInitInput","MfaSmsVerifyInput","MfaTotpInput","MfaVerifyResponse","ResponseTotpInitMfa"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/public-api/dist/esm/schemas/mfa.mjs"],"sourcesContent":["import t from\"zod\";import{PhoneNumber as o,PasswordlessCode as e}from\"./core.mjs\";import\"bs58\";import\"ethers\";import\"libphonenumber-js/max\";const r=t.object({token:t.string()}).strict();let c=t.object({action:t.literal(\"verify\")}).strict(),i=t.object({action:t.literal(\"enroll\"),phoneNumber:o}).strict();const n=t.union([c,i]),s=t.object({action:t.literal(\"enroll\").optional(),code:e,phoneNumber:o}).strict(),b=t.object({code:e,phoneNumber:o}).strict(),l=t.object({code:e}).strict(),m=t.object({code:e}).strict(),p=t.object({totpSecret:t.string(),totpAuthUrl:t.string()}).strict();export{s as MfaSmsAuthenticateEnrollInput,b as MfaSmsEnrollInput,n as MfaSmsInitInput,l as MfaSmsVerifyInput,m as MfaTotpInput,r as MfaVerifyResponse,p as ResponseTotpInitMfa};\n"],"mappings":"AAAA,OAAOA,CAAC,MAAK,KAAK;AAAC,SAAOC,WAAW,IAAIC,CAAC,EAACC,gBAAgB,IAAIC,CAAC,QAAK,YAAY;AAAC,OAAM,MAAM;AAAC,OAAM,QAAQ;AAAC,OAAM,uBAAuB;AAAC,MAAMC,CAAC,GAACL,CAAC,CAACM,MAAM,CAAC;EAACC,KAAK,EAACP,CAAC,CAACQ,MAAM,CAAC;AAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;AAAC,IAAIC,CAAC,GAACV,CAAC,CAACM,MAAM,CAAC;IAACK,MAAM,EAACX,CAAC,CAACY,OAAO,CAAC,QAAQ;EAAC,CAAC,CAAC,CAACH,MAAM,CAAC,CAAC;EAACI,CAAC,GAACb,CAAC,CAACM,MAAM,CAAC;IAACK,MAAM,EAACX,CAAC,CAACY,OAAO,CAAC,QAAQ,CAAC;IAACE,WAAW,EAACZ;EAAC,CAAC,CAAC,CAACO,MAAM,CAAC,CAAC;AAAC,MAAMM,CAAC,GAACf,CAAC,CAACgB,KAAK,CAAC,CAACN,CAAC,EAACG,CAAC,CAAC,CAAC;EAACI,CAAC,GAACjB,CAAC,CAACM,MAAM,CAAC;IAACK,MAAM,EAACX,CAAC,CAACY,OAAO,CAAC,QAAQ,CAAC,CAACM,QAAQ,CAAC,CAAC;IAACC,IAAI,EAACf,CAAC;IAACU,WAAW,EAACZ;EAAC,CAAC,CAAC,CAACO,MAAM,CAAC,CAAC;EAACW,CAAC,GAACpB,CAAC,CAACM,MAAM,CAAC;IAACa,IAAI,EAACf,CAAC;IAACU,WAAW,EAACZ;EAAC,CAAC,CAAC,CAACO,MAAM,CAAC,CAAC;EAACY,CAAC,GAACrB,CAAC,CAACM,MAAM,CAAC;IAACa,IAAI,EAACf;EAAC,CAAC,CAAC,CAACK,MAAM,CAAC,CAAC;EAACa,CAAC,GAACtB,CAAC,CAACM,MAAM,CAAC;IAACa,IAAI,EAACf;EAAC,CAAC,CAAC,CAACK,MAAM,CAAC,CAAC;EAACc,CAAC,GAACvB,CAAC,CAACM,MAAM,CAAC;IAACkB,UAAU,EAACxB,CAAC,CAACQ,MAAM,CAAC,CAAC;IAACiB,WAAW,EAACzB,CAAC,CAACQ,MAAM,CAAC;EAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;AAAC,SAAOQ,CAAC,IAAIS,6BAA6B,EAACN,CAAC,IAAIO,iBAAiB,EAACZ,CAAC,IAAIa,eAAe,EAACP,CAAC,IAAIQ,iBAAiB,EAACP,CAAC,IAAIQ,YAAY,EAACzB,CAAC,IAAI0B,iBAAiB,EAACR,CAAC,IAAIS,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}