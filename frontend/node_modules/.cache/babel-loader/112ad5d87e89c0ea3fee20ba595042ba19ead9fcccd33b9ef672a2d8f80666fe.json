{"ast":null,"code":"import { getSolanaNetworkFromRpcEndpoint as t } from \"./index.mjs\";\nimport { readBigInt64LEFromUint8Array as e, readBigInt64LE as n } from \"../../utils/buffer/readBigInt64LE.mjs\";\nimport { attempt as r } from \"../attempt.mjs\";\nconst o = 1e9,\n  a = \"11111111111111111111111111111111\",\n  i = \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\",\n  s = \"TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb\",\n  c = \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\";\nlet u = new Intl.NumberFormat(void 0, {\n  style: \"currency\",\n  currency: \"USD\",\n  maximumFractionDigits: 2\n});\nfunction l(t, e = 6, n = !1, r = !1) {\n  let o = (parseFloat(t.toString()) / 1e9).toFixed(e).replace(/0+$/, \"\").replace(/\\.$/, \"\"),\n    a = r ? \"\" : \" SOL\";\n  return n ? `${o}${a}` : `${\"0\" === o ? \"<0.001\" : o}${a}`;\n}\nfunction f(t, e) {\n  let n = parseFloat(t.toString()) / 1e9,\n    r = u.format(e * n);\n  return \"$0.00\" === r ? \"<$0.01\" : r;\n}\nfunction d({\n  amount: t,\n  fee: e,\n  tokenPrice: n\n}) {\n  let r = BigInt(1e9 * parseFloat(t)),\n    o = r + e;\n  return {\n    fundingAmountInBaseUnit: r,\n    fundingAmountInUsd: n ? f(r, n) : void 0,\n    totalPriceInUsd: n ? f(o, n) : void 0,\n    totalPriceInNativeCurrency: l(o),\n    feePriceInNativeCurrency: l(e),\n    feePriceInUsd: n ? f(e, n) : void 0\n  };\n}\nfunction m(t) {\n  return \"version\" in t;\n}\nfunction p(t, e) {\n  let n = (m(t) ? t.message : t.compileMessage()).staticAccountKeys.find(t => t.toBase58() === e);\n  if (!n) throw Error(`Transaction does not contain public key ${e}`);\n  return n;\n}\nasync function y(t, e) {\n  return BigInt((m(t) ? (await e.getFeeForMessage(t.message)).value : await t.getEstimatedFee(e)) ?? 0);\n}\nfunction A(t, e, n) {\n  return {\n    signature: t,\n    parsedTransaction: n ?? null,\n    signedTransaction: e,\n    fees: BigInt(n?.meta?.fee || 0)\n  };\n}\nasync function g(t, e) {\n  let {\n    value: n\n  } = await e.simulateTransaction(t);\n  if (\"BlockhashNotFound\" === n.err) throw Error(\"Simulation failed: Blockhash not found\");\n  return null == n.err && n.logs?.every(t => !/insufficient funds/gi.test(t));\n}\nasync function B({\n  tx: t,\n  connection: e,\n  client: n\n}) {\n  let o = m(t) ? t.message : t.compileMessage(),\n    a = o.staticAccountKeys[0]?.toBase58() ?? \"\",\n    i = await y(t, e),\n    s = {},\n    c = {},\n    u = [];\n  for (let t of o.compiledInstructions) {\n    let a = o.staticAccountKeys[t.programIdIndex]?.toBase58() || \"\";\n    if (\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\" !== a && \"TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb\" !== a) {\n      if (\"11111111111111111111111111111111\" !== a) {\n        if (\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\" !== a) u.push({\n          type: \"unknown\",\n          program: a\n        });else {\n          let e = await r(function (t, e) {\n            let [n, r, o, a] = t.accountKeyIndexes.map(t => e.staticAccountKeys[t]);\n            if (!(n && r && o && a)) throw Error(\"Failed to parse ATA creation instruction\");\n            return {\n              type: \"ata-creation\",\n              payer: n.toBase58(),\n              ata: r.toBase58(),\n              owner: o.toBase58(),\n              mint: a.toBase58()\n            };\n          }(t, o));\n          if (!e) continue;\n          u.push(e), c[e.ata] = {\n            owner: e.owner,\n            mint: e.mint\n          };\n        }\n      } else {\n        let e = await r(b(t, o));\n        if (!e) continue;\n        u.push(e);\n      }\n    } else {\n      let a = await r(k(t, o, e, n, s, c));\n      if (!a) continue;\n      u.push(a), s[a.token.address] = a.token, c[a.fromAta] ??= {\n        owner: a.fromAccount,\n        mint: a.token.address\n      }, a.toAccount && (c[a.toAta] ??= {\n        owner: a.toAccount,\n        mint: a.token.address\n      });\n    }\n  }\n  let l = u.filter(({\n    type: t\n  }) => [\"spl-transfer\", \"sol-transfer\"].includes(t));\n  return {\n    spender: a,\n    fee: i,\n    instructions: l.length ? l : u\n  };\n}\nfunction w(t, r) {\n  try {\n    return e(t, r);\n  } catch {}\n  try {\n    return t.readBigInt64LE(r);\n  } catch {}\n  let o = Buffer.from(t);\n  try {\n    return n(o);\n  } catch {}\n  try {\n    return o.subarray(r).readBigInt64LE();\n  } catch {}\n  try {\n    return o.readBigInt64LE(r);\n  } catch {}\n  return 0n;\n}\nasync function k(e, n, r, o, a, i) {\n  let s,\n    c,\n    [u, l, f] = e.accountKeyIndexes.map(t => n.staticAccountKeys[t]);\n  if (!u || !l || !f) throw Error(\"Failed to parse SPL transfer instruction\");\n  let d = \"\",\n    m = i[l.toBase58()];\n  if (m) s = m.owner, d = m.mint;else {\n    let t = await r.getParsedAccountInfo(l, \"confirmed\"),\n      e = t.value?.data;\n    s = e?.parsed?.info?.owner, d = e?.parsed?.info?.mint ?? \"\", c = e?.parsed?.info?.tokenAmount?.decimals;\n  }\n  if (!d) {\n    let t = await r.getParsedAccountInfo(u, \"confirmed\"),\n      e = t.value?.data;\n    d = e?.parsed?.info?.mint ?? \"\";\n  }\n  let p = a[d];\n  if (d && !p) {\n    let e = await o.getSplTokenMetadata({\n      mintAddress: d,\n      cluster: t(r.rpcEndpoint)\n    });\n    e && (p = {\n      address: d,\n      symbol: e.symbol,\n      decimals: e.decimals\n    });\n  }\n  let y = p?.symbol ?? \"\";\n  c ??= p?.decimals ?? 9;\n  let A = w(e.data, 1);\n  return {\n    type: \"spl-transfer\",\n    fromAta: u.toBase58(),\n    fromAccount: f.toBase58(),\n    toAta: l.toBase58(),\n    toAccount: s,\n    value: A,\n    token: {\n      symbol: y,\n      decimals: c,\n      address: d\n    }\n  };\n}\nasync function b(t, e) {\n  let [n, r] = t.accountKeyIndexes.map(t => e.staticAccountKeys[t]);\n  if (!n || !r) throw Error(\"Failed to parse SOL transfer instruction\");\n  let o = w(t.data, 4);\n  return {\n    type: \"sol-transfer\",\n    fromAccount: n.toBase58(),\n    toAccount: r.toBase58(),\n    value: o,\n    token: {\n      symbol: \"SOL\",\n      decimals: 9\n    }\n  };\n}\nexport { c as ASSOCIATED_TOKEN_PROGRAM_ID, o as LAMPORTS_PER_SOL, a as SYSTEM_PROGRAM_ID, s as TOKEN_2022_PROGRAM_ID, i as TOKEN_PROGRAM_ID, A as createSolanaTransactionReceipt, f as getDollarsFromLamport, l as getNativeCurrencyFromLamports, d as getSolanaFormattedAmounts, y as getTransactionFees, p as getWalletPublicKeyFromTransaction, g as hasSufficientFunds, m as isVersionedTransaction, B as parseSolanaTransaction };","map":{"version":3,"names":["getSolanaNetworkFromRpcEndpoint","t","readBigInt64LEFromUint8Array","e","readBigInt64LE","n","attempt","r","o","a","i","s","c","u","Intl","NumberFormat","style","currency","maximumFractionDigits","l","parseFloat","toString","toFixed","replace","f","format","d","amount","fee","tokenPrice","BigInt","fundingAmountInBaseUnit","fundingAmountInUsd","totalPriceInUsd","totalPriceInNativeCurrency","feePriceInNativeCurrency","feePriceInUsd","m","p","message","compileMessage","staticAccountKeys","find","toBase58","Error","y","getFeeForMessage","value","getEstimatedFee","A","signature","parsedTransaction","signedTransaction","fees","meta","g","simulateTransaction","err","logs","every","test","B","tx","connection","client","compiledInstructions","programIdIndex","push","type","program","accountKeyIndexes","map","payer","ata","owner","mint","b","k","token","address","fromAta","fromAccount","toAccount","toAta","filter","includes","spender","instructions","length","w","Buffer","from","subarray","getParsedAccountInfo","data","parsed","info","tokenAmount","decimals","getSplTokenMetadata","mintAddress","cluster","rpcEndpoint","symbol","ASSOCIATED_TOKEN_PROGRAM_ID","LAMPORTS_PER_SOL","SYSTEM_PROGRAM_ID","TOKEN_2022_PROGRAM_ID","TOKEN_PROGRAM_ID","createSolanaTransactionReceipt","getDollarsFromLamport","getNativeCurrencyFromLamports","getSolanaFormattedAmounts","getTransactionFees","getWalletPublicKeyFromTransaction","hasSufficientFunds","isVersionedTransaction","parseSolanaTransaction"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/lib/solana/transaction.mjs"],"sourcesContent":["import{getSolanaNetworkFromRpcEndpoint as t}from\"./index.mjs\";import{readBigInt64LEFromUint8Array as e,readBigInt64LE as n}from\"../../utils/buffer/readBigInt64LE.mjs\";import{attempt as r}from\"../attempt.mjs\";const o=1e9,a=\"11111111111111111111111111111111\",i=\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\",s=\"TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb\",c=\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\";let u=new Intl.NumberFormat(void 0,{style:\"currency\",currency:\"USD\",maximumFractionDigits:2});function l(t,e=6,n=!1,r=!1){let o=(parseFloat(t.toString())/1e9).toFixed(e).replace(/0+$/,\"\").replace(/\\.$/,\"\"),a=r?\"\":\" SOL\";return n?`${o}${a}`:`${\"0\"===o?\"<0.001\":o}${a}`}function f(t,e){let n=parseFloat(t.toString())/1e9,r=u.format(e*n);return\"$0.00\"===r?\"<$0.01\":r}function d({amount:t,fee:e,tokenPrice:n}){let r=BigInt(1e9*parseFloat(t)),o=r+e;return{fundingAmountInBaseUnit:r,fundingAmountInUsd:n?f(r,n):void 0,totalPriceInUsd:n?f(o,n):void 0,totalPriceInNativeCurrency:l(o),feePriceInNativeCurrency:l(e),feePriceInUsd:n?f(e,n):void 0}}function m(t){return\"version\"in t}function p(t,e){let n=(m(t)?t.message:t.compileMessage()).staticAccountKeys.find((t=>t.toBase58()===e));if(!n)throw Error(`Transaction does not contain public key ${e}`);return n}async function y(t,e){return BigInt((m(t)?(await e.getFeeForMessage(t.message)).value:await t.getEstimatedFee(e))??0)}function A(t,e,n){return{signature:t,parsedTransaction:n??null,signedTransaction:e,fees:BigInt(n?.meta?.fee||0)}}async function g(t,e){let{value:n}=await e.simulateTransaction(t);if(\"BlockhashNotFound\"===n.err)throw Error(\"Simulation failed: Blockhash not found\");return null==n.err&&n.logs?.every((t=>!/insufficient funds/gi.test(t)))}async function B({tx:t,connection:e,client:n}){let o=m(t)?t.message:t.compileMessage(),a=o.staticAccountKeys[0]?.toBase58()??\"\",i=await y(t,e),s={},c={},u=[];for(let t of o.compiledInstructions){let a=o.staticAccountKeys[t.programIdIndex]?.toBase58()||\"\";if(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\"!==a&&\"TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb\"!==a)if(\"11111111111111111111111111111111\"!==a)if(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"!==a)u.push({type:\"unknown\",program:a});else{let e=await r(function(t,e){let[n,r,o,a]=t.accountKeyIndexes.map((t=>e.staticAccountKeys[t]));if(!(n&&r&&o&&a))throw Error(\"Failed to parse ATA creation instruction\");return{type:\"ata-creation\",payer:n.toBase58(),ata:r.toBase58(),owner:o.toBase58(),mint:a.toBase58()}}(t,o));if(!e)continue;u.push(e),c[e.ata]={owner:e.owner,mint:e.mint}}else{let e=await r(b(t,o));if(!e)continue;u.push(e)}else{let a=await r(k(t,o,e,n,s,c));if(!a)continue;u.push(a),s[a.token.address]=a.token,c[a.fromAta]??={owner:a.fromAccount,mint:a.token.address},a.toAccount&&(c[a.toAta]??={owner:a.toAccount,mint:a.token.address})}}let l=u.filter((({type:t})=>[\"spl-transfer\",\"sol-transfer\"].includes(t)));return{spender:a,fee:i,instructions:l.length?l:u}}function w(t,r){try{return e(t,r)}catch{}try{return t.readBigInt64LE(r)}catch{}let o=Buffer.from(t);try{return n(o)}catch{}try{return o.subarray(r).readBigInt64LE()}catch{}try{return o.readBigInt64LE(r)}catch{}return 0n}async function k(e,n,r,o,a,i){let s,c,[u,l,f]=e.accountKeyIndexes.map((t=>n.staticAccountKeys[t]));if(!u||!l||!f)throw Error(\"Failed to parse SPL transfer instruction\");let d=\"\",m=i[l.toBase58()];if(m)s=m.owner,d=m.mint;else{let t=await r.getParsedAccountInfo(l,\"confirmed\"),e=t.value?.data;s=e?.parsed?.info?.owner,d=e?.parsed?.info?.mint??\"\",c=e?.parsed?.info?.tokenAmount?.decimals}if(!d){let t=await r.getParsedAccountInfo(u,\"confirmed\"),e=t.value?.data;d=e?.parsed?.info?.mint??\"\"}let p=a[d];if(d&&!p){let e=await o.getSplTokenMetadata({mintAddress:d,cluster:t(r.rpcEndpoint)});e&&(p={address:d,symbol:e.symbol,decimals:e.decimals})}let y=p?.symbol??\"\";c??=p?.decimals??9;let A=w(e.data,1);return{type:\"spl-transfer\",fromAta:u.toBase58(),fromAccount:f.toBase58(),toAta:l.toBase58(),toAccount:s,value:A,token:{symbol:y,decimals:c,address:d}}}async function b(t,e){let[n,r]=t.accountKeyIndexes.map((t=>e.staticAccountKeys[t]));if(!n||!r)throw Error(\"Failed to parse SOL transfer instruction\");let o=w(t.data,4);return{type:\"sol-transfer\",fromAccount:n.toBase58(),toAccount:r.toBase58(),value:o,token:{symbol:\"SOL\",decimals:9}}}export{c as ASSOCIATED_TOKEN_PROGRAM_ID,o as LAMPORTS_PER_SOL,a as SYSTEM_PROGRAM_ID,s as TOKEN_2022_PROGRAM_ID,i as TOKEN_PROGRAM_ID,A as createSolanaTransactionReceipt,f as getDollarsFromLamport,l as getNativeCurrencyFromLamports,d as getSolanaFormattedAmounts,y as getTransactionFees,p as getWalletPublicKeyFromTransaction,g as hasSufficientFunds,m as isVersionedTransaction,B as parseSolanaTransaction};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}