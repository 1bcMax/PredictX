{"ast":null,"code":"import t from \"eventemitter3\";\nimport { PrivyClientError as e } from \"../Error.mjs\";\nimport { EmbeddedProviderError as r } from \"./errors.mjs\";\nimport { isSupportedIframeRpcMethod as a } from \"./methods.mjs\";\nimport { getJsonRpcProvider as s, populateTransactionRequest as i } from \"./utils/index.mjs\";\nimport \"./types.mjs\";\nimport \"@ethersproject/abstract-signer\";\nimport \"@ethersproject/providers\";\nimport \"./gas/arbitrum.mjs\";\nimport \"@ethersproject/bignumber\";\nimport \"../chains/arbitrum.mjs\";\nimport \"../chains/arbitrumGoerli.mjs\";\nimport \"../chains/arbitrumSepolia.mjs\";\nimport \"./utils/ethers.mjs\";\nimport \"./gas/bsc.mjs\";\nimport \"./gas/op-stack.mjs\";\nimport \"@ethersproject/contracts\";\nimport \"@ethersproject/transactions\";\nimport \"../chains/base.mjs\";\nimport \"../chains/baseGoerli.mjs\";\nimport \"../chains/baseSepolia.mjs\";\nimport \"../chains/optimism.mjs\";\nimport \"../chains/optimismGoerli.mjs\";\nimport \"../chains/optimismSepolia.mjs\";\nimport \"../chains/zora.mjs\";\nimport \"../chains/zoraSepolia.mjs\";\nimport \"../chains/zoraTestnet.mjs\";\nimport \"./gas/polygon.mjs\";\nimport \"@ethersproject/units\";\nimport \"fetch-retry\";\nimport \"../chains/polygon.mjs\";\nimport \"../chains/polygonAmoy.mjs\";\nimport \"../chains/polygonMumbai.mjs\";\nimport \"./utils/gas.mjs\";\nclass n extends t {\n  async request(t) {\n    if (a(t.method)) return this.handleIFrameRpc(t);\n    switch (t.method) {\n      case \"eth_accounts\":\n      case \"eth_requestAccounts\":\n        return this._account.address ? [this._account.address] : [];\n      case \"eth_chainId\":\n        return `0x${this._chainId.toString(16)}`;\n      case \"wallet_switchEthereumChain\":\n        return this.handleSwitchEthereumChain(t);\n      case \"eth_estimateGas\":\n        return this.handleEstimateGas(t);\n      case \"eth_sendTransaction\":\n        {\n          let e = t.params?.[0];\n          return this.handleSendTransaction(e);\n        }\n      case \"eth_populateTransactionRequest\":\n        {\n          let e = t.params?.[0];\n          return this.handlePopulateTransaction(e);\n        }\n      default:\n        return this.handleJsonRpc(t);\n    }\n  }\n  ensureChainId(t) {\n    let e = {\n      chainId: this._chainId,\n      ...t\n    };\n    return this.internalSwitchEthereumChain(e.chainId), e;\n  }\n  internalSwitchEthereumChain(t) {\n    t && Number(t) !== this._chainId && (this._chainId = Number(t), this._jsonRpcProvider = s(this._chainId, this._chains, {\n      rpcUrls: []\n    }, {\n      appId: this._privyInternal.appId\n    }), this.emit(\"chainChanged\", t));\n  }\n  async handlePopulateTransaction(t) {\n    let e = this.ensureChainId(t);\n    return i(this._account.address, e, this._jsonRpcProvider);\n  }\n  async handleSendTransaction(t) {\n    let e = this.ensureChainId(t),\n      r = await i(this._account.address, e, this._jsonRpcProvider),\n      a = await this.handleIFrameRpc({\n        method: \"eth_signTransaction\",\n        params: [r]\n      });\n    return await this.handleJsonRpc({\n      method: \"eth_sendRawTransaction\",\n      params: [a]\n    });\n  }\n  async handleEstimateGas(t) {\n    if (!t.params || !Array.isArray(t.params)) throw Error(\"Invalid params for eth_estimateGas\");\n    delete t.params[0].gasPrice, delete t.params[0].maxFeePerGas, delete t.params[0].maxPriorityFeePerGas;\n    let e = {\n      ...t.params[0],\n      chainId: `0x${this._chainId.toString(16)}`\n    };\n    this.internalSwitchEthereumChain(e.chainId);\n    try {\n      return await this._jsonRpcProvider.send(\"eth_estimateGas\", [e]);\n    } catch (t) {\n      console.warn(`Gas estimation failed with error: ${t}. Retrying gas estimation by omitting the 'from' address`);\n      try {\n        return delete e.from, await this._jsonRpcProvider.send(\"eth_estimateGas\", [e]);\n      } catch (e) {\n        throw console.warn(`Gas estimation failed with error: ${e} when omitting the 'from' address`), t;\n      }\n    }\n  }\n  handleSwitchEthereumChain(t) {\n    let e;\n    if (!t.params || !Array.isArray(t.params)) throw new r(`Invalid params for ${t.method}`, 4200);\n    if (\"string\" == typeof t.params[0]) e = t.params[0];else {\n      if (!(\"chainId\" in t.params[0]) || \"string\" != typeof t.params[0].chainId) throw new r(`Invalid params for ${t.method}`, 4200);\n      e = t.params[0].chainId;\n    }\n    this.internalSwitchEthereumChain(e);\n  }\n  async handleIFrameRpc(t) {\n    try {\n      let e = await this._privyInternal.getAccessToken();\n      if (!e) throw Error(\"Missing privy token. User must be logged in\");\n      return this._privyInternal.createAnalyticsEvent(\"embedded_wallet_sdk_rpc_started\", {\n        method: t.method,\n        address: this._account.address\n      }), (await this._walletProxy.rpcWallet({\n        accessToken: e,\n        request: t,\n        entropyId: this._entropyId,\n        entropyIdVerifier: this._entropyIdVerifier,\n        hdWalletIndex: this._account.wallet_index,\n        chainType: \"ethereum\"\n      })).response.data;\n    } catch (r) {\n      console.error(r);\n      let a = r instanceof Error ? r.message : \"Unable to make wallet request\";\n      throw this._privyInternal.createAnalyticsEvent(\"embedded_wallet_sdk_rpc_failed\", {\n        method: t.method,\n        address: this._account.address,\n        error: a\n      }), new e({\n        code: \"embedded_wallet_request_error\",\n        error: a\n      });\n    }\n  }\n  async handleJsonRpc(t) {\n    return this._jsonRpcProvider.send(t.method, t.params ?? []);\n  }\n  toJSON() {\n    return `PrivyEIP1193Provider { address: '${this._account.address}', chainId: ${this._chainId}, request: [Function] }`;\n  }\n  constructor({\n    walletProxy: t,\n    privyInternal: e,\n    account: r,\n    entropyId: a,\n    entropyIdVerifier: i,\n    chains: n,\n    chainId: o = n[0].id\n  }) {\n    super(), this._walletProxy = t, this._privyInternal = e, this._account = r, this._entropyId = a, this._entropyIdVerifier = i, this._chainId = o, this._chains = n, this._jsonRpcProvider = s(o, n, {\n      rpcUrls: []\n    }, {\n      appId: this._privyInternal.appId\n    });\n  }\n}\nexport { n as EmbeddedWalletProvider };","map":{"version":3,"names":["t","PrivyClientError","e","EmbeddedProviderError","r","isSupportedIframeRpcMethod","a","getJsonRpcProvider","s","populateTransactionRequest","i","n","request","method","handleIFrameRpc","_account","address","_chainId","toString","handleSwitchEthereumChain","handleEstimateGas","params","handleSendTransaction","handlePopulateTransaction","handleJsonRpc","ensureChainId","chainId","internalSwitchEthereumChain","Number","_jsonRpcProvider","_chains","rpcUrls","appId","_privyInternal","emit","Array","isArray","Error","gasPrice","maxFeePerGas","maxPriorityFeePerGas","send","console","warn","from","getAccessToken","createAnalyticsEvent","_walletProxy","rpcWallet","accessToken","entropyId","_entropyId","entropyIdVerifier","_entropyIdVerifier","hdWalletIndex","wallet_index","chainType","response","data","error","message","code","toJSON","constructor","walletProxy","privyInternal","account","chains","o","id","EmbeddedWalletProvider"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/node_modules/@privy-io/js-sdk-core/dist/esm/embedded/EmbeddedWalletProvider.mjs"],"sourcesContent":["import t from\"eventemitter3\";import{PrivyClientError as e}from\"../Error.mjs\";import{EmbeddedProviderError as r}from\"./errors.mjs\";import{isSupportedIframeRpcMethod as a}from\"./methods.mjs\";import{getJsonRpcProvider as s,populateTransactionRequest as i}from\"./utils/index.mjs\";import\"./types.mjs\";import\"@ethersproject/abstract-signer\";import\"@ethersproject/providers\";import\"./gas/arbitrum.mjs\";import\"@ethersproject/bignumber\";import\"../chains/arbitrum.mjs\";import\"../chains/arbitrumGoerli.mjs\";import\"../chains/arbitrumSepolia.mjs\";import\"./utils/ethers.mjs\";import\"./gas/bsc.mjs\";import\"./gas/op-stack.mjs\";import\"@ethersproject/contracts\";import\"@ethersproject/transactions\";import\"../chains/base.mjs\";import\"../chains/baseGoerli.mjs\";import\"../chains/baseSepolia.mjs\";import\"../chains/optimism.mjs\";import\"../chains/optimismGoerli.mjs\";import\"../chains/optimismSepolia.mjs\";import\"../chains/zora.mjs\";import\"../chains/zoraSepolia.mjs\";import\"../chains/zoraTestnet.mjs\";import\"./gas/polygon.mjs\";import\"@ethersproject/units\";import\"fetch-retry\";import\"../chains/polygon.mjs\";import\"../chains/polygonAmoy.mjs\";import\"../chains/polygonMumbai.mjs\";import\"./utils/gas.mjs\";class n extends t{async request(t){if(a(t.method))return this.handleIFrameRpc(t);switch(t.method){case\"eth_accounts\":case\"eth_requestAccounts\":return this._account.address?[this._account.address]:[];case\"eth_chainId\":return`0x${this._chainId.toString(16)}`;case\"wallet_switchEthereumChain\":return this.handleSwitchEthereumChain(t);case\"eth_estimateGas\":return this.handleEstimateGas(t);case\"eth_sendTransaction\":{let e=t.params?.[0];return this.handleSendTransaction(e)}case\"eth_populateTransactionRequest\":{let e=t.params?.[0];return this.handlePopulateTransaction(e)}default:return this.handleJsonRpc(t)}}ensureChainId(t){let e={chainId:this._chainId,...t};return this.internalSwitchEthereumChain(e.chainId),e}internalSwitchEthereumChain(t){t&&Number(t)!==this._chainId&&(this._chainId=Number(t),this._jsonRpcProvider=s(this._chainId,this._chains,{rpcUrls:[]},{appId:this._privyInternal.appId}),this.emit(\"chainChanged\",t))}async handlePopulateTransaction(t){let e=this.ensureChainId(t);return i(this._account.address,e,this._jsonRpcProvider)}async handleSendTransaction(t){let e=this.ensureChainId(t),r=await i(this._account.address,e,this._jsonRpcProvider),a=await this.handleIFrameRpc({method:\"eth_signTransaction\",params:[r]});return await this.handleJsonRpc({method:\"eth_sendRawTransaction\",params:[a]})}async handleEstimateGas(t){if(!t.params||!Array.isArray(t.params))throw Error(\"Invalid params for eth_estimateGas\");delete t.params[0].gasPrice,delete t.params[0].maxFeePerGas,delete t.params[0].maxPriorityFeePerGas;let e={...t.params[0],chainId:`0x${this._chainId.toString(16)}`};this.internalSwitchEthereumChain(e.chainId);try{return await this._jsonRpcProvider.send(\"eth_estimateGas\",[e])}catch(t){console.warn(`Gas estimation failed with error: ${t}. Retrying gas estimation by omitting the 'from' address`);try{return delete e.from,await this._jsonRpcProvider.send(\"eth_estimateGas\",[e])}catch(e){throw console.warn(`Gas estimation failed with error: ${e} when omitting the 'from' address`),t}}}handleSwitchEthereumChain(t){let e;if(!t.params||!Array.isArray(t.params))throw new r(`Invalid params for ${t.method}`,4200);if(\"string\"==typeof t.params[0])e=t.params[0];else{if(!(\"chainId\"in t.params[0])||\"string\"!=typeof t.params[0].chainId)throw new r(`Invalid params for ${t.method}`,4200);e=t.params[0].chainId}this.internalSwitchEthereumChain(e)}async handleIFrameRpc(t){try{let e=await this._privyInternal.getAccessToken();if(!e)throw Error(\"Missing privy token. User must be logged in\");return this._privyInternal.createAnalyticsEvent(\"embedded_wallet_sdk_rpc_started\",{method:t.method,address:this._account.address}),(await this._walletProxy.rpcWallet({accessToken:e,request:t,entropyId:this._entropyId,entropyIdVerifier:this._entropyIdVerifier,hdWalletIndex:this._account.wallet_index,chainType:\"ethereum\"})).response.data}catch(r){console.error(r);let a=r instanceof Error?r.message:\"Unable to make wallet request\";throw this._privyInternal.createAnalyticsEvent(\"embedded_wallet_sdk_rpc_failed\",{method:t.method,address:this._account.address,error:a}),new e({code:\"embedded_wallet_request_error\",error:a})}}async handleJsonRpc(t){return this._jsonRpcProvider.send(t.method,t.params??[])}toJSON(){return`PrivyEIP1193Provider { address: '${this._account.address}', chainId: ${this._chainId}, request: [Function] }`}constructor({walletProxy:t,privyInternal:e,account:r,entropyId:a,entropyIdVerifier:i,chains:n,chainId:o=n[0].id}){super(),this._walletProxy=t,this._privyInternal=e,this._account=r,this._entropyId=a,this._entropyIdVerifier=i,this._chainId=o,this._chains=n,this._jsonRpcProvider=s(o,n,{rpcUrls:[]},{appId:this._privyInternal.appId})}}export{n as EmbeddedWalletProvider};\n"],"mappings":"AAAA,OAAOA,CAAC,MAAK,eAAe;AAAC,SAAOC,gBAAgB,IAAIC,CAAC,QAAK,cAAc;AAAC,SAAOC,qBAAqB,IAAIC,CAAC,QAAK,cAAc;AAAC,SAAOC,0BAA0B,IAAIC,CAAC,QAAK,eAAe;AAAC,SAAOC,kBAAkB,IAAIC,CAAC,EAACC,0BAA0B,IAAIC,CAAC,QAAK,mBAAmB;AAAC,OAAM,aAAa;AAAC,OAAM,gCAAgC;AAAC,OAAM,0BAA0B;AAAC,OAAM,oBAAoB;AAAC,OAAM,0BAA0B;AAAC,OAAM,wBAAwB;AAAC,OAAM,8BAA8B;AAAC,OAAM,+BAA+B;AAAC,OAAM,oBAAoB;AAAC,OAAM,eAAe;AAAC,OAAM,oBAAoB;AAAC,OAAM,0BAA0B;AAAC,OAAM,6BAA6B;AAAC,OAAM,oBAAoB;AAAC,OAAM,0BAA0B;AAAC,OAAM,2BAA2B;AAAC,OAAM,wBAAwB;AAAC,OAAM,8BAA8B;AAAC,OAAM,+BAA+B;AAAC,OAAM,oBAAoB;AAAC,OAAM,2BAA2B;AAAC,OAAM,2BAA2B;AAAC,OAAM,mBAAmB;AAAC,OAAM,sBAAsB;AAAC,OAAM,aAAa;AAAC,OAAM,uBAAuB;AAAC,OAAM,2BAA2B;AAAC,OAAM,6BAA6B;AAAC,OAAM,iBAAiB;AAAC,MAAMC,CAAC,SAASX,CAAC;EAAC,MAAMY,OAAOA,CAACZ,CAAC,EAAC;IAAC,IAAGM,CAAC,CAACN,CAAC,CAACa,MAAM,CAAC,EAAC,OAAO,IAAI,CAACC,eAAe,CAACd,CAAC,CAAC;IAAC,QAAOA,CAAC,CAACa,MAAM;MAAE,KAAI,cAAc;MAAC,KAAI,qBAAqB;QAAC,OAAO,IAAI,CAACE,QAAQ,CAACC,OAAO,GAAC,CAAC,IAAI,CAACD,QAAQ,CAACC,OAAO,CAAC,GAAC,EAAE;MAAC,KAAI,aAAa;QAAC,OAAM,KAAK,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAE;MAAC,KAAI,4BAA4B;QAAC,OAAO,IAAI,CAACC,yBAAyB,CAACnB,CAAC,CAAC;MAAC,KAAI,iBAAiB;QAAC,OAAO,IAAI,CAACoB,iBAAiB,CAACpB,CAAC,CAAC;MAAC,KAAI,qBAAqB;QAAC;UAAC,IAAIE,CAAC,GAACF,CAAC,CAACqB,MAAM,GAAG,CAAC,CAAC;UAAC,OAAO,IAAI,CAACC,qBAAqB,CAACpB,CAAC,CAAC;QAAA;MAAC,KAAI,gCAAgC;QAAC;UAAC,IAAIA,CAAC,GAACF,CAAC,CAACqB,MAAM,GAAG,CAAC,CAAC;UAAC,OAAO,IAAI,CAACE,yBAAyB,CAACrB,CAAC,CAAC;QAAA;MAAC;QAAQ,OAAO,IAAI,CAACsB,aAAa,CAACxB,CAAC,CAAC;IAAA;EAAC;EAACyB,aAAaA,CAACzB,CAAC,EAAC;IAAC,IAAIE,CAAC,GAAC;MAACwB,OAAO,EAAC,IAAI,CAACT,QAAQ;MAAC,GAAGjB;IAAC,CAAC;IAAC,OAAO,IAAI,CAAC2B,2BAA2B,CAACzB,CAAC,CAACwB,OAAO,CAAC,EAACxB,CAAC;EAAA;EAACyB,2BAA2BA,CAAC3B,CAAC,EAAC;IAACA,CAAC,IAAE4B,MAAM,CAAC5B,CAAC,CAAC,KAAG,IAAI,CAACiB,QAAQ,KAAG,IAAI,CAACA,QAAQ,GAACW,MAAM,CAAC5B,CAAC,CAAC,EAAC,IAAI,CAAC6B,gBAAgB,GAACrB,CAAC,CAAC,IAAI,CAACS,QAAQ,EAAC,IAAI,CAACa,OAAO,EAAC;MAACC,OAAO,EAAC;IAAE,CAAC,EAAC;MAACC,KAAK,EAAC,IAAI,CAACC,cAAc,CAACD;IAAK,CAAC,CAAC,EAAC,IAAI,CAACE,IAAI,CAAC,cAAc,EAAClC,CAAC,CAAC,CAAC;EAAA;EAAC,MAAMuB,yBAAyBA,CAACvB,CAAC,EAAC;IAAC,IAAIE,CAAC,GAAC,IAAI,CAACuB,aAAa,CAACzB,CAAC,CAAC;IAAC,OAAOU,CAAC,CAAC,IAAI,CAACK,QAAQ,CAACC,OAAO,EAACd,CAAC,EAAC,IAAI,CAAC2B,gBAAgB,CAAC;EAAA;EAAC,MAAMP,qBAAqBA,CAACtB,CAAC,EAAC;IAAC,IAAIE,CAAC,GAAC,IAAI,CAACuB,aAAa,CAACzB,CAAC,CAAC;MAACI,CAAC,GAAC,MAAMM,CAAC,CAAC,IAAI,CAACK,QAAQ,CAACC,OAAO,EAACd,CAAC,EAAC,IAAI,CAAC2B,gBAAgB,CAAC;MAACvB,CAAC,GAAC,MAAM,IAAI,CAACQ,eAAe,CAAC;QAACD,MAAM,EAAC,qBAAqB;QAACQ,MAAM,EAAC,CAACjB,CAAC;MAAC,CAAC,CAAC;IAAC,OAAO,MAAM,IAAI,CAACoB,aAAa,CAAC;MAACX,MAAM,EAAC,wBAAwB;MAACQ,MAAM,EAAC,CAACf,CAAC;IAAC,CAAC,CAAC;EAAA;EAAC,MAAMc,iBAAiBA,CAACpB,CAAC,EAAC;IAAC,IAAG,CAACA,CAAC,CAACqB,MAAM,IAAE,CAACc,KAAK,CAACC,OAAO,CAACpC,CAAC,CAACqB,MAAM,CAAC,EAAC,MAAMgB,KAAK,CAAC,oCAAoC,CAAC;IAAC,OAAOrC,CAAC,CAACqB,MAAM,CAAC,CAAC,CAAC,CAACiB,QAAQ,EAAC,OAAOtC,CAAC,CAACqB,MAAM,CAAC,CAAC,CAAC,CAACkB,YAAY,EAAC,OAAOvC,CAAC,CAACqB,MAAM,CAAC,CAAC,CAAC,CAACmB,oBAAoB;IAAC,IAAItC,CAAC,GAAC;MAAC,GAAGF,CAAC,CAACqB,MAAM,CAAC,CAAC,CAAC;MAACK,OAAO,EAAC,KAAK,IAAI,CAACT,QAAQ,CAACC,QAAQ,CAAC,EAAE,CAAC;IAAE,CAAC;IAAC,IAAI,CAACS,2BAA2B,CAACzB,CAAC,CAACwB,OAAO,CAAC;IAAC,IAAG;MAAC,OAAO,MAAM,IAAI,CAACG,gBAAgB,CAACY,IAAI,CAAC,iBAAiB,EAAC,CAACvC,CAAC,CAAC,CAAC;IAAA,CAAC,QAAMF,CAAC,EAAC;MAAC0C,OAAO,CAACC,IAAI,CAAC,qCAAqC3C,CAAC,0DAA0D,CAAC;MAAC,IAAG;QAAC,OAAO,OAAOE,CAAC,CAAC0C,IAAI,EAAC,MAAM,IAAI,CAACf,gBAAgB,CAACY,IAAI,CAAC,iBAAiB,EAAC,CAACvC,CAAC,CAAC,CAAC;MAAA,CAAC,QAAMA,CAAC,EAAC;QAAC,MAAMwC,OAAO,CAACC,IAAI,CAAC,qCAAqCzC,CAAC,mCAAmC,CAAC,EAACF,CAAC;MAAA;IAAC;EAAC;EAACmB,yBAAyBA,CAACnB,CAAC,EAAC;IAAC,IAAIE,CAAC;IAAC,IAAG,CAACF,CAAC,CAACqB,MAAM,IAAE,CAACc,KAAK,CAACC,OAAO,CAACpC,CAAC,CAACqB,MAAM,CAAC,EAAC,MAAM,IAAIjB,CAAC,CAAC,sBAAsBJ,CAAC,CAACa,MAAM,EAAE,EAAC,IAAI,CAAC;IAAC,IAAG,QAAQ,IAAE,OAAOb,CAAC,CAACqB,MAAM,CAAC,CAAC,CAAC,EAACnB,CAAC,GAACF,CAAC,CAACqB,MAAM,CAAC,CAAC,CAAC,CAAC,KAAI;MAAC,IAAG,EAAE,SAAS,IAAGrB,CAAC,CAACqB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAE,QAAQ,IAAE,OAAOrB,CAAC,CAACqB,MAAM,CAAC,CAAC,CAAC,CAACK,OAAO,EAAC,MAAM,IAAItB,CAAC,CAAC,sBAAsBJ,CAAC,CAACa,MAAM,EAAE,EAAC,IAAI,CAAC;MAACX,CAAC,GAACF,CAAC,CAACqB,MAAM,CAAC,CAAC,CAAC,CAACK,OAAO;IAAA;IAAC,IAAI,CAACC,2BAA2B,CAACzB,CAAC,CAAC;EAAA;EAAC,MAAMY,eAAeA,CAACd,CAAC,EAAC;IAAC,IAAG;MAAC,IAAIE,CAAC,GAAC,MAAM,IAAI,CAAC+B,cAAc,CAACY,cAAc,CAAC,CAAC;MAAC,IAAG,CAAC3C,CAAC,EAAC,MAAMmC,KAAK,CAAC,6CAA6C,CAAC;MAAC,OAAO,IAAI,CAACJ,cAAc,CAACa,oBAAoB,CAAC,iCAAiC,EAAC;QAACjC,MAAM,EAACb,CAAC,CAACa,MAAM;QAACG,OAAO,EAAC,IAAI,CAACD,QAAQ,CAACC;MAAO,CAAC,CAAC,EAAC,CAAC,MAAM,IAAI,CAAC+B,YAAY,CAACC,SAAS,CAAC;QAACC,WAAW,EAAC/C,CAAC;QAACU,OAAO,EAACZ,CAAC;QAACkD,SAAS,EAAC,IAAI,CAACC,UAAU;QAACC,iBAAiB,EAAC,IAAI,CAACC,kBAAkB;QAACC,aAAa,EAAC,IAAI,CAACvC,QAAQ,CAACwC,YAAY;QAACC,SAAS,EAAC;MAAU,CAAC,CAAC,EAAEC,QAAQ,CAACC,IAAI;IAAA,CAAC,QAAMtD,CAAC,EAAC;MAACsC,OAAO,CAACiB,KAAK,CAACvD,CAAC,CAAC;MAAC,IAAIE,CAAC,GAACF,CAAC,YAAYiC,KAAK,GAACjC,CAAC,CAACwD,OAAO,GAAC,+BAA+B;MAAC,MAAM,IAAI,CAAC3B,cAAc,CAACa,oBAAoB,CAAC,gCAAgC,EAAC;QAACjC,MAAM,EAACb,CAAC,CAACa,MAAM;QAACG,OAAO,EAAC,IAAI,CAACD,QAAQ,CAACC,OAAO;QAAC2C,KAAK,EAACrD;MAAC,CAAC,CAAC,EAAC,IAAIJ,CAAC,CAAC;QAAC2D,IAAI,EAAC,+BAA+B;QAACF,KAAK,EAACrD;MAAC,CAAC,CAAC;IAAA;EAAC;EAAC,MAAMkB,aAAaA,CAACxB,CAAC,EAAC;IAAC,OAAO,IAAI,CAAC6B,gBAAgB,CAACY,IAAI,CAACzC,CAAC,CAACa,MAAM,EAACb,CAAC,CAACqB,MAAM,IAAE,EAAE,CAAC;EAAA;EAACyC,MAAMA,CAAA,EAAE;IAAC,OAAM,oCAAoC,IAAI,CAAC/C,QAAQ,CAACC,OAAO,eAAe,IAAI,CAACC,QAAQ,yBAAyB;EAAA;EAAC8C,WAAWA,CAAC;IAACC,WAAW,EAAChE,CAAC;IAACiE,aAAa,EAAC/D,CAAC;IAACgE,OAAO,EAAC9D,CAAC;IAAC8C,SAAS,EAAC5C,CAAC;IAAC8C,iBAAiB,EAAC1C,CAAC;IAACyD,MAAM,EAACxD,CAAC;IAACe,OAAO,EAAC0C,CAAC,GAACzD,CAAC,CAAC,CAAC,CAAC,CAAC0D;EAAE,CAAC,EAAC;IAAC,KAAK,CAAC,CAAC,EAAC,IAAI,CAACtB,YAAY,GAAC/C,CAAC,EAAC,IAAI,CAACiC,cAAc,GAAC/B,CAAC,EAAC,IAAI,CAACa,QAAQ,GAACX,CAAC,EAAC,IAAI,CAAC+C,UAAU,GAAC7C,CAAC,EAAC,IAAI,CAAC+C,kBAAkB,GAAC3C,CAAC,EAAC,IAAI,CAACO,QAAQ,GAACmD,CAAC,EAAC,IAAI,CAACtC,OAAO,GAACnB,CAAC,EAAC,IAAI,CAACkB,gBAAgB,GAACrB,CAAC,CAAC4D,CAAC,EAACzD,CAAC,EAAC;MAACoB,OAAO,EAAC;IAAE,CAAC,EAAC;MAACC,KAAK,EAAC,IAAI,CAACC,cAAc,CAACD;IAAK,CAAC,CAAC;EAAA;AAAC;AAAC,SAAOrB,CAAC,IAAI2D,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}