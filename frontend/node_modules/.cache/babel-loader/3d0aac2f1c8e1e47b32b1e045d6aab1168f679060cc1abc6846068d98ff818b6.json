{"ast":null,"code":"import { jsx as e, jsxs as t } from \"react/jsx-runtime\";\nimport { createStore as a } from \"mipd\";\nimport { useState as r, useRef as n, useEffect as i, useCallback as o, useMemo as s } from \"react\";\nimport { isAndroid as l } from \"react-device-detect\";\nimport { getAddress as c } from \"viem/utils\";\nimport { CustomJwtAccountFlow as d } from \"./auth-flows/custom-jwt-account.mjs\";\nimport { UpdateEmailFlow as u, EmailFlow as h } from \"./auth-flows/email.mjs\";\nimport { FarcasterFlow as p } from \"./auth-flows/farcaster.mjs\";\nimport { GuestFlow as w } from \"./auth-flows/guest.mjs\";\nimport { PasskeyFlow as m } from \"./auth-flows/passkey.mjs\";\nimport { SiweFlow as y } from \"./auth-flows/siwe.mjs\";\nimport { SiwsFlow as g } from \"./auth-flows/siws.mjs\";\nimport { UpdateSmsFlow as f, SmsFlow as E } from \"./auth-flows/sms.mjs\";\nimport { TelegramAuthFlow as A, convertInitDataRawToTelegramWebAppData as _, detectCompletingTelegramFlow as T } from \"./auth-flows/telegram.mjs\";\nimport { v4 as v } from \"uuid\";\nimport { AccessToken as C } from \"./accessToken.mjs\";\nimport { getEntropyDetailsFromAccount as I, convertUserResponseToUser as k, getPrivySolanaHDWallets as W, getImportedPrivySolanaWallet as N, getPrivyPrimaryWallet as U, getPrivyEthereumWallet as O, getPrivyEthereumHDWallets as b, getImportedPrivyEthereumWallet as S, getPrivySolanaWallet as R, getLatestPrivyEthereumWallet as D, getSolanaSigningAndRootWallet as M, getEthereumSigningAndRootWallet as P, getLatestPrivySolanaWallet as L, getEntropyDetailsFromUser as F } from \"./client/user.mjs\";\nimport x from \"eventemitter3\";\nimport { CONNECTORS_STATE_KEY as j, CONNECTIONS_HISTORY_KEY as B, DEFAULT_PRIVY_API_URL as V, DEFAULT_API_TIMEOUT_MS as H, CLIENT_ANALYTICS_ID_KEY as K, CUSTOMER_ACCESS_TOKEN_STORAGE_KEY as z, PRIVY_ACCESS_TOKEN_STORAGE_KEY as G, getGuestCredentialStorageKey as q, WALLET_PROXY_TIMEOUT as $, HEADLESS_OAUTH_KEY as Y, OAUTH_DISABLE_SIGNUP_KEY as X, STATE_CODE_KEY as Q, FORKED_TOKEN_STORAGE_KEY as J } from \"./constants.mjs\";\nimport Z, { isLocalStorageAccessible as ee } from \"./storage.mjs\";\nimport { generateTypedDataWithDomainType as te, toHex as ae, detectInjectedConnectors as re, formatChainIdToCAIP2 as ne } from \"./utils/index.mjs\";\nimport { CoinbaseWalletConnector as ie } from \"./connectors/coinbase.mjs\";\nimport { EmbeddedWalletConnector as oe } from \"./connectors/embedded.mjs\";\nimport { isSupportedEthereumRpcMethod as se } from \"./embedded-wallets/rpc/types.mjs\";\nimport { Captcha as le } from \"./components/Captcha.mjs\";\nimport { LoginModal as ce } from \"./components/LoginModal.mjs\";\nimport { TelegramLoginButton as de } from \"./components/TelegramLoginButton.mjs\";\nimport { PrivyAppConfigProvider as ue, useAppConfig as he, useIsServerConfigLoaded as pe } from \"./configuration/context.mjs\";\nimport { areWalletArraysEqual as we } from \"./connectors/areWalletArraysEqual.mjs\";\nimport { PrivyProviderRpcError as me } from \"./connectors/errors.mjs\";\nimport { isBaseConnectedEthereumWallet as ye } from \"./connectors/isBaseConnectedEthereumWallet.mjs\";\nimport { mobileWalletsConfig as ge, getWalletConfigForConnector as fe } from \"./connectors/mobile-wallets.mjs\";\nimport { isSolanaWalletConnector as Ee, isBaseConnectedSolanaWallet as Ae } from \"./connectors/solana/index.mjs\";\nimport { WalletConnectV2WalletConnector as _e } from \"./connectors/walletconnect-v2.mjs\";\nimport { EmbeddedWalletIframe as Te } from \"./embedded-wallets/EmbeddedWalletIframe.mjs\";\nimport { isWalletDelegated as ve, getDelegatedWalletsData as Ce, getRootWalletDataForDelegation as Ie, getDelegatedWalletsForUser as ke } from \"./embedded-wallets/delegated-actions.mjs\";\nimport { errorIndicatesRecoveryIsNeeded as We } from \"./embedded-wallets/errors.mjs\";\nimport { signTransaction as Ne, sendTransaction as Ue } from \"./embedded-wallets/rpc/index.mjs\";\nimport { PrivyClientError as Oe, formatApiError as be, formatPrivyError as Se, PrivyErrorCode as Re, PrivyNotReadyError as De, PrivyConnectorError as Me, PrivyError as Pe } from \"./errors.mjs\";\nimport { signSolanaTransaction as Le, sendSolanaTransaction as Fe } from \"./embedded-wallets/solana/transaction.mjs\";\nimport { extractChainIdFromCAIP2 as xe } from \"./lib/caip2.mjs\";\nimport { USE_BROADCAST_CHANNEL_EVENT_TYPE as je, isPrivyTheOAuthProvider as Be, CROSS_APP_BROADCAST_CHANNEL_NAME as Ve } from \"./lib/cross-app/index.mjs\";\nimport { getCrossAppAuthorizationUrl as He, authenticateCrossAppAccount as Ke, getProviderAppMetadata as ze } from \"./lib/cross-app/authFlow.mjs\";\nimport { popupCrossAppAuthFlow as Ge } from \"./lib/cross-app/popupCrossAppAuthFlow.mjs\";\nimport { sendCrossAppRequest as qe } from \"./lib/cross-app/sendCrossAppRequest.mjs\";\nimport { getRecoveryAuthorizationUrl as $e, authenticateRecovery as Ye, embeddedWalletRecoveryScreen as Xe, toEmbeddedWalletSetRecoveryScreen as Qe } from \"./lib/embeddedWalletRecovery.mjs\";\nimport { FUNDING_SCREENS as Je, fundingScreenMethodMap as Ze } from \"./lib/funding/index.mjs\";\nimport { isFundingEnabled as et } from \"./lib/funding/isFundingEnabled.mjs\";\nimport tt from \"./lib/isEmbeddedWebview.mjs\";\nimport { triggerPopup as at } from \"./lib/popup/triggerPopup.mjs\";\nimport { popupOAuthFlow as rt } from \"./lib/popupOAuthFlow.mjs\";\nimport { prepareSiweMessageWithNonce as nt } from \"./lib/siwe.mjs\";\nimport { hasSufficientFunds as it, createSolanaTransactionReceipt as ot } from \"./lib/solana/transaction.mjs\";\nimport { toDisplayFromAccountType as st } from \"./lib/toDisplayFromAccountType.mjs\";\nimport { shouldCreateEmbeddedEthWallet as lt } from \"./lib/user/shouldCreateEmbeddedEthWallet.mjs\";\nimport { shouldCreateEmbeddedSolWallet as ct } from \"./lib/user/shouldCreateEmbeddedSolWallet.mjs\";\nimport { prepareTransactionRequest as dt } from \"./lib/viem/prepareTransactionRequest.mjs\";\nimport { transformResponseToSnakeCase as ut } from \"./passkeys/transformResponseToSnakeCase.mjs\";\nimport { PrivyPluginProvider as ht, usePlugins as pt } from \"./plugins/context/PrivyPluginContext.mjs\";\nimport { SOLANA_FUNDING_PLUGIN_ID as wt } from \"./plugins/solana-funding/id.mjs\";\nimport { RecentlyUsedAccountProvider as mt } from \"./recent-login/context.mjs\";\nimport { ModalScreen as yt } from \"./screens/index.mjs\";\nimport { Hide as gt } from \"./screens/LandingScreen/styles.mjs\";\nimport { GlobalStyle as ft } from \"./styles.mjs\";\nimport { getPublicClient as Et } from \"./utils/eth/getPublicClient.mjs\";\nimport { notImplemented as At } from \"./hooks/index.mjs\";\nimport { CaptchaProvider as _t } from \"./hooks/captcha-context.mjs\";\nimport { privyEventsDefault as Tt, emitPrivyEvent as vt, PrivyEventsContext as Ct } from \"./hooks/events-context.mjs\";\nimport { InternalPrivyContext as It } from \"./hooks/internal-context.mjs\";\nimport { ModalProvider as kt } from \"./hooks/modal-context.mjs\";\nimport { PrivyContext as Wt } from \"./hooks/privy-context.mjs\";\nimport { UseWalletsContext as Nt } from \"./hooks/useWallets.mjs\";\nimport { prepareSolanaFundingModalData as Ut, prepareFundingModalData as Ot } from \"./lib/funding/prepareFundingModalData.mjs\";\nimport { detectCompletingOAuthFlow as bt } from \"./auth-flows/oauth/detectCompletingOAuthFlow.mjs\";\nimport { OAuthFlow as St } from \"./auth-flows/oauth/OAuthFlow.mjs\";\nimport { toViemTransactionSerializable as Rt } from \"./lib/viem/toViemTransactionSerializable.mjs\";\nimport { getRpcTimeout as Dt } from \"./connectors/getRpcTimeout.mjs\";\nimport { EmbeddedProviderError as Mt } from \"./connectors/providerTypes.mjs\";\nimport { isEthereumWalletConnector as Pt } from \"./connectors/ethereum/index.mjs\";\nimport { EthereumNullConnector as Lt } from \"./connectors/ethereum/EthereumNullConnector.mjs\";\nimport { LegacyInjectedWalletConnector as Ft, Injected6963WalletConnector as xt } from \"./connectors/injected.mjs\";\nimport { MetamaskWalletConnector as jt } from \"./connectors/metamask.mjs\";\nimport { PrivyProxyProvider as Bt } from \"./connectors/privyProxyProvider.mjs\";\nimport { SolanaNullConnector as Vt } from \"./connectors/solana/SolanaNullConnector.mjs\";\nimport { loadConnectionHistory as Ht } from \"./connectors/stored-connection.mjs\";\nimport { Http as Kt } from \"./http.mjs\";\nimport { getPaymasterContext as zt } from \"./lib/smart-wallet-helpers.mjs\";\nimport { transformOptionsToCamelCase as Gt } from \"./passkeys/transformOptionsToCamelCase.mjs\";\nimport { mfaPasswordlessSmsInitPath as qt, mfaPasskeyInitPath as $t, acceptTermsPath as Yt, unlinkEmailPath as Xt, unlinkPhonePath as Qt, unlinkWalletPath as Jt, siwsUnlinkWalletPath as Zt, unlinkOAuthPath as ea, unlinkFarcasterPath as ta, telegramAccountUnlinkPath as aa, delegatedActionsRevokePath as ra, analyticsEventsPath as na, moonpayPluginOnRampPath as ia, coinbaseOnRampInitPath as oa, coinbaseOnRampStatusPath as sa, siweInitPath as la, siweAuthenticatePath as ca, siweLinkPath as da, smartWalletLinkPath as ua, siwsInitPath as ha, siwsAuthenticatePath as pa, transferOAuthPath as wa, telegramAccountTransferPath as ma, transferFarcasterPath as ya, transferWalletPath as ga, transferPhonePath as fa, transferEmailPath as Ea, siwsLinkPath as Aa, usersMePath as _a, transactionScanningPath as Ta } from \"./paths.mjs\";\nimport { AccessTokenTypes as va, Session as Ca } from \"./session.mjs\";\nclass Ia extends x {\n  async handleSendTransaction(e) {\n    if (!e.params || !Array.isArray(e.params)) throw new Mt(`Invalid params for ${e.method}`, 4200);\n    let t = e.params[0];\n    if (!(await Va()) || !this.address) throw new Mt(\"Disconnected\", 4900);\n    let {\n      hash: a\n    } = await Ga(t, {\n      address: this.address\n    });\n    return a;\n  }\n  async handleSignTransaction(e) {\n    if (!e.params || !Array.isArray(e.params)) throw new Mt(`Invalid params for ${e.method}`, 4200);\n    let t = e.params[0];\n    if (!(await Va()) || !this.address) throw new Mt(\"Disconnected\", 4900);\n    let {\n      signature: a\n    } = await za(t, {\n      address: this.address\n    });\n    return a;\n  }\n  handleSwitchEthereumChain(e) {\n    let t;\n    if (!e.params || !Array.isArray(e.params)) throw new Mt(`Invalid params for ${e.method}`, 4200);\n    if (\"string\" == typeof e.params[0]) t = e.params[0];else {\n      if (!(\"chainId\" in e.params[0]) || \"string\" != typeof e.params[0].chainId) throw new Mt(`Invalid params for ${e.method}`, 4200);\n      t = e.params[0].chainId;\n    }\n    this.chainId = Number(t), this.publicClient = Et(this.chainId, this.chains, this.rpcConfig, {\n      appId: this.appId\n    }), this.emit(\"chainChanged\", t);\n  }\n  async handlePersonalSign(e) {\n    if (!e.params || !Array.isArray(e.params)) throw Error(\"Invalid params for personal_sign\");\n    let t = e.params[0],\n      a = e.params[1],\n      {\n        signature: r\n      } = await Ha({\n        message: t\n      }, {\n        address: a\n      });\n    return r;\n  }\n  async handleSignedTypedData(e) {\n    if (!e.params || !Array.isArray(e.params)) throw Error(\"Invalid params for eth_signTypedData_v4\");\n    let t = e.params[0],\n      a = \"string\" == typeof e.params[1] ? JSON.parse(e.params[1]) : e.params[1],\n      {\n        signature: r\n      } = await Ka(te(a), {\n        address: t\n      });\n    return r;\n  }\n  async handleEstimateGas(e) {\n    if (!e.params || !Array.isArray(e.params)) throw Error(\"Invalid params for eth_estimateGas\");\n    delete e.params[0].gasPrice, delete e.params[0].maxFeePerGas, delete e.params[0].maxPriorityFeePerGas;\n    let t = {\n      ...e.params[0],\n      chainId: ae(this.chainId)\n    };\n    return await this.publicClient.estimateGas({\n      account: t.from ?? this.address,\n      ...Rt(t)\n    });\n  }\n  async request(e) {\n    switch (console.debug(\"Embedded1193Provider.request() called with args\", e), e.method) {\n      case \"eth_accounts\":\n      case \"eth_requestAccounts\":\n        return this.address ? [this.address] : [];\n      case \"eth_chainId\":\n        return ae(this.chainId);\n      case \"eth_estimateGas\":\n        return this.handleEstimateGas(e);\n      case \"eth_sendTransaction\":\n        return this.handleSendTransaction(e);\n      case \"eth_signTransaction\":\n        return this.handleSignTransaction(e);\n      case \"wallet_switchEthereumChain\":\n        return this.handleSwitchEthereumChain(e);\n      case \"personal_sign\":\n        return this.handlePersonalSign(e);\n      case \"eth_signTypedData_v4\":\n        return this.handleSignedTypedData(e);\n    }\n    if (!se(e.method)) return this.publicClient.request({\n      method: e.method,\n      params: e.params\n    });\n    {\n      let t = await Va();\n      if (await qa(), !t || !this.address) throw new Mt(\"Disconnected\", 4900);\n      try {\n        return (await this.walletProxy.rpc({\n          accessToken: t,\n          entropyId: this.entropyId,\n          entropyIdVerifier: this.entropyIdVerifier,\n          chainType: \"ethereum\",\n          hdWalletIndex: this.walletIndex,\n          request: {\n            method: e.method,\n            params: e.params\n          }\n        })).response.data;\n      } catch (e) {\n        throw console.error(e), new Mt(\"Disconnected\", 4900);\n      }\n    }\n  }\n  constructor({\n    walletProxy: e,\n    address: t,\n    entropyId: a,\n    entropyIdVerifier: r,\n    rpcConfig: n,\n    chains: i,\n    appId: o,\n    chainId: s = 1,\n    walletIndex: l\n  }) {\n    super(), this.walletProxy = e, this.address = t, this.entropyId = a, this.entropyIdVerifier = r, this.chainId = s, this.rpcConfig = n, this.chains = i, this.publicClient = Et(s, this.chains, n, {\n      appId: o\n    }), this.rpcTimeoutDuration = Dt(n, \"privy\"), this.appId = o, this.walletIndex = l;\n  }\n}\nclass ka extends x {\n  get wallets() {\n    let e = new Set(),\n      t = this.walletConnectors.flatMap(e => e.wallets).sort((e, t) => e.connectedAt && t.connectedAt ? t.connectedAt - e.connectedAt : 0).filter(t => {\n        let a = `${t.address}${t.walletClientType}${t.connectorType}${t.meta.id}`;\n        return !e.has(a) && (e.add(a), !0);\n      }),\n      a = t.findIndex(e => e.address === (this.activeWallet ? this.activeWallet : \"unknown\"));\n    return a >= 0 && t.unshift(t.splice(a, 1)[0]), t;\n  }\n  async initialize(e) {\n    if (this.initialized && !e) return;\n    e && this.removeAllConnectors(), Z.get(j) && (Z.getKeys().forEach(e => {\n      e.startsWith(\"walletconnect\") && Z.del(e);\n    }), Z.del(j));\n    let t = re({\n      store: this.store,\n      walletList: this.walletList,\n      externalWalletConfig: this.externalWalletConfig,\n      walletChainType: this.walletChainType\n    }).then(e => {\n      e.forEach(({\n        type: e,\n        eip6963InjectedProvider: t,\n        legacyInjectedProvider: a\n      }) => {\n        this.createEthereumWalletConnector({\n          connectorType: \"injected\",\n          walletClientType: e,\n          providers: {\n            eip6963InjectedProvider: t,\n            legacyInjectedProvider: a\n          }\n        });\n      });\n    });\n    for (let e of (this.walletList.includes(\"coinbase_wallet\") && this.createEthereumWalletConnector({\n      connectorType: \"coinbase_wallet\",\n      walletClientType: \"coinbase_wallet\"\n    }), Object.values(ge))) !e.isInstalled && this.walletList.includes(e.client) && ([\"ethereum-only\", \"ethereum-and-solana\"].includes(this.walletChainType) && e.chainTypes.includes(\"ethereum\") && this.createEthereumWalletConnector({\n      connectorType: \"null\",\n      walletClientType: e.client,\n      walletConfig: e\n    }), [\"ethereum-and-solana\", \"solana-only\"].includes(this.walletChainType) && e.chainTypes.includes(\"solana\") && this.addWalletConnector(new Vt({\n      id: e.client,\n      name: e.name,\n      icon: e.logoDataUri\n    })));\n    this.externalWalletConfig.walletConnect.enabled && this.createEthereumWalletConnector({\n      connectorType: \"wallet_connect_v2\",\n      walletClientType: \"unknown\"\n    }), this.externalWalletConfig.solana.connectors?.get().forEach(this.addSolanaWalletConnector), this.externalWalletConfig.solana.connectors?._setOnConnectorsUpdated?.(e => {\n      e?.forEach(this.addSolanaWalletConnector);\n    }), await t, this.initialized = !0;\n  }\n  findWalletConnector(e, t) {\n    return \"wallet_connect_v2\" === e ? this.walletConnectors.filter(Pt).find(t => t.connectorType === e) ?? null : this.walletConnectors.filter(Pt).find(a => a.connectorType === e && a.walletClientType === t) ?? null;\n  }\n  findSolanaWalletConnector(e, t) {\n    return this.walletConnectors.filter(Ee).find(a => a.connectorType === e && (\"unknown\" === a.walletClientType ? a.walletBranding.id === t : a.walletClientType === t)) ?? null;\n  }\n  findEmbeddedWalletConnectors() {\n    return this.walletConnectors.filter(e => \"embedded\" === e.connectorType);\n  }\n  onInitialized(e) {\n    e.wallets.forEach(e => {\n      let t = this.storedConnections.find(t => t.address === e.address && t.connectorType === e.connectorType && (\"solana\" === e.type && \"unknown\" === t.walletClientType && \"unknown\" === e.walletClientType ? e.meta.id === t.id : t.walletClientType === e.walletClientType));\n      t && (e.connectedAt = t.connectedAt);\n    }), this.saveConnectionHistory(), this.emit(\"walletsUpdated\"), this.emit(\"connectorInitialized\");\n  }\n  onWalletsUpdated(e) {\n    e.initialized && (this.saveConnectionHistory(), this.emit(\"walletsUpdated\"));\n  }\n  addEmbeddedWalletConnectors({\n    walletProxy: e,\n    rootWallet: t,\n    embeddedWallets: a,\n    defaultChain: r,\n    appId: n\n  }) {\n    for (let i of a) {\n      let a = this.findEmbeddedWalletConnectors().find(e => e.walletIndex === i.walletIndex);\n      if (a && Pt(a)) a.proxyProvider.walletProxy = e;else {\n        let {\n            entropyId: a,\n            entropyIdVerifier: o\n          } = I(t),\n          s = new oe({\n            provider: new Ia({\n              walletProxy: e,\n              address: i.address,\n              entropyId: a,\n              entropyIdVerifier: o,\n              rpcConfig: this.rpcConfig,\n              chains: this.chains,\n              appId: n,\n              chainId: r.id,\n              walletIndex: i.walletIndex\n            }),\n            chains: this.chains,\n            defaultChain: r,\n            rpcConfig: this.rpcConfig,\n            imported: !1,\n            walletIndex: i.walletIndex\n          });\n        this.addWalletConnector(s);\n      }\n    }\n  }\n  addImportedWalletConnector(e, t, a, r) {\n    let n = this.findWalletConnector(\"embedded_imported\", \"privy\");\n    if (n && Pt(n)) n.proxyProvider.walletProxy = e;else {\n      let n = new oe({\n        provider: new Ia({\n          walletProxy: e,\n          address: t,\n          entropyId: t,\n          entropyIdVerifier: \"ethereum-address-verifier\",\n          walletIndex: 0,\n          rpcConfig: this.rpcConfig,\n          chains: this.chains,\n          appId: r,\n          chainId: a.id\n        }),\n        chains: this.chains,\n        walletIndex: 0,\n        defaultChain: a,\n        rpcConfig: this.rpcConfig,\n        imported: !0\n      });\n      this.addWalletConnector(n);\n    }\n  }\n  removeEmbeddedWalletConnectors() {\n    this.walletConnectors = this.walletConnectors.filter(e => \"embedded\" !== e.connectorType), this.saveConnectionHistory(), this.storedConnections = Ht(), this.emit(\"walletsUpdated\");\n  }\n  removeImportedWalletConnector() {\n    let e = this.findWalletConnector(\"embedded_imported\", \"privy\");\n    if (e) {\n      let t = this.walletConnectors.indexOf(e);\n      this.walletConnectors.splice(t, 1), this.saveConnectionHistory(), this.storedConnections = Ht(), this.emit(\"walletsUpdated\");\n    }\n  }\n  async createEthereumWalletConnector({\n    connectorType: e,\n    walletClientType: t,\n    providers: a,\n    walletConfig: r\n  }) {\n    let n = this.findWalletConnector(e, t);\n    if (n && Pt(n)) return n instanceof _e && n.resetConnection(t), n;\n    let i = (() => \"injected\" !== e ? \"coinbase_wallet\" === e ? new ie(this.chains, this.defaultChain, this.rpcConfig, this.externalWalletConfig, this.privyAppName, this.privyAppLogo) : \"null\" !== e ? new _e(this.walletConnectCloudProjectId, this.rpcConfig, this.chains, this.defaultChain, this.shouldEnforceDefaultChainOnConnect, this.privyAppId, this.privyAppName, t) : r ? new Lt({\n      id: r.client,\n      name: r.name,\n      icon: r.logoDataUri,\n      defaultChain: this.defaultChain,\n      walletClientType: r.client\n    }) : null : \"metamask\" === t && a?.eip6963InjectedProvider ? new jt(this.chains, this.defaultChain, this.rpcConfig, a?.eip6963InjectedProvider, \"metamask\") : \"metamask\" === t && a?.legacyInjectedProvider ? new Ft(this.chains, this.defaultChain, this.rpcConfig, a?.legacyInjectedProvider, \"metamask\") : \"phantom\" === t && a?.legacyInjectedProvider ? new Ft(this.chains, this.defaultChain, this.rpcConfig, a?.legacyInjectedProvider, \"phantom\") : a?.legacyInjectedProvider && \"unknown_browser_extension\" === t ? new Ft(this.chains, this.defaultChain, this.rpcConfig, a?.legacyInjectedProvider) : a?.eip6963InjectedProvider ? new xt(this.chains, this.defaultChain, this.rpcConfig, a?.eip6963InjectedProvider, t) : void 0)();\n    return i && this.addWalletConnector(i), i || null;\n  }\n  addWalletConnector(e) {\n    this.walletConnectors.push(e), e.on(\"initialized\", () => this.onInitialized(e)), e.on(\"walletsUpdated\", () => this.onWalletsUpdated(e)), e.initialize().catch(e => {\n      console.debug(\"Failed to initialize connector\", e);\n    });\n  }\n  saveConnectionHistory() {\n    let e = this.wallets.map(e => ({\n      address: e.address,\n      connectorType: e.connectorType,\n      walletClientType: e.walletClientType,\n      connectedAt: e.connectedAt,\n      id: e.meta.id\n    }));\n    Z.put(B, e);\n  }\n  async activeWalletSign(e) {\n    let t = this.wallets,\n      a = t.length > 0 ? t[0] : null;\n    return a && ye(a) ? a.sign(e) : null;\n  }\n  setActiveWallet(e) {\n    this.activeWallet = c(e), this.emit(\"walletsUpdated\");\n  }\n  setWalletList(e) {\n    this.walletList = e, this.initialized && this.initialize(!0).catch(console.error);\n  }\n  removeAllConnectors() {\n    for (let e of this.walletConnectors) e.removeAllListeners();\n    this.walletConnectors = [];\n  }\n  constructor(e, t, a, r, n, i, o, s, l, c, d, u) {\n    super(), this.addSolanaWalletConnector = async e => {\n      this.findSolanaWalletConnector(\"solana_adapter\", e.walletClientType) || this.addWalletConnector(e);\n    }, this.getEthereumProvider = () => {\n      let e = this.wallets[0],\n        t = this.walletConnectors.find(t => t.wallets.find(t => t.address === e?.address));\n      return e && t ? t.proxyProvider : new Bt();\n    }, this.privyAppId = e, this.walletConnectCloudProjectId = t, this.rpcConfig = a, this.chains = r, this.defaultChain = n, this.walletConnectors = [], this.initialized = !1, this.store = i, this.walletList = o, this.shouldEnforceDefaultChainOnConnect = s, this.externalWalletConfig = l, this.privyAppName = c, this.privyAppLogo = d, this.walletChainType = u || \"ethereum-only\", this.storedConnections = Ht();\n  }\n}\nlet Wa;\nvar Na = 0,\n  Ua = \"__private_\" + Na++ + \"__getOrGenerateClientAnalyticsId\";\nclass Oa {\n  initializeConnectorManager({\n    walletConnectCloudProjectId: e,\n    rpcConfig: t,\n    chains: a,\n    defaultChain: r,\n    store: n,\n    walletList: i,\n    shouldEnforceDefaultChainOnConnect: o,\n    externalWalletConfig: s,\n    appName: l,\n    walletChainType: c\n  }) {\n    this.connectors || (this.connectors = new ka(this.appId, e, t, a, r, n, i, o, s, l, void 0, c));\n  }\n  generateApi() {\n    let e = new Kt({\n      appId: this.appId,\n      appClientId: this.appClientId,\n      client: this,\n      defaults: {\n        baseURL: this.apiUrl,\n        timeout: this.timeout\n      }\n    });\n    return this.session.api = e, e;\n  }\n  updateApiUrl(e) {\n    this.apiUrl = e || this.fallbackApiUrl, this.api = this.generateApi(), e && (this.useServerCookies = !0);\n  }\n  authenticate() {\n    if (!this.authFlow) throw new Oe(\"No auth flow in progress.\");\n    return this.session.authenticate(this.authFlow);\n  }\n  async link() {\n    if (!this.authFlow) throw new Oe(\"No auth flow in progress.\");\n    let {\n      oAuthTokens: e\n    } = await this.session.link(this.authFlow);\n    return {\n      user: await this.getAuthenticatedUser(),\n      oAuthTokens: e\n    };\n  }\n  storeProviderAccessToken(e, t) {\n    this.session.storeProviderAccessToken(e, t);\n  }\n  getProviderAccessToken(e) {\n    return this.session.getProviderAccessToken(e);\n  }\n  async logout() {\n    await this.session.destroy(), this.authFlow = void 0;\n  }\n  clearProviderAcccessTokens(e) {\n    e.linkedAccounts.filter(e => \"cross_app\" === e.type).forEach(e => {\n      this.storeProviderAccessToken(e.providerApp.id, null);\n    });\n  }\n  startAuthFlow(e) {\n    return e.api = this.api, this.authFlow = e, this.authFlow;\n  }\n  async initMfaSmsVerification() {\n    try {\n      await this.api.post(qt, {\n        action: \"verify\"\n      });\n    } catch (e) {\n      throw be(e);\n    }\n  }\n  async initMfaPasskeyVerification() {\n    try {\n      let e = await this.api.post($t, {});\n      return Gt(e.options);\n    } catch (e) {\n      throw be(e);\n    }\n  }\n  async getCrossAppProviderDetails(e) {\n    try {\n      return this._cachedProviderAppDetails[e] || (this._cachedProviderAppDetails[e] = await this.api.get(`/api/v1/apps/${e}/cross-app/details`)), this._cachedProviderAppDetails[e];\n    } catch (e) {\n      console.error(\"Error fetching cross app provider details\", e);\n    }\n  }\n  async acceptTerms() {\n    try {\n      let e = await this.api.post(Yt, {});\n      return k(e);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async unlinkEmail(e) {\n    try {\n      let t = await this.api.post(Xt, {\n        address: e\n      });\n      return (await this.getAuthenticatedUser()) ?? k(t);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async unlinkPhone(e) {\n    try {\n      let t = await this.api.post(Qt, {\n        phoneNumber: e\n      });\n      return (await this.getAuthenticatedUser()) ?? k(t);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async unlinkEthereumWallet(e) {\n    try {\n      let t = await this.api.post(Jt, {\n        address: e\n      });\n      return (await this.getAuthenticatedUser()) ?? k(t);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async unlinkSolanaWallet(e) {\n    try {\n      let t = await this.api.post(Zt, {\n        address: e\n      });\n      return (await this.getAuthenticatedUser()) ?? k(t);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async unlinkOAuth(e, t) {\n    try {\n      let a = await this.api.post(ea, {\n        provider: e,\n        subject: t\n      });\n      return (await this.getAuthenticatedUser()) ?? k(a);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async unlinkFarcaster(e) {\n    try {\n      let t = await this.api.post(ta, {\n        fid: e\n      });\n      return (await this.getAuthenticatedUser()) ?? k(t);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async unlinkTelegram(e) {\n    try {\n      let t = await this.api.post(aa, {\n        telegram_user_id: e\n      });\n      return (await this.getAuthenticatedUser()) ?? k(t);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async revokeDelegatedWallet() {\n    try {\n      await this.api.post(ra, {});\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async createAnalyticsEvent({\n    eventName: e,\n    payload: t,\n    timestamp: a,\n    options: r\n  }) {\n    if (\"undefined\" != typeof window) try {\n      this.clientAnalyticsId || console.warn(\"No client analytics id set, refusing to send analytics event\"), await this.api.post(na, {\n        event_name: e,\n        client_id: this.clientAnalyticsId,\n        payload: {\n          ...(t || {}),\n          clientTimestamp: a ? a.toISOString() : new Date().toISOString()\n        }\n      }, {\n        retry: -1,\n        keepalive: r?.keepAlive ?? !1\n      });\n    } catch (e) {}\n  }\n  async signMoonpayOnRampUrl(e) {\n    try {\n      return this.api.post(ia, e);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async initCoinbaseOnRamp(e) {\n    try {\n      return this.api.post(oa, e);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async getCoinbaseOnRampStatus({\n    partnerUserId: e\n  }) {\n    try {\n      return this.api.get(`${sa}?partnerUserId=${e}`);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async getAuthenticatedUser() {\n    return this.session.hasRefreshCredentials() || this.session.hasRecoveryCredentials() ? this.session.refresh() : null;\n  }\n  async getAccessToken(e) {\n    return (await this.getPrivyAccessToken(e)) || (await this.getCustomerAccessToken(e));\n  }\n  async getCustomerAccessToken(e) {\n    return await this._getToken(va.CUSTOMER, e);\n  }\n  async getPrivyAccessToken(e) {\n    return await this._getToken(va.PRIVY, e);\n  }\n  async _getToken(e, t) {\n    return this.session.getToken(e) ? this.session.hasActiveAccessToken(e) ? this.session.hasRefreshCredentials(e) ? C.parse(this.session.getToken(e))?.appId !== this.appId ? (await this.logout(), null) : this.session.getToken(e) : (this.session.destroyLocalState(), null) : !t?.disableAutoRefresh && this.session.hasRefreshCredentials(e) ? (await this.session.refresh(), this.session.getToken(e)) : null : null;\n  }\n  async getSmartWalletsConfig() {\n    try {\n      let e = {},\n        t = this.session.token;\n      t && (e.authorization = `Bearer ${t}`);\n      let a = await this.api.get(`/api/v1/apps/${this.appId}/smart_wallets`, {\n        baseURL: this.fallbackApiUrl,\n        headers: e\n      });\n      return a.enabled ? {\n        enabled: a.enabled,\n        smartWalletType: a.smart_wallet_type,\n        configuredNetworks: a.configured_networks.map(e => ({\n          chainId: e.chain_id,\n          bundlerUrl: e.bundler_url,\n          paymasterUrl: e.paymaster_url,\n          paymasterContext: zt(e.paymaster_url, e.paymaster_context)\n        }))\n      } : {\n        enabled: a.enabled\n      };\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async getServerConfig() {\n    try {\n      let e = {},\n        t = this.session.token;\n      t && (e.authorization = `Bearer ${t}`);\n      let a = await this.api.get(`/api/v1/apps/${this.appId}`, {\n          baseURL: this.fallbackApiUrl,\n          headers: e\n        }),\n        r = a.telegram_auth_config ? {\n          botId: a.telegram_auth_config.bot_id,\n          botName: a.telegram_auth_config.bot_name,\n          linkEnabled: a.telegram_auth_config.link_enabled,\n          seamlessAuthEnabled: a.telegram_auth_config.seamless_auth_enabled\n        } : void 0,\n        n = a.funding_config ? {\n          methods: a.funding_config.methods,\n          options: a.funding_config.options,\n          defaultRecommendedAmount: a.funding_config.default_recommended_amount,\n          defaultRecommendedCurrency: a.funding_config.default_recommended_currency,\n          promptFundingOnWalletCreation: a.funding_config.prompt_funding_on_wallet_creation,\n          crossChainBridgingEnabled: a.funding_config.cross_chain_bridging_enabled\n        } : void 0;\n      return {\n        id: a.id,\n        name: a.name,\n        verificationKey: a.verification_key,\n        logoUrl: a.logo_url || void 0,\n        accentColor: a.accent_color || void 0,\n        showWalletLoginFirst: a.show_wallet_login_first,\n        allowlistConfig: {\n          errorTitle: a.allowlist_config.error_title,\n          errorDetail: a.allowlist_config.error_detail,\n          errorCtaText: a.allowlist_config.cta_text,\n          errorCtaLink: a.allowlist_config.cta_link\n        },\n        walletAuth: a.wallet_auth,\n        solanaWalletAuth: a.solana_wallet_auth,\n        emailAuth: a.email_auth,\n        smsAuth: a.sms_auth,\n        googleOAuth: a.google_oauth,\n        twitterOAuth: a.twitter_oauth,\n        discordOAuth: a.discord_oauth,\n        githubOAuth: a.github_oauth,\n        spotifyOAuth: a.spotify_oauth,\n        instagramOAuth: a.instagram_oauth,\n        tiktokOAuth: a.tiktok_oauth,\n        linkedinOAuth: a.linkedin_oauth,\n        appleOAuth: a.apple_oauth,\n        farcasterAuth: a.farcaster_auth,\n        passkeyAuth: a.passkey_auth,\n        passkeysForSignupEnabled: a.passkeys_for_signup_enabled,\n        telegramAuth: a.telegram_auth,\n        disablePlusEmails: a.disable_plus_emails,\n        termsAndConditionsUrl: a.terms_and_conditions_url,\n        embeddedWalletConfig: {\n          createOnLogin: a.embedded_wallet_config?.create_on_login,\n          userOwnedRecoveryOptions: a.embedded_wallet_config.user_owned_recovery_options,\n          requireUserOwnedRecoveryOnCreate: a.embedded_wallet_config.require_user_owned_recovery_on_create\n        },\n        privacyPolicyUrl: a.privacy_policy_url,\n        requireUsersAcceptTerms: a.require_users_accept_terms,\n        customApiUrl: a.custom_api_url,\n        walletConnectCloudProjectId: a.wallet_connect_cloud_project_id,\n        fiatOnRampEnabled: a.fiat_on_ramp_enabled,\n        captchaEnabled: a.captcha_enabled,\n        captchaSiteKey: a.captcha_site_key,\n        createdAt: new Date(1e3 * a.created_at),\n        updatedAt: new Date(1e3 * a.updated_at),\n        mfaMethods: a.mfa_methods,\n        enforceWalletUis: a.enforce_wallet_uis,\n        legacyWalletUiConfig: a.legacy_wallet_ui_config,\n        telegramAuthConfiguration: r,\n        fundingConfig: n\n      };\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async getUsdTokenPrice(e) {\n    try {\n      return (await this.api.get(`/api/v1/token_price?chainId=${e.id}&tokenSymbol=${e.nativeCurrency.symbol}`)).usd;\n    } catch (t) {\n      return void console.error(`Unable to fetch token price for chain with id ${e.id}`);\n    }\n  }\n  async getUsdPriceForSol() {\n    try {\n      return (await this.api.get(\"/api/v1/token_price?chainId=0&tokenSymbol=SOL\")).usd;\n    } catch (e) {\n      return void console.error(\"Unable to fetch token price for SOL\");\n    }\n  }\n  async getSplTokenMetadata({\n    mintAddress: e,\n    cluster: t\n  }) {\n    try {\n      return await this.api.get(`/api/v1/spl_token_info?mint_address=${e}&cluster=${t}`);\n    } catch (a) {\n      return void console.error(`Unable to fetch token metadata for ${t}:${e}`);\n    }\n  }\n  async requestFarcasterSignerStatus(e) {\n    try {\n      return await this.api.post(\"/api/v1/farcaster/signer/status\", {\n        ed25519_public_key: e\n      });\n    } catch (e) {\n      throw console.error(\"Unable to fetch Farcaster signer status\"), e;\n    }\n  }\n  async forkSession() {\n    return await this.session.forkSession();\n  }\n  async generateSiweNonce({\n    address: e,\n    captchaToken: t\n  }) {\n    try {\n      return (await this.api.post(la, {\n        address: e,\n        token: t\n      })).nonce;\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async authenticateWithSiweInternal({\n    message: e,\n    signature: t,\n    chainId: a,\n    walletClientType: r,\n    connectorType: n,\n    mode: i\n  }) {\n    return await this.api.post(ca, {\n      message: e,\n      signature: t,\n      chainId: a,\n      walletClientType: r,\n      connectorType: n,\n      mode: i\n    });\n  }\n  async linkWithSiweInternal({\n    message: e,\n    signature: t,\n    chainId: a,\n    walletClientType: r,\n    connectorType: n\n  }) {\n    return await this.api.post(da, {\n      message: e,\n      signature: t,\n      chainId: a,\n      walletClientType: r,\n      connectorType: n\n    });\n  }\n  async linkSmartWallet({\n    message: e,\n    signature: t,\n    smartWalletType: a\n  }) {\n    try {\n      let r = await this.api.post(ua, {\n        message: e,\n        signature: t,\n        smart_wallet_type: a\n      });\n      return k(r);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async linkWithSiwe({\n    message: e,\n    signature: t,\n    chainId: a,\n    walletClientType: r,\n    connectorType: n\n  }) {\n    try {\n      let i = await this.linkWithSiweInternal({\n        message: e,\n        signature: t,\n        chainId: a,\n        walletClientType: r,\n        connectorType: n\n      });\n      return k(i);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async generateSiwsNonce({\n    address: e,\n    captchaToken: t\n  }) {\n    try {\n      return (await this.api.post(ha, {\n        address: e,\n        token: t\n      })).nonce;\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async authenticateWithSiwsInternal({\n    message: e,\n    signature: t,\n    walletClientType: a,\n    connectorType: r,\n    mode: n\n  }) {\n    return await this.api.post(pa, {\n      message: e,\n      signature: t,\n      walletClientType: a,\n      connectorType: r,\n      mode: n\n    });\n  }\n  async sendAccountTransferRequest({\n    nonce: e,\n    account: t,\n    accountType: a,\n    externalWalletMetadata: r,\n    telegramAuthResult: n,\n    telegramWebAppData: i,\n    farcasterEmbeddedAddress: o,\n    oAuthUserInfo: s\n  }) {\n    try {\n      let l, c;\n      switch (a) {\n        case \"email\":\n          l = Ea, c = {\n            nonce: e,\n            email: t\n          };\n          break;\n        case \"sms\":\n          l = fa, c = {\n            nonce: e,\n            phoneNumber: t\n          };\n          break;\n        case \"siwe\":\n          if (l = ga, !r) throw Error(\"Wallet parameters must be defined\");\n          c = {\n            nonce: e,\n            address: t,\n            ...r\n          };\n          break;\n        case \"farcaster\":\n          l = ya, c = {\n            nonce: e,\n            farcaster_id: t,\n            farcaster_embedded_address: o\n          };\n          break;\n        case \"telegram\":\n          l = ma, c = {\n            nonce: e,\n            telegram_auth_result: n,\n            telegram_web_app_data: i\n          };\n          break;\n        case \"custom\":\n        case \"guest\":\n        case \"passkey\":\n          throw Error(\"Invalid transfer account type\");\n        default:\n          l = wa, c = {\n            nonce: e,\n            userInfo: s\n          };\n      }\n      let d = await this.api.post(l, c);\n      return (await this.getAuthenticatedUser()) ?? k(d);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async linkWithSiwsInternal({\n    message: e,\n    signature: t,\n    walletClientType: a,\n    connectorType: r\n  }) {\n    return await this.api.post(Aa, {\n      message: e,\n      signature: t,\n      walletClientType: a,\n      connectorType: r\n    });\n  }\n  async linkWithSiws({\n    message: e,\n    signature: t,\n    walletClientType: a,\n    connectorType: r\n  }) {\n    try {\n      let n = await this.linkWithSiwsInternal({\n        message: e,\n        signature: t,\n        walletClientType: a,\n        connectorType: r\n      });\n      return k(n);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async updateUserAndIdToken() {\n    try {\n      let e = await this.api.get(_a);\n      return this.session.updateIdentityToken(e.identity_token), k(e.user);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  async scanTransaction(e) {\n    try {\n      return await this.api.post(Ta, e);\n    } catch (e) {\n      throw Se(e);\n    }\n  }\n  constructor({\n    apiUrl: e = V,\n    appId: t,\n    appClientId: a,\n    timeout: r = H\n  }) {\n    Object.defineProperty(this, Ua, {\n      value: ba\n    }), this._cachedProviderAppDetails = {}, this.apiUrl = e, this.fallbackApiUrl = this.apiUrl, this.useServerCookies = e !== V && e.startsWith(\"https://privy.\"), this.timeout = r, this.appId = t, this.appClientId = a, this.clientAnalyticsId = function (e, t) {\n      if (!Object.prototype.hasOwnProperty.call(e, t)) throw TypeError(\"attempted to use private field on non-instance\");\n      return e;\n    }(this, Ua)[Ua](), Wa || (Wa = new Ca()), this.session = Wa, this.api = this.generateApi(), this.session.client = this;\n  }\n}\nfunction ba() {\n  if (\"undefined\" == typeof window) return null;\n  try {\n    let e = Z.get(K);\n    if (\"string\" == typeof e && e.length > 0) return e;\n  } catch (e) {}\n  let e = v();\n  try {\n    return Z.put(K, e), e;\n  } catch (t) {\n    return e;\n  }\n}\nclass Sa {\n  async handleSignMessage(e) {\n    if (!e.params || \"string\" != typeof e.params.message) throw Error(\"Message must be provided as a string for Solana signMessage RPC\");\n    return await Ya({\n      message: e.params.message,\n      options: {\n        address: this.address,\n        uiOptions: {}\n      }\n    });\n  }\n  async request(e) {\n    if (console.debug(\"EmbeddedSolanaProvider.request() called with args\", e), !(await Va())) throw Error(\"User must be authenticated to use embedded Solana wallet\");\n    if (!(await $a())) throw new Oe(\"Unable to connect to Solana embedded wallet\");\n    if (\"signMessage\" === e.method) return await this.handleSignMessage(e);\n    throw Error(\"Embedded Solana provider does not yet support this RPC method.\");\n  }\n  constructor(e, t) {\n    this.walletProxy = e, this.address = t;\n  }\n}\nlet Ra, Da, Ma, Pa, La, Fa, xa, ja;\nfunction Ba() {\n  return Ra ? Ra.getCustomerAccessToken() : Promise.resolve(Z.get(z) || null);\n}\nasync function Va() {\n  return Ra ? Ra.getAccessToken() : Promise.resolve(Z.get(G) || Z.get(z) || null);\n}\nconst Ha = (e, t) => Da(e, t),\n  Ka = (e, t) => Ma(e, t),\n  za = (e, t) => Pa(e, t),\n  Ga = (e, t) => La(e, t),\n  qa = () => Fa(),\n  $a = () => xa(),\n  Ya = ({\n    message: e,\n    address: t\n  }) => ja({\n    message: e,\n    options: {\n      address: t,\n      uiOptions: {}\n    }\n  });\nconst Xa = ({\n  config: t,\n  ...a\n}) => {\n  var r;\n  if (\"undefined\" != typeof window && 0 > [\"localhost\", \"127.0.0.1\"].indexOf(window.location.hostname) && \"https:\" !== window.location.protocol) throw new Oe(\"Embedded wallet is only available over HTTPS\");\n  if (\"string\" != typeof (r = a.appId) || 25 !== r.length) throw new Oe(\"Cannot initialize the Privy provider with an invalid Privy app ID\");\n  Ra || (Ra = new Oa({\n    appId: a.appId,\n    appClientId: a.clientId,\n    apiUrl: a.apiUrl\n  }));\n  let n = Object.assign({}, t); /*#__PURE__*/\n  return e(ue, {\n    client: Ra,\n    clientConfig: n,\n    children: /*#__PURE__*/e(ht, {\n      children: /*#__PURE__*/e(Qa, {\n        ...a,\n        client: Ra\n      })\n    })\n  });\n};\nlet Qa = v => {\n  let C = v.client,\n    k = pt(),\n    [x, j] = r(!1),\n    [B, H] = r(!1),\n    [z, G] = r(!1),\n    [re, ie] = r(null),\n    [oe, se] = r([]),\n    [ue, ge] = r([]),\n    [Ee, be] = r([]),\n    [Se, ht] = r(!1),\n    [Rt, Dt] = r(null),\n    [Mt, Pt] = r(!1),\n    [Lt, Ft] = r({\n      status: \"disconnected\",\n      connectedWallet: null,\n      connectError: null,\n      connector: null,\n      connectRetry: At\n    }),\n    [xt, jt] = r({\n      status: \"initial\"\n    }),\n    [Bt, Vt] = r({\n      status: \"initial\"\n    }),\n    [Ht, Kt] = r({\n      status: \"initial\"\n    }),\n    [zt, Gt] = r({\n      status: \"initial\"\n    }),\n    [qt, $t] = r({\n      status: \"initial\"\n    }),\n    [Yt, Xt] = r({\n      status: \"initial\"\n    }),\n    [Qt, Jt] = r(null),\n    Zt = he(),\n    ea = pe(),\n    [ta, aa] = r(!0),\n    [ra, na] = r({}),\n    [ia, oa] = r(null),\n    [sa, la] = r(null),\n    [ca, da] = r(!1),\n    [ua, ha] = r(!1),\n    [pa, wa] = r(Zt.customAuth?.enabled ? {\n      status: \"initial\"\n    } : {\n      status: \"not-enabled\"\n    }),\n    ma = n(null),\n    ya = n(null),\n    ga = n(Tt),\n    [fa, Ea] = r(!1);\n  C.onStoreCustomerAccessToken = e => {\n    e && vt(ga, \"accessToken\", \"onAccessTokenGranted\", {\n      accessToken: e\n    });\n  }, C.onDeleteCustomerAccessToken = () => {\n    ie(null), G(!1), vt(ga, \"accessToken\", \"onAccessTokenRemoved\");\n  };\n  let Aa = n(null),\n    _a = n(null),\n    Ta = n(!1),\n    va = ({\n      showWalletUIs: e\n    }) => Ta.current ? Ta.current : void 0 !== e ? !e : !Zt.embeddedWallets.showWalletUIs,\n    Ca = e => {\n      Dt(e), setTimeout(() => {\n        j(!0);\n      }, 15), C.createAnalyticsEvent({\n        eventName: \"modal_open\",\n        payload: {\n          initialScreen: e\n        }\n      });\n    },\n    Ia = e => {\n      (\"off\" !== Zt.embeddedWallets.ethereum.createOnLogin || \"off\" !== Zt.embeddedWallets.solana.createOnLogin) && aa(!0), Ca(e);\n    };\n  i(() => {\n    let e = [...W(re), N(re)].filter(e => !!e);\n    Qt && be(e.map(e => ({\n      type: \"solana\",\n      imported: e.imported,\n      address: e.address,\n      connectedAt: Date.now(),\n      walletClientType: \"privy\",\n      connectorType: \"embedded\",\n      walletIndex: e.walletIndex ?? void 0,\n      meta: {\n        name: \"Privy Wallet\",\n        icon: void 0,\n        id: \"io.privy.solana.wallet\"\n      },\n      linked: !0,\n      fund() {\n        throw new Oe(\"'fund' is deprecated for Solana wallets - use 'fundWallet' instead\");\n      },\n      unlink: () => {\n        throw new Oe(\"Cannot unlink an embedded Solana wallet\");\n      },\n      getProvider: async () => new Sa(Qt, e.address),\n      async signMessage(t) {\n        let a = await Va();\n        if (!a || !Qt) throw new Oe(\"Must have valid access token and Privy wallet to send transaction\", Re.MUST_BE_AUTHENTICATED);\n        let r = e.imported ? N(re) : U(re);\n        if (!r) throw new Oe(\"Attempting to sign a transaction without a root wallet\");\n        let {\n          entropyId: n,\n          entropyIdVerifier: i\n        } = I(r);\n        if (!(await sr.recoverPrimaryWallet().catch(() => !1))) throw new Oe(\"Wallet couldn't be connected\", Re.UNKNOWN_CONNECT_WALLET_ERROR);\n        if (!re) throw new Oe(\"Attempting to sign a transaction with no user initialized\");\n        let {\n          response: o\n        } = await Qt.rpc({\n          accessToken: a,\n          entropyId: n,\n          entropyIdVerifier: i,\n          chainType: \"solana\",\n          hdWalletIndex: e.walletIndex ?? 0,\n          request: {\n            method: \"signMessage\",\n            params: {\n              message: Buffer.from(t).toString(\"base64\")\n            }\n          }\n        });\n        return Buffer.from(o.data.signature, \"base64\");\n      },\n      async sendTransaction(e, t, a) {\n        let {\n          signature: r\n        } = await er({\n          transaction: e,\n          connection: t,\n          transactionOptions: a,\n          wallet: this,\n          signOnly: !1\n        });\n        return r;\n      },\n      async signTransaction(t) {\n        let a = await Va();\n        if (!a || !Qt) throw new Oe(\"Must have valid access token and Privy wallet to send transaction\", Re.MUST_BE_AUTHENTICATED);\n        if (!(await sr.recoverPrimaryWallet().catch(() => !1))) throw new Oe(\"Wallet couldn't be connected\", Re.UNKNOWN_CONNECT_WALLET_ERROR);\n        let r = e.imported ? e : U(re);\n        if (!r) throw new Oe(\"Attempting to sign a transaction without a root wallet\");\n        let {\n          entropyId: n,\n          entropyIdVerifier: i\n        } = I(r);\n        return await Le({\n          tx: t,\n          accessToken: a,\n          walletProxy: Qt,\n          entropyId: n,\n          entropyIdVerifier: i,\n          transactingWalletAddress: e.address,\n          transactingWalletIndex: e.walletIndex ?? 0\n        }), t;\n      },\n      loginOrLink: async () => {\n        throw new Oe(\"Cannot login or link with an embedded Solana wallet\");\n      },\n      disconnect: () => {},\n      isConnected: async () => !0\n    })));\n  }, [Qt, re]), i(() => {\n    if (!re) return void C.connectors?.removeEmbeddedWalletConnectors();\n    let e = O(re),\n      t = b(re),\n      a = S(re);\n    e && t.length || C.connectors?.removeEmbeddedWalletConnectors(), a || C.connectors?.removeImportedWalletConnector(), C.connectors ? Qt ? (e && C.connectors.addEmbeddedWalletConnectors({\n      walletProxy: Qt,\n      rootWallet: e,\n      embeddedWallets: t,\n      defaultChain: Zt.defaultChain,\n      appId: v.appId\n    }), a && C.connectors.addImportedWalletConnector(Qt, a.address, Zt.defaultChain, v.appId)) : console.debug(\"Failed to add embedded wallet connector: Wallet proxy not initialized\") : console.debug(\"Failed to add embedded wallet connector: Client connectors not initialized\");\n  }, [Qt, re]), i(() => {\n    Qt && sa?.(Qt);\n  }, [Qt]);\n  let ka = n();\n  i(() => {\n    (async () => {\n      if (!Zt.customAuth?.enabled) return void wa({\n        status: \"not-enabled\"\n      });\n      aa(!0);\n      let {\n        getCustomAccessToken: e,\n        isLoading: t\n      } = Zt.customAuth;\n      if (B && !t && \"loading\" !== pa.status) {\n        wa({\n          status: \"loading\"\n        });\n        try {\n          let t = await e();\n          if (t === ka.current) return void wa({\n            status: \"done\"\n          });\n          if (!t && z) return ka.current = t, await or.logout(), wa({\n            status: \"done\"\n          }), void vt(ga, \"customAuth\", \"onUnauthenticated\");\n          if (!t) return ka.current = t, void wa({\n            status: \"done\"\n          });\n          C.startAuthFlow(new d(t));\n          let {\n            user: a,\n            isNewUser: r\n          } = await C.authenticate();\n          if (!a) return await or.logout(), wa({\n            status: \"error\",\n            error: new Oe(\"Failed to sync with custom auth provider\")\n          }), void vt(ga, \"customAuth\", \"onUnauthenticated\");\n          void 0 !== r && vt(ga, \"login\", \"onComplete\", {\n            user: a,\n            isNewUser: r,\n            wasAlreadyAuthenticated: !1,\n            loginMethod: \"custom\",\n            loginAccount: null\n          }), ka.current = t, vt(ga, \"customAuth\", \"onAuthenticated\", {\n            user: a\n          }), wa({\n            status: \"done\"\n          }), ie(a || null), ht(r || !1), G(!0), ha(!0);\n        } catch (e) {\n          if (console.warn(e), await or.logout(), vt(ga, \"customAuth\", \"onUnauthenticated\"), \"User already exists with provided custom JWT account.\" === e.message) return void wa({\n            status: \"initial\"\n          });\n          vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR), wa({\n            status: \"error\",\n            error: e\n          });\n        }\n      }\n    })();\n  }, [\"initial\" === pa.status, Zt.customAuth?.enabled, Zt.customAuth?.getCustomAccessToken, Zt.customAuth?.isLoading, B, z]), i(() => {\n    ua && Qt && re && (async () => {\n      let e = lt(re, Zt.embeddedWallets.ethereum.createOnLogin),\n        t = ct(re, Zt.embeddedWallets.solana.createOnLogin),\n        a = await Va();\n      if (a) {\n        if (e && t) {\n          let e = await $a(re, $);\n          return await Qt.createSolana({\n            accessToken: a,\n            ethereumAddress: e?.address\n          }), void ha(!1);\n        }\n        if (t) return await Qt.createSolana({\n          accessToken: a,\n          ethereumAddress: O(re)?.address\n        }), await sr.refreshSessionAndUser(), void ha(!1);\n        if (e) return await $a(re, $), void ha(!1);\n      }\n    })().catch(console.error);\n  }, [ua && Qt && re]), i(() => {\n    if (Zt.externalWallets.solana.connectors) return Zt.externalWallets.solana.connectors.onMount(), () => Zt.externalWallets.solana.connectors?.onUnmount();\n  }, [Zt.externalWallets.solana.connectors]), i(() => {\n    !B && ea && async function () {\n      let e,\n        t = Wa(),\n        r = Na();\n      (() => {\n        let e = new URLSearchParams(window.location.search).get(\"privy_token\");\n        if (!e) return;\n        Z.put(J, e);\n        let t = new URL(window.location.href);\n        t.searchParams.delete(\"privy_token\"), window.history.pushState({}, \"\", t);\n      })();\n      let n = a();\n      C.initializeConnectorManager({\n        walletConnectCloudProjectId: Zt.walletConnectCloudProjectId,\n        rpcConfig: Zt.rpcConfig,\n        chains: Zt.chains,\n        defaultChain: Zt.defaultChain,\n        store: n,\n        walletList: Zt.appearance.walletList,\n        shouldEnforceDefaultChainOnConnect: Zt.shouldEnforceDefaultChainOnConnect,\n        externalWalletConfig: Zt.externalWallets,\n        appName: Zt.name ?? \"Privy\",\n        walletChainType: Zt.appearance.walletChainType\n      }), C.connectors?.on(\"connectorInitialized\", () => {\n        e && clearTimeout(e);\n        let t = C.connectors.walletConnectors.length,\n          a = C.connectors.walletConnectors.reduce((e, t) => e + (t.initialized ? 1 : 0), 0);\n        a === t ? Ea(!0) : e = setTimeout(() => {\n          console.debug({\n            message: \"Unable to initialize all expected connectors before timeout\",\n            initialized: a,\n            expected: t\n          }), Ea(!0);\n        }, 1500);\n      }), C.connectors?.initialize().then(() => {\n        Ha();\n      });\n      let i = await C.getAuthenticatedUser(),\n        o = !!i;\n      Zt.legal.requireUsersAcceptTerms && i && !i.hasAcceptedTerms ? (await C.logout(), sr.setReadyToTrue(!0), vt(ga, \"logout\", \"onSuccess\")) : (Zt.customAuth?.enabled || (G(!!i), i && vt(ga, \"login\", \"onComplete\", {\n        user: i,\n        isNewUser: !1,\n        wasAlreadyAuthenticated: !0,\n        loginMethod: null,\n        loginAccount: null\n      }), ie(i)), t ? _a.current = o ? \"link\" : \"login\" : r && !o ? (_a.current = \"login\", na({\n        telegramAuthModalData: {\n          seamlessAuth: !0\n        }\n      }), Ia(yt.TELEGRAM_AUTH_SCREEN)) : sr.setReadyToTrue(!!i));\n    }();\n  }, [C, ia, B, ea]), i(() => {\n    if (B) {\n      if (!re || !re.linkedAccounts.find(e => \"wallet\" === e.type && \"privy\" === e.walletClientType)) return void da(!0);\n      da([...oe, ...Ee].some(e => \"privy\" === e.walletClientType));\n    }\n  }, [B, re, oe, Ee]), i(() => {\n    C.connectors?.setWalletList(Zt.appearance.walletList);\n  }, [Zt.appearance.walletList.join()]);\n  let Wa = () => {\n      let e = bt();\n      return e.inProgress && e.popupFlow ? window.opener.location.origin !== window.location.origin ? void window.opener.postMessage({\n        type: \"PRIVY_OAUTH_ERROR\",\n        error: \"Origins between parent and child windows do not match.\"\n      }) : \"error\" === e.authorizationCode ? void window.opener.postMessage({\n        type: \"PRIVY_OAUTH_ERROR\",\n        error: \"Something went wrong. Try again.\"\n      }) : void window.opener.postMessage({\n        type: \"PRIVY_OAUTH_RESPONSE\",\n        stateCode: e.stateCode,\n        authorizationCode: e.authorizationCode\n      }) : (e.inProgress && Be(e.provider) && !e.popupFlow && (new BroadcastChannel(Ve).postMessage({\n        type: \"PRIVY_OAUTH_RESPONSE\",\n        stateCode: e.stateCode,\n        authorizationCode: e.authorizationCode\n      }), window.close()), !!e.inProgress && !!e.withPrivyUi && (C.startAuthFlow(new St(e)), Ia(yt.AWAITING_OAUTH_SCREEN), !0));\n    },\n    Na = () => {\n      let e = T();\n      if (!e || !Zt.loginMethods.telegram || !Zt.loginConfig.telegramAuthConfiguration?.seamlessAuthEnabled) return;\n      let t = new A();\n      return C.startAuthFlow(t), \"login-url\" === e.flowType && (t.meta.telegramWebAppData = void 0, t.meta.telegramAuthResult = e.authData), \"web-app\" === e.flowType && (t.meta.telegramAuthResult = void 0, t.meta.telegramWebAppData = e.authData), !0;\n    },\n    Ua = async (e, t, a, r) => {\n      if (\"solana_adapter\" !== e) Oa((await C.connectors?.createEthereumWalletConnector({\n        connectorType: e,\n        walletClientType: t\n      })) || null, t, a, r);else {\n        let n = C.connectors?.findSolanaWalletConnector(e, t);\n        if (!n) return;\n        Oa(n, t, a, r);\n      }\n    };\n  async function Oa(e, t, a, r) {\n    if (!e) return Ft({\n      status: \"disconnected\",\n      connectedWallet: null,\n      connectError: new Me(\"Unable to connect to wallet.\"),\n      connector: null,\n      connectRetry: At\n    }), r?.(null, a);\n    Ft({\n      status: \"disconnected\",\n      connectedWallet: null,\n      connectError: null,\n      connector: e,\n      connectRetry: At\n    }), e instanceof _e && t && (await e.resetConnection(t)), Ft({\n      connector: e,\n      status: \"connecting\",\n      connectedWallet: null,\n      connectError: null,\n      connectRetry: () => Oa(e, t, a, r)\n    });\n    try {\n      let t = await e.connect({\n        showPrompt: !0\n      });\n      if ((!t || ye(t)) && Zt.shouldEnforceDefaultChainOnConnect && !Zt.chains.find(e => e.id === Number(t?.chainId.replace(\"eip155:\", \"\"))) && (\"wallet_connect_v2\" !== t?.connectorType || \"metamask\" !== t?.walletClientType)) {\n        Ft(t => ({\n          ...t,\n          connector: e,\n          status: \"switching_to_supported_chain\",\n          connectedWallet: null,\n          connectError: null,\n          connectRetry: At\n        }));\n        try {\n          await t?.switchChain(Zt.defaultChain.id), t && (t.chainId = ne(ae(Zt.defaultChain.id)));\n        } catch {\n          console.warn(`Unable to switch to default chain: ${Zt.defaultChain.id}`);\n        }\n      }\n      return Ft(e => ({\n        ...e,\n        status: \"connected\",\n        connectedWallet: t,\n        connectError: null,\n        connectRetry: At\n      })), t && vt(ga, \"connectWallet\", \"onSuccess\", {\n        wallet: t\n      }), r?.(t, a);\n    } catch (e) {\n      return e instanceof Pe ? (console.warn(e.cause ? e.cause : e.message), vt(ga, \"connectWallet\", \"onError\", e.privyErrorCode || Re.GENERIC_CONNECT_WALLET_ERROR)) : (console.warn(e), vt(ga, \"connectWallet\", \"onError\", Re.UNKNOWN_CONNECT_WALLET_ERROR)), Ft(t => ({\n        ...t,\n        status: \"disconnected\",\n        connectedWallet: null,\n        connectError: e\n      })), r?.(null, a);\n    }\n  }\n  let ba = async (e, t, a) => {\n      if (null === e || !ye(e)) return;\n      let r = new y(e, C, t, a);\n      C.startAuthFlow(r);\n    },\n    Ba = async (e, t, a) => {\n      if (null === e || !Ae(e)) return;\n      let r = new g(e, C, t, a);\n      C.startAuthFlow(r);\n    },\n    Ha = () => {\n      let e = new URLSearchParams(window.location.search),\n        t = e.get(\"privy_connector\"),\n        a = e.get(\"privy_wallet_client\"),\n        r = \"true\" === e.get(\"privy_connect_only\");\n      if (!t || !a) return;\n      let n = fe({\n        connectorType: t,\n        walletClientType: a\n      });\n      if (!n || !n.isInstalled) return Ia(yt.LOGIN_FAILED_SCREEN);\n      if (!C.connectors) throw new Oe(\"Connector not initialized\");\n      Ca(r ? yt.AWAITING_CONNECT_ONLY_CONNECTION : yt.AWAITING_CONNECTION);\n      let i = new URL(window.location.href);\n      i.searchParams.delete(\"privy_connector\"), i.searchParams.delete(\"privy_wallet_client\"), i.searchParams.delete(\"privy_connect_only\"), window.history.pushState({}, \"\", i), Ua(t, a, void 0, r ? void 0 : \"solana_adapter\" === t ? Ba : ba);\n    };\n  i(() => {\n    B && z && null === re && C.getAuthenticatedUser().then(ie);\n  }, [B, z, re, C]);\n  let Ka = e => {\n      if (!z) throw vt(ga, \"linkAccount\", \"onError\", Re.MUST_BE_AUTHENTICATED, {\n        linkMethod: e\n      }), new Oe(\"User must be authenticated before linking an account.\");\n    },\n    za = e => {\n      if (!z || !re) return !1;\n      if (\"privy\" === e.walletClientType) return !0;\n      for (let t of re.linkedAccounts) if (\"wallet\" === t.type && t.address === e.address && \"privy\" !== t.walletClientType) return !0;\n      return !1;\n    },\n    Ga = async e => {\n      let t;\n      if (!C.connectors) throw new Oe(\"Connector not initialized\");\n      t = \"ethereum\" === e.type ? C.connectors.findWalletConnector(e.connectorType, e.walletClientType) || null : C.connectors.findSolanaWalletConnector(e.connectorType, e.walletClientType) || null, Ft(a => ({\n        ...a,\n        connector: t,\n        status: \"connected\",\n        connectedWallet: e,\n        connectError: null,\n        connectRetry: At\n      })), Zt.captchaEnabled && !z ? (na({\n        captchaModalData: {\n          callback: t => ye(e) ? ba(e, t) : Ba(e, t),\n          userIntentRequired: !1,\n          onSuccessNavigateTo: yt.AWAITING_CONNECTION,\n          onErrorNavigateTo: yt.ERROR_SCREEN\n        }\n      }), Ia(yt.CAPTCHA_SCREEN)) : (ye(e) ? await ba(e) : await Ba(e), Ia(yt.AWAITING_CONNECTION));\n    },\n    qa = () => {\n      se(e => {\n        let t = C.connectors?.wallets.filter(ye).map(e => ({\n          ...e,\n          linked: za(e),\n          loginOrLink: async () => {\n            if (!(await e.isConnected())) throw new Oe(\"Wallet is not connected\");\n            if (\"embedded\" === e.connectorType && \"privy\" === e.walletClientType) throw new Oe(\"Cannot link or login with embedded wallet\");\n            Ga(e);\n          },\n          fund: async t => {\n            await sr.fundWallet(e.address, t);\n          },\n          unlink: async () => {\n            if (!z) throw new Oe(\"User is not authenticated.\");\n            if (\"embedded\" === e.connectorType && \"privy\" === e.walletClientType) throw new Oe(\"Cannot unlink an embedded wallet\");\n            ie(await C.unlinkEthereumWallet(e.address));\n          }\n        })) || [];\n        return we(e, t) ? e : t;\n      }), ge(e => {\n        let t = (C.connectors?.wallets ?? []).filter(Ae).map(e => ({\n          ...e,\n          linked: za(e),\n          loginOrLink: async () => {\n            if (!(await e.isConnected())) throw new Oe(\"Wallet is not connected\");\n            if (\"embedded\" === e.connectorType && \"privy\" === e.walletClientType) throw new Oe(\"Cannot link or login with embedded wallet\");\n            Ga(e);\n          },\n          fund: async () => {\n            throw new Oe(\"'fund' is deprecated for Solana wallets - use 'fundWallet' instead\");\n          },\n          unlink: async () => {\n            if (!z) throw new Oe(\"User is not authenticated.\");\n            if (\"embedded\" === e.connectorType && \"privy\" === e.walletClientType) throw new Oe(\"Cannot unlink an embedded wallet\");\n            ie(await C.unlinkSolanaWallet(e.address));\n          }\n        }));\n        return we(e, t) ? e : t;\n      });\n    };\n  i(() => {\n    qa();\n  }, [re?.linkedAccounts, z, B]), i(() => {\n    if (B) {\n      if (!C.connectors) throw new Oe(\"Connector not initialized\");\n      qa(), C.connectors.on(\"walletsUpdated\", qa);\n    }\n  }, [B]), i(() => {\n    [...(Zt.loginMethodsAndOrder?.primary ?? []), ...(Zt.loginMethodsAndOrder?.overflow ?? [])].filter(e => e.startsWith(\"privy:\")).forEach(e => C.getCrossAppProviderDetails(e.replace(\"privy:\", \"\")));\n  }, [!!C]);\n  let $a = async (e, t, a) => {\n      let r = O(e),\n        n = R(e);\n      if (a && \"walletIndex\" in a && \"number\" == typeof a.walletIndex) return Xa(e, t, a.walletIndex, r, n);\n      let i = a && \"createAdditional\" in a && a.createAdditional;\n      if (r && !i) throw vt(ga, \"createWallet\", \"onError\", Re.EMBEDDED_WALLET_ALREADY_EXISTS), Error(\"User already has an embedded wallet.\");\n      let [o, s] = await Promise.all([sr.initializeWalletProxy(t), Va()]);\n      if (!o && Zt.customAuth?.enabled) throw vt(ga, \"createWallet\", \"onError\", Re.UNKNOWN_EMBEDDED_WALLET_ERROR), Error(\"Failed to connect to wallet proxy\");\n      if (!o || !s || Zt.embeddedWallets?.requireUserOwnedRecoveryOnCreate) return Ya();\n      if (!r) return n && (await sr.recoverPrimaryWallet()), await o.create({\n        accessToken: s,\n        solanaAddress: n?.address\n      }), Ja(0, \"ethereum\");\n      {\n        let t = (D(e)?.walletIndex ?? 0) + 1,\n          {\n            entropyId: a,\n            entropyIdVerifier: r\n          } = I(U(e));\n        return await sr.recoverPrimaryWallet(), await o.addWallet({\n          accessToken: s,\n          entropyId: a,\n          entropyIdVerifier: r,\n          chainType: \"ethereum\",\n          hdWalletIndex: t\n        }), Ja(t, \"ethereum\");\n      }\n    },\n    Ya = async () => new Promise((e, t) => {\n      aa(!0), na({\n        createWallet: {\n          onSuccess: t => {\n            vt(ga, \"createWallet\", \"onSuccess\", {\n              wallet: t\n            }), e(t);\n          },\n          onFailure: e => {\n            vt(ga, \"createWallet\", \"onError\", Re.UNKNOWN_EMBEDDED_WALLET_ERROR), t(e);\n          },\n          callAuthOnSuccessOnClose: !1\n        }\n      }), Ca(yt.EMBEDDED_WALLET_ON_ACCOUNT_CREATE_SCREEN);\n    }),\n    Xa = async (e, t, a, r, n) => {\n      if (a < 0) throw vt(ga, \"createWallet\", \"onError\", Re.EMBEDDED_WALLET_CREATE_ERROR), Error(`A negative walletIndex (${a}) is invalid.`);\n      let [i, o] = await Promise.all([sr.initializeWalletProxy(t), Va()]);\n      if (!i && Zt.customAuth?.enabled) throw vt(ga, \"createWallet\", \"onError\", Re.UNKNOWN_EMBEDDED_WALLET_ERROR), Error(\"Failed to connect to wallet proxy\");\n      if (!i || !o || Zt.embeddedWallets?.requireUserOwnedRecoveryOnCreate) {\n        if (0 == a) return Ya();\n        throw vt(ga, \"createWallet\", \"onError\", Re.UNKNOWN_EMBEDDED_WALLET_ERROR), Error(\"Create wallet UI can only be displayed when walletIndex is 0.\");\n      }\n      if (0 == a) {\n        if (r) return r;\n        await i.create({\n          accessToken: o,\n          solanaAddress: n?.address\n        });\n      } else {\n        if (!r) throw vt(ga, \"createWallet\", \"onError\", Re.EMBEDDED_WALLET_CREATE_ERROR), Error(\"A user must have a wallet at HD index 0 before creating a wallet at greater HD indices.\");\n        let t = b(e).find(e => e.walletIndex === a);\n        if (t) return t;\n        let {\n          entropyId: n,\n          entropyIdVerifier: s\n        } = I(U(e));\n        await sr.recoverPrimaryWallet(), await i.addWallet({\n          accessToken: o,\n          entropyId: n,\n          entropyIdVerifier: s,\n          chainType: \"ethereum\",\n          hdWalletIndex: a\n        });\n      }\n      return Ja(a, \"ethereum\");\n    },\n    Qa = async ({\n      user: e,\n      wp: t,\n      accessToken: a,\n      walletIndex: r,\n      ethereumWallet: n\n    }) => {\n      let i = W(e).find(e => e.walletIndex === r);\n      if (i) return i;\n      if (0 === r) n && (await sr.recoverPrimaryWallet()), await t.createSolana({\n        accessToken: a,\n        ethereumAddress: n?.address\n      });else {\n        let n = U(e);\n        if (!n) throw vt(ga, \"createWallet\", \"onError\", Re.EMBEDDED_WALLET_CREATE_ERROR), Error(\"User must have a wallet at HD index 0 before creating a wallet at greater HD indices.\");\n        let {\n          entropyId: i,\n          entropyIdVerifier: o\n        } = I(n);\n        await sr.recoverPrimaryWallet(), await t.addWallet({\n          accessToken: a,\n          entropyId: i,\n          entropyIdVerifier: o,\n          chainType: \"solana\",\n          hdWalletIndex: r\n        });\n      }\n      return Ja(r, \"solana\");\n    },\n    Ja = async (e, t) => {\n      let a = await sr.refreshSessionAndUser(),\n        r = (\"ethereum\" === t ? b(a) : W(a)).find(t => t.walletIndex === e);\n      if (!r) throw vt(ga, \"createWallet\", \"onError\", Re.UNKNOWN_EMBEDDED_WALLET_ERROR), Error(\"Failed to create wallet\");\n      return vt(ga, \"createWallet\", \"onSuccess\", {\n        wallet: r\n      }), r;\n    },\n    Za = ({\n      transaction: e,\n      uiOptions: t,\n      fundWalletConfig: a,\n      address: r,\n      signOnly: n\n    }) => new Promise(async (i, o) => {\n      let {\n          requesterAppId: s\n        } = t || {},\n        l = n ? \"signTransaction\" : \"sendTransaction\";\n      if (!z || !re) return vt(ga, l, \"onError\", Re.MUST_BE_AUTHENTICATED), void o(Error(\"User must be authenticated before signing with a Privy wallet\"));\n      let d = r ?? O(re)?.address;\n      if (!d) throw new Oe(\"User must have an embedded wallet to send a transaction.\");\n      let {\n        signingWallet: u,\n        rootWallet: h\n      } = P(re, d);\n      if (!h || !u) return vt(ga, l, \"onError\", Re.EMBEDDED_WALLET_NOT_FOUND), void o(Error(\"Must have a Privy wallet before signing\"));\n      aa(!0);\n      let p = lr.wallets.find(e => \"privy\" === e.walletClientType && c(e.address) === c(u.address)),\n        w = await p?.getEthereumProvider();\n      if (!p || !w) throw new Oe(`Cannot sendTransaction before embedded wallet ${u.address} is connected`);\n      let m = e.chainId ? Number(e.chainId) : xe(p.chainId);\n      (e => {\n        if (!Zt.chains.map(e => e.id).includes(e)) throw new Me(`Chain ID ${e} is not supported. It must be added to the config.supportedChains property of the PrivyProvider.`, Re.UNSUPPORTED_CHAIN_ID);\n      })(m);\n      let y = {\n          ...e,\n          from: e.from ?? u.address,\n          chainId: m\n        },\n        g = await Va();\n      if (!g || !Qt) return vt(ga, l, \"onError\", Re.EMBEDDED_WALLET_NOT_FOUND), void o(Error(\"Must have valid access token and Privy wallet to send transaction\"));\n      let f = Et(y.chainId, Zt.chains, Zt.rpcConfig, {\n        appId: v.appId\n      });\n      if (va({\n        showWalletUIs: t?.showWalletUIs\n      })) (async () => {\n        try {\n          if (!(await sr.recoverPrimaryWallet())) return vt(ga, l, \"onError\", Re.UNKNOWN_CONNECT_WALLET_ERROR), void o(Error(\"Unable to connect to wallet\"));\n          let e = await dt(y, f, y.from),\n            {\n              entropyId: t,\n              entropyIdVerifier: a\n            } = I(h),\n            r = n ? await Ne({\n              accessToken: g,\n              entropyId: t,\n              entropyIdVerifier: a,\n              transactingWallet: u,\n              walletProxy: Qt,\n              transactionRequest: y,\n              requesterAppId: s\n            }) : await Ue({\n              accessToken: g,\n              entropyId: t,\n              entropyIdVerifier: a,\n              transactingWallet: u,\n              walletProxy: Qt,\n              transactionRequest: e,\n              publicClient: f,\n              requesterAppId: s\n            });\n          n ? vt(ga, \"signTransaction\", \"onSuccess\", {\n            signature: r\n          }) : vt(ga, \"sendTransaction\", \"onSuccess\", {\n            hash: r\n          }), i({\n            hash: r\n          });\n        } catch (e) {\n          vt(ga, l, \"onError\", Re.TRANSACTION_FAILURE), o(e);\n        }\n      })();else {\n        let {\n            entropyId: e,\n            entropyIdVerifier: r\n          } = I(h),\n          c = {\n            entropyId: e,\n            entropyIdVerifier: r,\n            onCompleteNavigateTo: yt.EMBEDDED_WALLET_SEND_TRANSACTION_SCREEN,\n            onFailure: e => {\n              vt(ga, l, \"onError\", Re.UNKNOWN_CONNECT_WALLET_ERROR), o(e);\n            }\n          },\n          d = et(Zt) ? Ot({\n            address: u.address,\n            appConfig: Zt,\n            fundWalletConfig: a,\n            methodScreen: yt.FUNDING_METHOD_SELECTION_SCREEN,\n            chainIdOverride: y.chainId,\n            comingFromSendTransactionScreen: !0\n          }) : void 0;\n        na({\n          connectWallet: c,\n          sendTransaction: {\n            transactionRequest: y,\n            transactingWallet: u,\n            entropyId: e,\n            entropyIdVerifier: r,\n            signOnly: n,\n            onConfirm: n ? async () => await Ne({\n              accessToken: g,\n              entropyId: e,\n              entropyIdVerifier: r,\n              transactingWallet: u,\n              walletProxy: Qt,\n              transactionRequest: y,\n              requesterAppId: s\n            }) : void 0,\n            onSuccess: e => {\n              n ? vt(ga, \"signTransaction\", \"onSuccess\", {\n                signature: e.hash\n              }) : vt(ga, \"sendTransaction\", \"onSuccess\", {\n                hash: e.hash\n              }), i(e);\n            },\n            onFailure: e => {\n              vt(ga, l, \"onError\", Re.TRANSACTION_FAILURE), o(e);\n            },\n            uiOptions: t || {},\n            fundWalletConfig: a,\n            requesterAppId: s\n          },\n          funding: d\n        }), Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN);\n      }\n    }),\n    er = ({\n      transaction: e,\n      connection: t,\n      transactionOptions: a,\n      fundWalletConfig: r,\n      uiOptions: n,\n      wallet: i,\n      signOnly: o\n    }) => new Promise(async (s, l) => {\n      let {\n          requesterAppId: c\n        } = n || {},\n        d = o ? \"signSolanaTransaction\" : \"sendSolanaTransaction\";\n      if (!z || !re) return vt(ga, d, \"onError\", Re.MUST_BE_AUTHENTICATED), void l(new Oe(\"User must be authenticated before signing with a Privy wallet\", Re.MUST_BE_AUTHENTICATED));\n      let u = i ? re.linkedAccounts.find(e => \"wallet\" === e.type && e.address === i.address) : R(re);\n      if (!u) return vt(ga, d, \"onError\", Re.EMBEDDED_WALLET_NOT_FOUND), void l(new Oe(\"Must have a Privy wallet before signing\", Re.EMBEDDED_WALLET_NOT_FOUND));\n      aa(!0);\n      let {\n        rootWallet: h\n      } = M(re, u.address);\n      if (!(await sr.recoverPrimaryWallet().catch(() => !1)) || !h) throw vt(ga, d, \"onError\", Re.EMBEDDED_WALLET_NOT_FOUND), new Oe(`Cannot sendSolanaTransaction before embedded wallet ${u.address} is connected`, Re.EMBEDDED_WALLET_NOT_FOUND);\n      if (va({\n        showWalletUIs: n?.showWalletUIs\n      })) (async () => {\n        let r = await Va();\n        if (!r || !Qt) return vt(ga, d, \"onError\", Re.EMBEDDED_WALLET_NOT_FOUND), void l(new Oe(\"Must have valid access token and Privy wallet to send transaction\", Re.EMBEDDED_WALLET_NOT_FOUND));\n        try {\n          let i;\n          if (!(await sr.recoverPrimaryWallet())) return vt(ga, d, \"onError\", Re.UNKNOWN_CONNECT_WALLET_ERROR), void l(new Oe(\"Unable to connect to wallet\", Re.UNKNOWN_CONNECT_WALLET_ERROR));\n          if (va({\n            showWalletUIs: n?.showWalletUIs\n          })) try {\n            if (!(await it(e, t))) return vt(ga, d, \"onError\", Re.INSUFFICIENT_BALANCE), void l(new Oe(\"Solana wallet has insufficient funds for this transaction.\", Re.INSUFFICIENT_BALANCE));\n          } catch (e) {\n            return console.error(e), vt(ga, d, \"onError\", Re.TRANSACTION_FAILURE), void l(new Oe(e instanceof Error ? e.message : \"Transaction failed.\", Re.TRANSACTION_FAILURE));\n          }\n          let {\n            entropyId: c,\n            entropyIdVerifier: h\n          } = F(re);\n          if (o) await Le({\n            accessToken: r,\n            tx: e,\n            walletProxy: Qt,\n            entropyId: c,\n            entropyIdVerifier: h,\n            transactingWalletAddress: u.address,\n            transactingWalletIndex: u.walletIndex ?? 0\n          }), i = ot(\"\", e, null), vt(ga, \"signSolanaTransaction\", \"onSuccess\", {\n            signedTransaction: e\n          });else {\n            let {\n              signature: n,\n              receipt: o\n            } = await Fe({\n              accessToken: r,\n              tx: e,\n              connection: t,\n              walletProxy: Qt,\n              transactionOptions: a,\n              entropyId: c,\n              entropyIdVerifier: h,\n              transactingWalletAddress: u.address,\n              transactingWalletIndex: u.walletIndex ?? 0\n            });\n            i = ot(n, e, o), vt(ga, \"sendSolanaTransaction\", \"onSuccess\", {\n              response: i\n            });\n          }\n          s(i);\n        } catch (e) {\n          vt(ga, d, \"onError\", Re.TRANSACTION_FAILURE), l(e);\n        }\n      })();else {\n        let {\n            entropyId: i,\n            entropyIdVerifier: p\n          } = I(h),\n          w = {\n            entropyId: i,\n            entropyIdVerifier: p,\n            onCompleteNavigateTo: yt.EMBEDDED_WALLET_SEND_SOLANA_TRANSACTION_SCREEN,\n            onFailure: e => {\n              vt(ga, d, \"onError\", Re.UNKNOWN_CONNECT_WALLET_ERROR), l(e);\n            }\n          },\n          m = et(Zt) ? Ut({\n            address: u.address,\n            appConfig: Zt,\n            methodScreen: yt.FUNDING_METHOD_SELECTION_SCREEN,\n            fundWalletConfig: r,\n            comingFromSendTransactionScreen: !0\n          }) : void 0;\n        na({\n          connectWallet: w,\n          sendSolanaTransaction: {\n            transactionRequest: e,\n            connection: t,\n            transactionOptions: a,\n            transactingWallet: u,\n            onSuccess: e => {\n              o ? vt(ga, \"signSolanaTransaction\", \"onSuccess\", {\n                signedTransaction: e.signedTransaction\n              }) : vt(ga, \"sendSolanaTransaction\", \"onSuccess\", {\n                response: e\n              }), s(e);\n            },\n            onFailure: e => {\n              vt(ga, d, \"onError\", Re.TRANSACTION_FAILURE), l(e);\n            },\n            uiOptions: n || {},\n            requesterAppId: c,\n            signOnly: o\n          },\n          funding: m\n        }), Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN);\n      }\n    });\n  function tr() {\n    return new Promise(async (e, t) => {\n      let a = await Va();\n      if (!a || !Qt) throw Error(\"Must have valid access token to enroll in MFA\");\n      try {\n        await Qt.verifyMfa({\n          accessToken: a\n        }), e();\n      } catch (e) {\n        t(e);\n      }\n    });\n  }\n  let ar = e => e?.linkedAccounts.filter(e => null !== e.latestVerifiedAt && !(\"wallet\" === e.type && \"privy\" === e.walletClientType)).sort((e, t) => t.latestVerifiedAt.getTime() - e.latestVerifiedAt.getTime())[0],\n    rr = e => {\n      let t = re?.linkedAccounts.filter(t => t.type === e).length ?? 0,\n        {\n          displayName: a,\n          loginMethod: r\n        } = st(e);\n      if (\"passkey\" === e && t >= 5 || \"passkey\" !== e && t >= 1) throw vt(ga, \"linkAccount\", \"onError\", Re.CANNOT_LINK_MORE_OF_TYPE, {\n        linkMethod: r\n      }), new Oe(`User already has an account of type ${a} linked.`);\n    };\n  async function nr({\n    showAutomaticRecovery: e = !1,\n    legacySetWalletPasswordFlow: t = !1\n  }) {\n    Dt(null);\n    let a = t ? \"setWalletPassword\" : \"setWalletRecovery\";\n    if (!z || !re) throw vt(ga, a, \"onError\", Re.MUST_BE_AUTHENTICATED), Error(\"User must be authenticated before adding recovery method to Privy wallet\");\n    let r = U(re);\n    if (!r || !Qt) throw vt(ga, a, \"onError\", Re.EMBEDDED_WALLET_NOT_FOUND), Error(\"Must have a Privy wallet to add a recovery method\");\n    try {\n      await tr();\n    } catch (e) {\n      throw vt(ga, a, \"onError\", Re.MISSING_MFA_CREDENTIALS), e;\n    }\n    return new Promise((n, i) => {\n      aa(!0);\n      let o = {\n          onSuccess: e => {\n            vt(ga, a, \"onSuccess\", {\n              method: \"user-passcode\",\n              wallet: e\n            }), n(e);\n          },\n          onFailure: e => {\n            vt(ga, a, \"onError\", Re.USER_EXITED_SET_PASSWORD_FLOW), i(e);\n          },\n          callAuthOnSuccessOnClose: !1\n        },\n        s = \"user-passcode\" === r.recoveryMethod,\n        l = Qe({\n          walletAction: \"update\",\n          availableRecoveryMethods: Zt.embeddedWallets.userOwnedRecoveryOptions,\n          legacySetWalletPasswordFlow: t,\n          isResettingPassword: s,\n          showAutomaticRecovery: e\n        }),\n        {\n          entropyId: c,\n          entropyIdVerifier: d\n        } = I(r);\n      na({\n        setWalletPassword: o,\n        recoverWallet: {\n          entropyId: c,\n          entropyIdVerifier: d,\n          onFailure: i\n        },\n        createWallet: o,\n        connectWallet: {\n          onCompleteNavigateTo: l,\n          shouldForceMFA: !1,\n          entropyId: c,\n          entropyIdVerifier: d,\n          onFailure: e => {\n            vt(ga, a, \"onError\", Re.UNKNOWN_CONNECT_WALLET_ERROR), i(e);\n          }\n        },\n        recoverySelection: {\n          isInAccountCreateFlow: !1,\n          isResettingPassword: s\n        }\n      }), Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN);\n    });\n  }\n  async function ir({\n    appId: e,\n    action: t\n  }) {\n    let a = await Va();\n    if (\"link\" === t && !a) throw vt(ga, \"linkAccount\", \"onError\", Re.MUST_BE_AUTHENTICATED, {\n      linkMethod: `privy:${e}`\n    }), new Oe(\"User must be authenticated before linking an account.\");\n    if (\"login\" === t && a) throw vt(ga, \"login\", \"onError\", Re.UNKNOWN_AUTH_ERROR), new Oe(\"Attempted to log in, but user is already logged in. Use a `link` helper instead.\");\n    Aa.current = `privy:${e}`, _a.current = t;\n    let r = at();\n    return C.createAnalyticsEvent({\n      eventName: \"cross_app_auth_started\",\n      payload: {\n        providerAppId: e\n      }\n    }), new Promise(async (a, n) => {\n      let {\n        name: i,\n        logoUrl: o\n      } = await ze({\n        api: C.api,\n        providerAppId: e,\n        requesterAppId: Zt.id\n      });\n      na({\n        crossAppAuth: {\n          appId: e,\n          name: i,\n          logoUrl: o,\n          action: t,\n          popup: r,\n          onSuccess: a,\n          onError: n\n        }\n      }), Ia(yt.CROSS_APP_AUTH_SCREEN);\n    });\n  }\n  let or = {\n    ready: B,\n    authenticated: z,\n    user: re,\n    walletConnectors: C.connectors || null,\n    connectWallet: e => {\n      e && \"target\" in e && e && (e = void 0), na({\n        externalConnectWallet: {\n          walletList: e?.walletList && e?.walletList.length > 0 ? e.walletList : void 0,\n          suggestedAddress: e?.suggestedAddress,\n          walletChainType: e?.walletChainType\n        }\n      }), Ca(z ? yt.CONNECT_ONLY_AUTHENTICATED_SCREEN : yt.CONNECT_ONLY_LANDING_SCREEN);\n    },\n    linkWallet: e => {\n      e && \"target\" in e && e && (e = void 0), Ka(\"siwe\"), Aa.current = \"siwe\", _a.current = \"link\", na({\n        ...ra,\n        externalConnectWallet: {\n          ...ra.externalConnectWallet,\n          suggestedAddress: e?.suggestedAddress,\n          walletList: e?.walletList,\n          walletChainType: e?.walletChainType\n        }\n      }), Ca(yt.LINK_WALLET_SCREEN);\n    },\n    startCrossAppAuthFlow: ir,\n    linkEmail: () => {\n      Ka(\"email\"), rr(\"email\"), Aa.current = \"email\", _a.current = \"link\", Ca(yt.LINK_EMAIL_SCREEN);\n    },\n    linkPhone: () => {\n      Ka(\"sms\"), rr(\"phone\"), Aa.current = \"sms\", _a.current = \"link\", Ca(yt.LINK_PHONE_SCREEN);\n    },\n    linkGoogle: async () => {\n      Ka(\"google\"), rr(\"google_oauth\"), _a.current = \"link\", await sr.initLoginWithOAuth(\"google\");\n    },\n    linkTwitter: async () => {\n      Ka(\"twitter\"), rr(\"twitter_oauth\"), _a.current = \"link\", await sr.initLoginWithOAuth(\"twitter\");\n    },\n    linkDiscord: async () => {\n      Ka(\"discord\"), rr(\"discord_oauth\"), _a.current = \"link\", await sr.initLoginWithOAuth(\"discord\");\n    },\n    linkGithub: async () => {\n      Ka(\"github\"), rr(\"github_oauth\"), _a.current = \"link\", await sr.initLoginWithOAuth(\"github\");\n    },\n    linkSpotify: async () => {\n      Ka(\"spotify\"), rr(\"spotify_oauth\"), _a.current = \"link\", await sr.initLoginWithOAuth(\"spotify\");\n    },\n    linkInstagram: async () => {\n      Ka(\"instagram\"), rr(\"instagram_oauth\"), _a.current = \"link\", await sr.initLoginWithOAuth(\"instagram\");\n    },\n    linkTiktok: async () => {\n      Ka(\"tiktok\"), rr(\"tiktok_oauth\"), _a.current = \"link\", await sr.initLoginWithOAuth(\"tiktok\");\n    },\n    linkLinkedIn: async () => {\n      Ka(\"linkedin\"), rr(\"linkedin_oauth\"), _a.current = \"link\", await sr.initLoginWithOAuth(\"linkedin\");\n    },\n    linkApple: async () => {\n      Ka(\"apple\"), rr(\"apple_oauth\"), _a.current = \"link\", await sr.initLoginWithOAuth(\"apple\");\n    },\n    linkPasskey: async () => {\n      Ka(\"passkey\"), rr(\"passkey\"), await sr.initLinkWithPasskey(), Ca(yt.LINK_PASSKEY_SCREEN);\n    },\n    linkTelegram: async e => {\n      if (Ka(\"telegram\"), rr(\"telegram\"), _a.current = \"link\", Aa.current = \"telegram\", e?.launchParams) {\n        if (e.launchParams.initDataRaw) {\n          let t = new A();\n          C.startAuthFlow(t), t.meta.telegramAuthResult = void 0, t.meta.telegramWebAppData = _(e.launchParams.initDataRaw), na({\n            telegramAuthModalData: {\n              seamlessAuth: !0\n            }\n          }), Ia(yt.TELEGRAM_AUTH_SCREEN);\n        } else vt(ga, \"linkAccount\", \"onError\", Re.INVALID_DATA, {\n          linkMethod: \"telegram\"\n        });\n      } else await sr.initLoginWithTelegram();\n      Ca(yt.TELEGRAM_AUTH_SCREEN);\n    },\n    linkFarcaster: async () => {\n      Ka(\"farcaster\"), rr(\"farcaster\"), await sr.initLoginWithFarcaster(), _a.current = \"link\", Aa.current = \"farcaster\", Ca(yt.AWAITING_FARCASTER_CONNECTION);\n    },\n    updateEmail: () => {\n      if (Ka(\"email\"), !re?.email) throw new Oe(\"User does not have an email linked to their account.\");\n      _a.current = \"update\", Aa.current = \"email\", Ca(yt.UPDATE_EMAIL_SCREEN);\n    },\n    updatePhone: () => {\n      if (Ka(\"sms\"), !re?.phone) throw new Oe(\"User does not have a phone number linked to their account.\");\n      _a.current = \"update\", Aa.current = \"sms\", Ca(yt.UPDATE_PHONE_SCREEN);\n    },\n    login: async e => {\n      e && \"target\" in e && e && (e = void 0);\n      let t = \"Attempted to log in, but user is already logged in. Use a `link` helper instead.\";\n      if (!B) {\n        let e = await new Promise(e => {\n          oa(t => e.bind(t));\n        });\n        if (oa(null), e) return void console.warn(t);\n      }\n      !re || re.isGuest ? (_a.current = \"login\", na({\n        login: e\n      }), Ia(yt.LANDING)) : console.warn(t);\n    },\n    connectOrCreateWallet: async () => {\n      B || (await new Promise(e => {\n        oa(() => e);\n      }), oa(null)), z ? console.warn(\"User must be unauthenticated to `connectOrCreateWallet`\") : (_a.current = \"login\", Ia(yt.CONNECT_OR_CREATE));\n    },\n    logout: async () => {\n      if (_a.current = null, Aa.current = null, re && C.clearProviderAcccessTokens(re), Dt(null), await C.logout(), re && Qt) try {\n        await Qt.clearMfa({\n          userId: re.id\n        });\n      } catch (e) {}\n      ie(null), G(!1), vt(ga, \"logout\", \"onSuccess\"), j(!1), Z.del(K), Z.del(q(Zt.id));\n    },\n    getAccessToken: o(() => C.getCustomerAccessToken(), [C]),\n    unlinkWallet: async e => {\n      let t;\n      return ie(t = e.startsWith(\"0x\") ? await C.unlinkEthereumWallet(e) : await C.unlinkSolanaWallet(e)), t;\n    },\n    unlinkEmail: async e => {\n      let t = await C.unlinkEmail(e);\n      return ie(t), t;\n    },\n    unlinkPhone: async e => {\n      let t = await C.unlinkPhone(e);\n      return ie(t), t;\n    },\n    unlinkGoogle: async e => {\n      let t = await C.unlinkOAuth(\"google\", e);\n      return ie(t), t;\n    },\n    unlinkTwitter: async e => {\n      let t = await C.unlinkOAuth(\"twitter\", e);\n      return ie(t), t;\n    },\n    unlinkDiscord: async e => {\n      let t = await C.unlinkOAuth(\"discord\", e);\n      return ie(t), t;\n    },\n    unlinkGithub: async e => {\n      let t = await C.unlinkOAuth(\"github\", e);\n      return ie(t), t;\n    },\n    unlinkSpotify: async e => {\n      let t = await C.unlinkOAuth(\"spotify\", e);\n      return ie(t), t;\n    },\n    unlinkInstagram: async e => {\n      let t = await C.unlinkOAuth(\"instagram\", e);\n      return ie(t), t;\n    },\n    unlinkTiktok: async e => {\n      let t = await C.unlinkOAuth(\"tiktok\", e);\n      return ie(t), t;\n    },\n    unlinkLinkedIn: async e => {\n      let t = await C.unlinkOAuth(\"linkedin\", e);\n      return ie(t), t;\n    },\n    unlinkApple: async e => {\n      let t = await C.unlinkOAuth(\"apple\", e);\n      return ie(t), t;\n    },\n    unlinkFarcaster: async e => {\n      let t = await C.unlinkFarcaster(e);\n      return ie(t), t;\n    },\n    unlinkTelegram: async e => {\n      let t = await C.unlinkTelegram(e);\n      return ie(t), t;\n    },\n    unlinkPasskey: async e => {\n      let t = await Va();\n      if (!t) throw Error(\"Must have valid access token to enroll in MFA\");\n      if (!Qt) throw Error(\"Wallet proxy not initialized.\");\n      let a = Zt.passkeys.shouldUnenrollMfaOnUnlink;\n      await Qt.unlinkPasskeyAccount({\n        credentialId: e,\n        accessToken: t,\n        removeAsMfa: a\n      });\n      let r = await C.getAuthenticatedUser();\n      return ie(r), r;\n    },\n    unlinkCrossAppAccount: async ({\n      subject: e\n    }) => {\n      let t = re?.linkedAccounts.find(t => \"cross_app\" === t.type && t.subject === e)?.providerApp;\n      if (!t) throw new Oe(\"Invalid subject\");\n      C.storeProviderAccessToken(t.id, null);\n      let a = await C.unlinkOAuth(`privy:${t.id}`, e);\n      return ie(a), a;\n    },\n    createWallet: async e => {\n      e && \"target\" in e && e && (e = void 0);\n      let t = await sr.refreshSessionAndUser();\n      if (!t) throw vt(ga, \"createWallet\", \"onError\", Re.MUST_BE_AUTHENTICATED), Error(\"User must be authenticated before creating a Privy wallet\");\n      return $a(t, 15e3, e);\n    },\n    setWalletRecovery: async e => nr({\n      legacySetWalletPasswordFlow: !1,\n      showAutomaticRecovery: e?.showAutomaticRecovery ?? !1\n    }),\n    setWalletPassword: async () => nr({\n      legacySetWalletPasswordFlow: !0,\n      showAutomaticRecovery: !1\n    }),\n    signMessage: (e, t) => new Promise(async (a, r) => {\n      let {\n          requesterAppId: n\n        } = t?.uiOptions || {},\n        i = e.message;\n      if (!z || !re) return vt(ga, \"signMessage\", \"onError\", Re.MUST_BE_AUTHENTICATED), void r(Error(\"User must be authenticated before signing with a Privy wallet\"));\n      let o = t?.address ?? O(re)?.address;\n      if (!o) throw new Oe(\"User must have an embedded wallet to sign a message.\");\n      let {\n        signingWallet: s,\n        rootWallet: l\n      } = P(re, o);\n      if (!s || !l) return vt(ga, \"signMessage\", \"onError\", Re.EMBEDDED_WALLET_NOT_FOUND), void r(Error(\"Must have a Privy wallet before signing\"));\n      if (\"string\" != typeof i || i.length < 1) return vt(ga, \"signMessage\", \"onError\", Re.INVALID_MESSAGE), void r(Error(\"Message must be a non-empty string\"));\n      aa(!0);\n      let c = async () => {\n        if (!z) throw Error(\"User must be authenticated before signing with a Privy wallet\");\n        let e = await Va();\n        if (!Qt || !e || !(await sr.recoverPrimaryWallet())) throw Error(\"Unable to connect to wallet\");\n        C.createAnalyticsEvent({\n          eventName: \"embedded_wallet_sign_message_started\",\n          payload: {\n            walletAddress: s.address,\n            requesterAppId: n\n          }\n        });\n        let {\n            entropyId: t,\n            entropyIdVerifier: a\n          } = I(l),\n          {\n            response: r\n          } = await Qt.rpc({\n            accessToken: e,\n            entropyId: t,\n            entropyIdVerifier: a,\n            chainType: \"ethereum\",\n            hdWalletIndex: s.walletIndex ?? 0,\n            requesterAppId: n,\n            request: {\n              method: \"personal_sign\",\n              params: [i, s.address]\n            }\n          }),\n          o = r.data;\n        return C.createAnalyticsEvent({\n          eventName: \"embedded_wallet_sign_message_completed\",\n          payload: {\n            walletAddress: s.address,\n            requesterAppId: n\n          }\n        }), o;\n      };\n      if (va({\n        showWalletUIs: t?.uiOptions?.showWalletUIs\n      })) try {\n        let e = await c();\n        vt(ga, \"signMessage\", \"onSuccess\", {\n          signature: e\n        }), a({\n          signature: e\n        });\n      } catch (e) {\n        vt(ga, \"signMessage\", \"onError\", Re.UNABLE_TO_SIGN), r(e ?? new me(\"Unable to sign message\"));\n      } else {\n        let e = {\n            method: \"personal_sign\",\n            data: i,\n            confirmAndSign: c,\n            onSuccess: e => {\n              vt(ga, \"signMessage\", \"onSuccess\", {\n                signature: e\n              }), a({\n                signature: e\n              });\n            },\n            onFailure: e => {\n              vt(ga, \"signMessage\", \"onError\", Re.UNABLE_TO_SIGN), r(e);\n            },\n            uiOptions: t?.uiOptions || {}\n          },\n          {\n            entropyId: n,\n            entropyIdVerifier: o\n          } = I(l);\n        na({\n          signMessage: e,\n          connectWallet: {\n            entropyId: n,\n            entropyIdVerifier: o,\n            onCompleteNavigateTo: yt.EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,\n            onFailure: e => {\n              vt(ga, \"signMessage\", \"onError\", Re.UNKNOWN_CONNECT_WALLET_ERROR), r(e);\n            }\n          }\n        }), Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN);\n      }\n    }),\n    signTypedData: (e, t) => new Promise(async (a, r) => {\n      let {\n        requesterAppId: n\n      } = t?.uiOptions || {};\n      if (!z || !re) return vt(ga, \"signTypedData\", \"onError\", Re.MUST_BE_AUTHENTICATED), void r(Error(\"User must be authenticated before signing with a Privy wallet\"));\n      let i = t?.address ?? O(re)?.address;\n      if (!i) throw new Oe(\"User must have an embedded wallet to sign a message.\");\n      let {\n        signingWallet: o,\n        rootWallet: s\n      } = P(re, i);\n      if (!s || !o) return vt(ga, \"signTypedData\", \"onError\", Re.EMBEDDED_WALLET_NOT_FOUND), void r(Error(\"Must have a Privy wallet before signing\"));\n      aa(!0);\n      let l = te(e),\n        c = async () => {\n          if (!z) throw Error(\"User must be authenticated before signing with a Privy wallet\");\n          let e = await Va();\n          if (!Qt || !e || !(await sr.recoverPrimaryWallet())) throw Error(\"Unable to connect to wallet\");\n          C.createAnalyticsEvent({\n            eventName: \"embedded_wallet_sign_typed_data_started\",\n            payload: {\n              walletAddress: o.address,\n              requesterAppId: n\n            }\n          });\n          let {\n              entropyId: t,\n              entropyIdVerifier: a\n            } = I(s),\n            {\n              response: r\n            } = await Qt.rpc({\n              accessToken: e,\n              entropyId: t,\n              entropyIdVerifier: a,\n              chainType: \"ethereum\",\n              hdWalletIndex: o.walletIndex ?? 0,\n              requesterAppId: n,\n              request: {\n                method: \"eth_signTypedData_v4\",\n                params: [o.address, l]\n              }\n            }),\n            i = r.data;\n          return C.createAnalyticsEvent({\n            eventName: \"embedded_wallet_sign_typed_data_completed\",\n            payload: {\n              walletAddress: o.address,\n              requesterAppId: n\n            }\n          }), i;\n        };\n      if (va({\n        showWalletUIs: t?.uiOptions?.showWalletUIs\n      })) try {\n        let e = await c();\n        vt(ga, \"signTypedData\", \"onSuccess\", {\n          signature: e\n        }), a({\n          signature: e\n        });\n      } catch (e) {\n        vt(ga, \"signTypedData\", \"onError\", Re.UNABLE_TO_SIGN), r(e ?? new me(\"Unable to sign message\"));\n      } else {\n        let e = {\n            method: \"eth_signTypedData_v4\",\n            data: l,\n            confirmAndSign: c,\n            onSuccess: e => {\n              vt(ga, \"signTypedData\", \"onSuccess\", {\n                signature: e\n              }), a({\n                signature: e\n              });\n            },\n            onFailure: e => {\n              vt(ga, \"signTypedData\", \"onError\", Re.UNABLE_TO_SIGN), r(e);\n            },\n            uiOptions: t?.uiOptions || {}\n          },\n          {\n            entropyId: n,\n            entropyIdVerifier: i\n          } = I(s);\n        na({\n          signMessage: e,\n          connectWallet: {\n            entropyId: n,\n            entropyIdVerifier: i,\n            onCompleteNavigateTo: yt.EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,\n            onFailure: e => {\n              vt(ga, \"signMessage\", \"onError\", Re.UNKNOWN_CONNECT_WALLET_ERROR), r(e);\n            }\n          }\n        }), Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN);\n      }\n    }),\n    sendTransaction: async (e, t) => await Za({\n      transaction: e,\n      uiOptions: t?.uiOptions,\n      fundWalletConfig: t?.fundWalletConfig,\n      address: t?.address,\n      signOnly: !1\n    }),\n    signTransaction: async (e, t) => ({\n      signature: (await Za({\n        transaction: e,\n        uiOptions: t?.uiOptions,\n        address: t?.address,\n        signOnly: !0\n      })).hash\n    }),\n    exportWallet: e => new Promise(async (t, a) => {\n      if (!z || !re) return void a(Error(\"User must be authenticated before exporting their Privy wallet\"));\n      e && \"target\" in e && e && (e = void 0);\n      let r = e?.address ?? O(re)?.address;\n      if (!r) return void a(Error(\"User does not have an HD Ethereum wallet. To export an imported wallet, pass the `address` of the wallet to `exportWallet`.\"));\n      let {\n        signingWallet: n,\n        rootWallet: i\n      } = P(re, r);\n      if (!n || !i) return void a(Error(\"Must have a Privy wallet before exporting\"));\n      aa(!0);\n      let {\n          entropyId: o,\n          entropyIdVerifier: s\n        } = I(i),\n        l = {\n          entropyId: o,\n          entropyIdVerifier: s,\n          onCompleteNavigateTo: yt.EMBEDDED_WALLET_KEY_EXPORT_SCREEN,\n          onFailure: a,\n          shouldForceMFA: !0\n        };\n      na(ra), (await Va()) && Qt ? Qt ? (na({\n        keyExport: {\n          appId: v.appId,\n          appClientId: v.clientId,\n          origin: C.apiUrl,\n          walletToExport: n,\n          primaryWallet: i,\n          onSuccess: t,\n          onFailure: a\n        },\n        connectWallet: l\n      }), Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN)) : a(Error(\"Must have a Privy wallet before exporting\")) : a(Error(\"Must have valid access token to enroll in MFA\"));\n    }),\n    promptMfa: tr,\n    async init(e) {\n      switch (e) {\n        case \"sms\":\n          return void (await C.initMfaSmsVerification());\n        case \"passkey\":\n          return await C.initMfaPasskeyVerification();\n        case \"totp\":\n          return;\n        default:\n          throw Error(`Unsupported MFA method: ${e}`);\n      }\n    },\n    async submit(e, t) {\n      switch (e) {\n        case \"totp\":\n        case \"sms\":\n          if (\"string\" != typeof t) throw new Oe(\"Invalid MFA code\");\n          ma.current?.resolve({\n            mfaMethod: e,\n            mfaCode: t,\n            relyingParty: window.origin\n          }), await new Promise((e, t) => {\n            ya.current = {\n              resolve: e,\n              reject: t\n            };\n          });\n          break;\n        case \"passkey\":\n          if (\"string\" == typeof t) throw new Oe(\"Invalid authenticator response\");\n          let a = await import(\"@simplewebauthn/browser\"),\n            r = ut(await a.startAuthentication(t));\n          ma.current?.resolve({\n            mfaMethod: e,\n            mfaCode: r,\n            relyingParty: window.origin\n          }), await new Promise((e, t) => {\n            ya.current = {\n              resolve: e,\n              reject: t\n            };\n          });\n          break;\n        default:\n          throw ma.current?.reject(new Oe(\"Unsupported MFA method\")), new Oe(`Unsupported MFA method: ${e}`);\n      }\n    },\n    cancel() {\n      ma.current?.reject(new Oe(\"MFA canceled\"));\n    },\n    async initEnrollmentWithSms(e) {\n      let t = await Va();\n      if (!t || !Qt) throw Error(\"Must have valid access token to enroll in MFA\");\n      await Qt.initEnrollMfa({\n        method: \"sms\",\n        accessToken: t,\n        phoneNumber: e.phoneNumber\n      });\n    },\n    enrollInMfa: e => new Promise((t, a) => {\n      if (!e) return sr.closePrivyModal(), void t();\n      Zt.mfa.noPromptOnMfaRequired && console.warn(\"[Privy Warning] Triggering the 'showMfaEnrollmentModal' function when 'noPromptOnMfaRequired' is set to true is unexpected. If this is intentional, ensure that you are building custom UIs for MFA verification.\"), na({\n        mfaEnrollmentFlow: {\n          mfaMethods: Zt.mfa.methods,\n          shouldUnlinkOnUnenrollMfa: Zt.passkeys.shouldUnlinkOnUnenrollMfa,\n          onSuccess: t,\n          onFailure: a\n        }\n      }), Ca(yt.MFA_ENROLLMENT_FLOW_SCREEN);\n    }),\n    async initEnrollmentWithTotp() {\n      let e = await Va();\n      if (!e || !Qt) throw Error(\"Must have valid access token to enroll in MFA\");\n      let t = await Qt.initEnrollMfa({\n        method: \"totp\",\n        accessToken: e\n      });\n      return {\n        secret: t.secret,\n        authUrl: t.authUrl\n      };\n    },\n    async submitEnrollmentWithSms(e) {\n      let t = await Va();\n      if (!t || !Qt) throw Error(\"Must have valid access token to enroll in MFA\");\n      await Qt.submitEnrollMfa({\n        method: \"sms\",\n        accessToken: t,\n        phoneNumber: e.phoneNumber,\n        code: e.mfaCode\n      }), ie(await C.getAuthenticatedUser());\n    },\n    async submitEnrollmentWithTotp(e) {\n      let t = await Va();\n      if (!t || !Qt) throw Error(\"Must have valid access token to enroll in MFA\");\n      await Qt.submitEnrollMfa({\n        method: \"totp\",\n        accessToken: t,\n        code: e.mfaCode\n      }), ie(await C.getAuthenticatedUser());\n    },\n    async initEnrollmentWithPasskey() {},\n    async submitEnrollmentWithPasskey({\n      credentialIds: e\n    }, t = {}) {\n      let a = await Va();\n      if (!a || !Qt) throw Error(\"Must have valid access token to enroll in MFA\");\n      await Qt.submitEnrollMfa({\n        method: \"passkey\",\n        accessToken: a,\n        credentialIds: e,\n        removeForLogin: t.removeForLogin\n      }), ie(await C.getAuthenticatedUser());\n    },\n    async unenroll(e, t = {}) {\n      let a = await Va();\n      if (!a || !Qt) throw Error(\"Must have valid access token to remove MFA\");\n      \"passkey\" === e ? await Qt.submitEnrollMfa({\n        method: \"passkey\",\n        accessToken: a,\n        credentialIds: [],\n        removeForLogin: t.removeForLogin\n      }) : await Qt.unenrollMfa({\n        method: e,\n        accessToken: a\n      }), ie(await C.getAuthenticatedUser());\n    },\n    requestFarcasterSignerFromWarpcast: async () => {\n      let e = await Va(),\n        t = re?.linkedAccounts.find(e => \"wallet\" === e.type && \"privy\" === e.walletClientType);\n      if (!e) throw Error(\"Must have valid access token to connect with Farcaster\");\n      if (!Qt || !t) throw Error(\"Must have an embedded wallet to use Farcaster signers\");\n      if (!re?.farcaster?.fid) throw Error(\"Must have Farcaster account to use Farcaster signers\");\n      if (!(await sr.recoverPrimaryWallet())) throw Error(\"Unable to connect to wallet\");\n      let a = await Qt.initFarcasterSigner({\n        address: t.address,\n        hdWalletIndex: null,\n        accessToken: e,\n        mfaCode: null,\n        mfaMethod: null,\n        relyingParty: window.origin\n      });\n      \"approved\" === a.status && ie((await C.getAuthenticatedUser()) || re || null), na({\n        farcasterSigner: a\n      }), Ca(yt.AWAITING_FARCASTER_SIGNER);\n    },\n    getFarcasterSignerPublicKey: async () => {\n      let e,\n        t = await Va(),\n        a = re?.linkedAccounts.find(e => \"wallet\" === e.type && \"privy\" === e.walletClientType);\n      if (!t) throw Error(\"Must have valid access token to connect with Farcaster\");\n      if (!Qt || !a) throw Error(\"Must have an embedded wallet to use Farcaster signers\");\n      if (!re?.farcaster?.fid) throw Error(\"Must have Farcaster account to use Farcaster signers\");\n      if (!(await sr.recoverPrimaryWallet())) throw Error(\"Unable to connect to wallet\");\n      if (!re.farcaster?.signerPublicKey) throw Error(\"Must have a Farcaster signer public key to sign\");\n      return e = re.farcaster.signerPublicKey.slice(2), Uint8Array.from(e.match(/.{1,2}/g).map(e => parseInt(e, 16)));\n    },\n    signFarcasterMessage: async e => {\n      let t = await Va(),\n        a = re?.linkedAccounts.find(e => \"wallet\" === e.type && \"privy\" === e.walletClientType);\n      if (!t) throw Error(\"Must have valid access token to connect with Farcaster\");\n      if (!Qt || !a) throw Error(\"Must have an embedded wallet to use Farcaster signers\");\n      if (!re?.farcaster?.fid) throw Error(\"Must have Farcaster account to use Farcaster signers\");\n      if (!(await sr.recoverPrimaryWallet())) throw Error(\"Unable to connect to wallet\");\n      if (!re.farcaster?.signerPublicKey) throw Error(\"Must have a Farcaster signer public key to sign\");\n      let r = await import(\"@simplewebauthn/browser\"),\n        n = await Qt.signFarcasterMessage({\n          address: a.address,\n          hdWalletIndex: null,\n          accessToken: t,\n          mfaCode: null,\n          mfaMethod: null,\n          payload: {\n            hash: r.bufferToBase64URLString(e)\n          },\n          fid: BigInt(re.farcaster.fid),\n          relyingParty: window.origin\n        });\n      return new Uint8Array(r.base64URLStringToBuffer(n.signature));\n    },\n    createGuestAccount: async () => {\n      if (re && !re.isGuest) throw Error(\"User cannot already be authenticated to create a guest account\");\n      return re?.isGuest ? re : sr.loginWithGuestAccountFlow();\n    },\n    signMessageWithCrossAppWallet(e, {\n      address: t,\n      chainId: a\n    }) {\n      let r = re?.linkedAccounts.some(e => \"cross_app\" === e.type && e.smartWallets.some(e => e.address === t));\n      return qe({\n        user: re,\n        client: C,\n        address: t,\n        requesterAppId: Zt.id,\n        request: {\n          method: r ? \"privy_signSmartWalletMessage\" : \"personal_sign\",\n          params: [e, t],\n          chainId: a\n        },\n        reconnect: ir\n      });\n    },\n    signTypedDataWithCrossAppWallet(e, {\n      address: t,\n      chainId: a\n    }) {\n      let r = re?.linkedAccounts.some(e => \"cross_app\" === e.type && e.smartWallets.some(e => e.address === t)),\n        n = te(e);\n      return qe({\n        user: re,\n        client: C,\n        address: t,\n        requesterAppId: Zt.id,\n        request: {\n          method: r ? \"privy_signSmartWalletTypedData\" : \"eth_signTypedData_v4\",\n          params: [t, n],\n          chainId: a\n        },\n        reconnect: ir\n      });\n    },\n    sendTransactionWithCrossAppWallet(e, {\n      address: t\n    }) {\n      let a = re?.linkedAccounts.some(e => \"cross_app\" === e.type && e.smartWallets.some(e => e.address === t));\n      return qe({\n        user: re,\n        client: C,\n        address: t,\n        requesterAppId: Zt.id,\n        request: {\n          method: a ? \"privy_sendSmartWalletTx\" : \"eth_sendTransaction\",\n          params: [e],\n          chainId: e.chainId\n        },\n        reconnect: ir\n      });\n    },\n    isModalOpen: x,\n    mfaMethods: Zt.mfa.methods\n  };\n  Da = or.signMessage, Ma = or.signTypedData, La = async (e, t) => await Za({\n    transaction: e,\n    ...t,\n    signOnly: !1\n  }), Pa = async (e, t) => ({\n    signature: (await Za({\n      transaction: e,\n      ...t,\n      signOnly: !0\n    })).hash\n  });\n  let sr = {\n    setAuthenticated: G,\n    setUser: ie,\n    isNewUserThisSession: Se,\n    pendingTransaction: null,\n    walletConnectionStatus: Lt,\n    connectors: C.connectors?.walletConnectors ?? [],\n    solanaWallets: ue,\n    rpcConfig: Zt.rpcConfig,\n    chains: Zt.chains,\n    appId: v.appId,\n    showFiatPrices: \"native-token\" !== Zt.embeddedWallets.priceDisplay.primary,\n    clientAnalyticsId: C.clientAnalyticsId,\n    customAuthStatus: pa,\n    hideWalletUIs: Ta,\n    emailOtpState: Bt,\n    setEmailOtpState: Vt,\n    smsOtpState: Ht,\n    setSmsOtpState: Kt,\n    oAuthState: qt,\n    setOAuthState: $t,\n    telegramAuthState: Yt,\n    setTelegramAuthState: Xt,\n    siweState: zt,\n    setSiweState: Gt,\n    isHeadlessOAuthLoading: Mt,\n    nativeTokenSymbolForChainId: e => Zt.chains.find(t => t.id === Number(e))?.nativeCurrency.symbol,\n    initializeWalletProxy: async e => {\n      if (Qt) return Qt;\n      let t = new Promise(e => {\n          la(() => t => e(t));\n        }),\n        a = new Promise(t => setTimeout(() => t(null), e)),\n        r = await Promise.race([t, a]);\n      return la(null), r;\n    },\n    getAuthFlow: () => C.authFlow,\n    getAuthMeta: () => C.authFlow?.meta,\n    client: C,\n    closePrivyModal: async (e = {\n      shouldCallAuthOnSuccess: !0,\n      isSuccess: !1\n    }) => {\n      let t,\n        a = B && z && re;\n      a && Aa.current && (t = ar(re)), \"login\" === _a.current ? e.shouldCallAuthOnSuccess && a && Aa.current ? vt(ga, \"login\", \"onComplete\", {\n        user: re,\n        isNewUser: Se,\n        wasAlreadyAuthenticated: !1,\n        loginMethod: Aa.current,\n        loginAccount: t ?? null\n      }) : vt(ga, \"login\", \"onError\", Re.USER_EXITED_AUTH_FLOW) : \"link\" === _a.current && t ? e.isSuccess && a && Aa.current ? vt(ga, \"linkAccount\", \"onSuccess\", {\n        user: re,\n        linkMethod: Aa.current,\n        linkedAccount: t\n      }) : Aa.current && vt(ga, \"linkAccount\", \"onError\", Re.USER_EXITED_LINK_FLOW, {\n        linkMethod: Aa.current\n      }) : \"update\" === _a.current && t && (e.isSuccess && a && Aa.current ? vt(ga, \"update\", \"onSuccess\", {\n        user: re,\n        updateMethod: Aa.current,\n        updatedAccount: t\n      }) : Aa.current && vt(ga, \"update\", \"onError\", Re.USER_EXITED_UPDATE_FLOW, {\n        linkMethod: Aa.current\n      }));\n      let r = Rt && Je.includes(Rt),\n        n = Rt === yt.ERROR_SCREEN && ra.errorModalData && Je.includes(ra.errorModalData.previousScreen);\n      if ((r || n) && ra.funding) {\n        let e,\n          t = Ze[Rt] ?? null;\n        if (\"solana\" === ra.funding.chainType) {\n          let a = k(wt);\n          if (!a) return void console.warn(\"Unable to load solana plugin, skipping balance\");\n          try {\n            e = BigInt(await a.getBalance({\n              address: ra.funding.address,\n              cluster: ra.funding.cluster\n            }));\n          } catch {\n            console.error(\"Unable to pull wallet balance\");\n          }\n          vt(ga, \"fundSolanaWallet\", \"onUserExited\", {\n            address: ra.funding.address,\n            cluster: ra.funding.cluster,\n            fundingMethod: t,\n            balance: e\n          });\n        } else {\n          let a = Et(ra.funding.chain.id, Zt.chains, Zt.rpcConfig, {\n            appId: v.appId\n          });\n          try {\n            e = await a.getBalance({\n              address: ra.funding.address\n            });\n          } catch {\n            console.error(\"Unable to pull wallet balance\");\n          }\n          vt(ga, \"fundWallet\", \"onUserExited\", {\n            address: ra.funding.address,\n            chain: ra.funding.chain,\n            fundingMethod: t,\n            balance: e\n          });\n        }\n      }\n      na({\n        ...ra,\n        externalConnectWallet: {\n          suggestedAddress: void 0\n        }\n      }), _a.current = null, Aa.current = null, ht(!1), j(!1), setTimeout(() => {\n        C.authFlow = void 0;\n      }, 200), C.createAnalyticsEvent({\n        eventName: \"modal_closed\"\n      });\n    },\n    solanaSignMessage: ({\n      message: e,\n      options: t\n    }) => new Promise(async (a, r) => {\n      if (!z || !re) return vt(ga, \"signSolanaMessage\", \"onError\", Re.MUST_BE_AUTHENTICATED), void r(Error(\"User must be authenticated before signing with a Privy wallet\"));\n      let n = t?.address ?? R(re)?.address;\n      if (!n) throw new Oe(\"User must have an embedded wallet to sign a message.\");\n      let {\n        signingWallet: i,\n        rootWallet: o\n      } = M(re, n);\n      if (!i || !o) return vt(ga, \"signSolanaMessage\", \"onError\", Re.EMBEDDED_WALLET_NOT_FOUND), void r(Error(\"Must have a Privy wallet before signing\"));\n      if (\"string\" != typeof e || e.length < 1) return vt(ga, \"signMessage\", \"onError\", Re.INVALID_MESSAGE), void r(Error(\"Message must be a non-empty string\"));\n      aa(!0);\n      let s = async () => {\n        if (!z) throw Error(\"User must be authenticated before signing with a Privy wallet\");\n        let t = await C.getAccessToken();\n        if (!t) throw Error(\"User must be authenticated to use their embedded wallet.\");\n        let a = sr.walletProxy ?? (await sr.initializeWalletProxy(15e3));\n        if (!a) throw Error(\"Failed to initialize embedded wallet proxy.\");\n        if (!(await sr.recoverPrimaryWallet())) throw Error(\"Unable to connect to wallet\");\n        if (!o) throw Error(\"No root wallet for signing wallet found\");\n        let {\n            entropyId: r,\n            entropyIdVerifier: n\n          } = I(o),\n          {\n            response: s\n          } = await a.rpc({\n            accessToken: t,\n            entropyId: r,\n            entropyIdVerifier: n,\n            chainType: \"solana\",\n            hdWalletIndex: i.walletIndex ?? 0,\n            request: {\n              method: \"signMessage\",\n              params: {\n                message: e\n              }\n            }\n          });\n        return s.data.signature;\n      };\n      if (va({\n        showWalletUIs: t?.uiOptions?.showWalletUIs\n      })) try {\n        let e = await s();\n        vt(ga, \"signSolanaMessage\", \"onSuccess\", {\n          signature: new Uint8Array(Buffer.from(e, \"base64\"))\n        }), a({\n          signature: e\n        });\n      } catch (e) {\n        r(e);\n      } else {\n        let n = {\n            method: \"solana_signMessage\",\n            data: e,\n            confirmAndSign: s,\n            onSuccess: e => {\n              vt(ga, \"signSolanaMessage\", \"onSuccess\", {\n                signature: new Uint8Array(Buffer.from(e, \"base64\"))\n              }), a({\n                signature: e\n              });\n            },\n            onFailure: e => {\n              r(e);\n            },\n            uiOptions: t?.uiOptions\n          },\n          {\n            entropyId: i,\n            entropyIdVerifier: l\n          } = I(o);\n        na({\n          signMessage: n,\n          connectWallet: {\n            entropyId: i,\n            entropyIdVerifier: l,\n            onCompleteNavigateTo: yt.EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,\n            onFailure: e => {\n              vt(ga, \"signSolanaMessage\", \"onError\", Re.UNKNOWN_CONNECT_WALLET_ERROR), r(e);\n            }\n          }\n        }), Ia(yt.EMBEDDED_WALLET_CONNECTING_SCREEN);\n      }\n    }),\n    signSolanaTransaction: async ({\n      transaction: e,\n      connection: t,\n      uiOptions: a,\n      transactionOptions: r,\n      address: n\n    }) => {\n      let i = n ? Ee.find(e => e.address === n) : Ee.slice().sort((e, t) => (e.walletIndex ?? 0) - (t.walletIndex ?? 0))[0];\n      if (!i) throw vt(ga, \"signSolanaTransaction\", \"onError\", Re.EMBEDDED_WALLET_NOT_FOUND), new Oe(\"Embedded wallet not found\", Re.EMBEDDED_WALLET_NOT_FOUND);\n      let {\n        signedTransaction: o\n      } = await er({\n        transaction: e,\n        connection: t,\n        transactionOptions: r,\n        uiOptions: a,\n        wallet: i,\n        signOnly: !0\n      });\n      return o;\n    },\n    sendSolanaTransaction: async ({\n      transaction: e,\n      connection: t,\n      uiOptions: a,\n      transactionOptions: r,\n      fundWalletConfig: n,\n      address: i\n    }) => {\n      let o = i ? Ee.find(e => e.address === i) : Ee.slice().sort((e, t) => (e.walletIndex ?? 0) - (t.walletIndex ?? 0))[0];\n      if (!o) throw vt(ga, \"sendSolanaTransaction\", \"onError\", Re.EMBEDDED_WALLET_NOT_FOUND), new Oe(\"Embedded wallet not found\", Re.EMBEDDED_WALLET_NOT_FOUND);\n      return await er({\n        transaction: e,\n        connection: t,\n        transactionOptions: r,\n        uiOptions: a,\n        fundWalletConfig: n,\n        wallet: o,\n        signOnly: !1\n      });\n    },\n    openPrivyModal: Ca,\n    connectWallet: Oa,\n    initLoginWithWallet: async (e, t, a) => {\n      ye(e) ? (Aa.current = \"siwe\", ba(e, t, a)) : (Aa.current = \"siws\", Ba(e, t, a));\n    },\n    loginWithWallet: async () => {\n      let e, t, a;\n      if (!B) throw new De();\n      if (C.authFlow instanceof y ? e = \"siwe\" : C.authFlow instanceof g && (e = \"siws\"), !e) throw new Oe(\"Must initialize SIWE/SIWS flow first.\");\n      if (null !== (await C.getAccessToken())) try {\n        ({\n          user: t\n        } = await C.link()), Aa.current = e;\n      } catch (t) {\n        throw vt(ga, \"linkAccount\", \"onError\", t.privyErrorCode || Re.FAILED_TO_LINK_ACCOUNT, {\n          linkMethod: e\n        }), t;\n      } else try {\n        ({\n          user: t,\n          isNewUser: a\n        } = await C.authenticate()), Aa.current = e;\n      } catch (e) {\n        throw vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.GENERIC_CONNECT_WALLET_ERROR), e;\n      }\n      ie(t || re || null), ht(a || !1), G(!0);\n    },\n    delegateWallet: async ({\n      address: e,\n      chainType: t,\n      showDelegationUIs: a\n    }) => new Promise(async (r, n) => {\n      let i = await Va();\n      if (!z || !re || !i) throw new Oe(\"User must be authenticated and have an embedded wallet to delegate actions.\");\n      if (\"solana\" !== t && \"ethereum\" !== t) throw new Oe(\"Only Solana and Ethereum embedded wallets are supported for delegation and revocation.\");\n      let o = sr.walletProxy ?? (await sr.initializeWalletProxy(15e3));\n      if (!o) throw new Oe(\"Wallet proxy not initialized.\");\n      if (ve({\n        address: e,\n        chainType: t,\n        user: re\n      })) return r();\n      let s = Ce({\n          address: e,\n          user: re\n        }),\n        l = Ie({\n          address: e,\n          user: re\n        }),\n        c = async () => {\n          await o.createDelegatedAction({\n            accessToken: i,\n            rootWallet: l,\n            delegatedWallets: [s]\n          }), await sr.refreshSessionAndUser();\n        };\n      if (!a) {\n        try {\n          await c(), r();\n        } catch (e) {\n          n(e);\n        }\n        return;\n      }\n      await sr.recoverPrimaryWallet(), na({\n        delegatedActions: {\n          consent: {\n            address: e,\n            onDelegate: c,\n            onSuccess: async () => {\n              r();\n            },\n            onError: async e => {\n              n(e);\n            }\n          }\n        }\n      }), Ca(yt.EMBEDDED_WALLET_DELEGATED_ACTIONS_CONSENT_SCREEN);\n    }),\n    revokeDelegatedWallets: async ({\n      showDelegationUIs: e\n    }) => new Promise(async (t, a) => {\n      if (!z || !re) throw new Oe(\"User must be authenticated and have an embedded wallet to revoke a delegated wallet.\");\n      if (0 === ke(re).length) throw new Oe(\"User has no delegated wallets to revoke.\");\n      let r = async () => {\n        await C.revokeDelegatedWallet(), await sr.refreshSessionAndUser();\n      };\n      if (e) na({\n        delegatedActions: {\n          revoke: {\n            onRevoke: r,\n            onSuccess: async () => {\n              t();\n            },\n            onError: async e => {\n              a(e);\n            }\n          }\n        }\n      }), Ca(yt.EMBEDDED_WALLET_DELEGATED_ACTIONS_REVOKE_SCREEN);else try {\n        await r(), t();\n      } catch (e) {\n        a(e);\n      }\n    }),\n    initLoginWithFarcaster: async (e, t) => {\n      let a = new p(e, t);\n      C.startAuthFlow(a);\n      try {\n        Aa.current = \"farcaster\", await a.initializeFarcasterConnect();\n      } catch (e) {\n        throw \"login\" === _a.current ? vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR) : \"link\" === _a.current && vt(ga, \"linkAccount\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR, {\n          linkMethod: \"farcaster\"\n        }), e;\n      }\n    },\n    loginWithFarcaster: async () => {\n      let e, t;\n      if (!B) throw new De();\n      if (!(C.authFlow instanceof p)) throw new Oe(\"Must initialize Farcaster flow first.\");\n      if (null !== (await C.getAccessToken())) try {\n        ({\n          user: e\n        } = await C.link()), Aa.current = \"farcaster\";\n      } catch (e) {\n        throw vt(ga, \"linkAccount\", \"onError\", e.privyErrorCode || Re.FAILED_TO_LINK_ACCOUNT, {\n          linkMethod: \"farcaster\"\n        }), e;\n      } else try {\n        ({\n          user: e,\n          isNewUser: t\n        } = await C.authenticate()), Aa.current = \"farcaster\";\n      } catch (e) {\n        throw vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR), e;\n      }\n      ie(e || null), ht(t || !1), G(!0);\n    },\n    async loginWithGuestAccountFlow() {\n      let e = new w(this.appId);\n      C.startAuthFlow(e);\n      try {\n        _a.current = \"login\", Aa.current = \"guest\";\n        let {\n          user: e,\n          isNewUser: t\n        } = await C.authenticate();\n        if (t = t || !1, !e) throw new Oe(\"Unable to authenticate guest account\");\n        let a = await Va(),\n          r = await sr.initializeWalletProxy($);\n        if (a && r) try {\n          let t = lt(e, Zt.embeddedWallets.ethereum.createOnLogin),\n            n = ct(e, Zt.embeddedWallets.solana.createOnLogin);\n          if (t && n) {\n            let t = await $a(e, $);\n            await r.createSolana({\n              accessToken: a,\n              ethereumAddress: t?.address\n            }), e = await sr.refreshSessionAndUser();\n          } else n ? (await r.createSolana({\n            accessToken: a,\n            ethereumAddress: O(e)?.address\n          }), e = await sr.refreshSessionAndUser()) : t ? (await $a(e, $), e = await sr.refreshSessionAndUser()) : ie(e);\n        } catch (t) {\n          ie(e), console.warn(\"Unable to create embedded wallet for guest account\");\n        }\n        return ht(t), G(!0), vt(ga, \"login\", \"onComplete\", {\n          user: e,\n          isNewUser: t,\n          wasAlreadyAuthenticated: !1,\n          loginMethod: \"guest\",\n          loginAccount: null\n        }), e;\n      } catch (e) {\n        throw vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR), e;\n      }\n    },\n    async crossAppAuthFlow({\n      appId: e,\n      popup: t,\n      action: a\n    }) {\n      let r = `privy:${e}`;\n      Aa.current = r;\n      let {\n        url: n,\n        stateCode: i,\n        codeVerifier: o\n      } = await He({\n        api: C.api,\n        appId: e\n      });\n      if (!n) throw C.createAnalyticsEvent({\n        eventName: \"cross_app_auth_error\",\n        payload: {\n          error: \"Unable to open cross-app auth popup\",\n          appId: e\n        }\n      }), new Oe(\"No authorization URL returned for cross-app auth.\");\n      try {\n        let s = await Ge({\n            url: n,\n            popup: t,\n            provider: r\n          }),\n          l = s.stateCode,\n          c = s.authorizationCode;\n        if (l !== i) throw C.createAnalyticsEvent({\n          eventName: \"possible_phishing_attempt\",\n          payload: {\n            provider: r,\n            storedStateCode: i ?? \"\",\n            returnedStateCode: l ?? \"\"\n          }\n        }), new Oe(\"Unexpected auth flow. This may be a phishing attempt.\", void 0, Re.OAUTH_UNEXPECTED);\n        let d = await Ke({\n          appId: e,\n          codeVerifier: o,\n          stateCode: l,\n          authorizationCode: c,\n          action: a,\n          client: C\n        });\n        d && C.storeProviderAccessToken(e, d);\n        let u = await sr.refreshSessionAndUser();\n        if (!u) throw new Oe(\"Unable to update user\");\n        return C.createAnalyticsEvent({\n          eventName: \"cross_app_auth_completed\",\n          payload: {\n            providerAppId: e\n          }\n        }), u;\n      } catch (e) {\n        throw C.createAnalyticsEvent({\n          eventName: \"cross_app_auth_error\",\n          payload: {\n            error: e.toString(),\n            provider: r\n          }\n        }), e;\n      }\n    },\n    async initLoginWithOAuth(e, t, a) {\n      if (Aa.current = e, !ee()) return void Ia(yt.IN_APP_BROWSER_LOGIN_NOT_POSSIBLE);\n      if (\"google\" === e && tt(window.navigator.userAgent)) return void Ia(yt.IN_APP_BROWSER_LOGIN_NOT_POSSIBLE);\n      \"twitter\" === e && window.opener && window.opener.postMessage({\n        type: je\n      }, \"*\"), Z.del(Y), Z.del(X);\n      let r = new St({\n        provider: e,\n        disableSignup: !!a,\n        withPrivyUi: !0\n      });\n      t && r.addCaptchaToken(t), C.startAuthFlow(r);\n      let n = await C.authFlow.getAuthorizationUrl();\n      n && n.url && (\"twitter\" === e && l && (n.url = n.url.replace(\"x.com\", \"twitter.com\")), window.location.assign(n.url));\n    },\n    async initLoginWithTelegram(e, t) {\n      if (!B) throw new De();\n      Aa.current = \"telegram\";\n      let a = new A(e, t);\n      C.startAuthFlow(a), Xt({\n        status: \"loading\"\n      }), a.meta.telegramWebAppData = void 0, a.meta.telegramAuthResult = await new Promise((e, t) => Zt.loginConfig.telegramAuthConfiguration ? window.Telegram ? void window.Telegram.Login.auth({\n        bot_id: Zt.loginConfig.telegramAuthConfiguration.botId,\n        request_access: !0\n      }, a => a ? e(a) : t(new Oe(\"Telegram auth failed or was canceled by the client\"))) : t(new Oe(\"Telegram was not initialized\")) : t(new Oe(\"Telegram Auth configuration is not loaded\")));\n    },\n    async loginWithTelegram(e) {\n      let t, a;\n      if (!(C.authFlow instanceof A)) throw new Oe(\"Must initialize Telegram flow before calling loginWithTelegram\");\n      C.authFlow.meta.captchaToken ||= e?.captchaToken;\n      let r = await Va(),\n        n = e?.intent || _a.current;\n      if (\"login\" === n) try {\n        let e = await C.authenticate();\n        t = e.user, a = e.isNewUser, Aa.current = \"telegram\";\n      } catch (e) {\n        throw vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR), e;\n      } else {\n        if (\"link\" !== n) throw new Oe(\"Unknown auth intent\");\n        try {\n          t = (await C.link()).user, Aa.current = \"telegram\";\n        } catch (e) {\n          throw vt(ga, \"linkAccount\", \"onError\", e.privyErrorCode || Re.FAILED_TO_LINK_ACCOUNT, {\n            linkMethod: \"telegram\"\n          }), e;\n        }\n      }\n      ie(t), ht(a || !1), G(!0), Xt({\n        status: \"done\"\n      });\n      let i = t?.linkedAccounts.find(({\n        type: e\n      }) => \"telegram\" === e) || null;\n      return {\n        user: t,\n        isNewUser: a || !1,\n        wasAlreadyAuthenticated: !!r,\n        loginAccount: i\n      };\n    },\n    async recoveryOAuthFlow(e, t, a) {\n      let r, n;\n      function i(t) {\n        if (!t) throw C.createAnalyticsEvent({\n          eventName: \"recovery_oauth_error\",\n          payload: {\n            error: \"Unable to open recovery OAuth popup\",\n            provider: e\n          }\n        }), new Oe(\"Recovery OAuth failed\");\n      }\n      switch (e) {\n        case \"google-drive\":\n          {\n            let t,\n              o,\n              {\n                url: s,\n                codeVerifier: l,\n                stateCode: c\n              } = await $e({\n                api: Ra.api,\n                provider: e\n              });\n            i(s);\n            try {\n              let r = await rt({\n                url: s,\n                popup: a,\n                provider: e\n              });\n              if (t = r.stateCode, o = r.authorizationCode, t !== c) throw C.createAnalyticsEvent({\n                eventName: \"possible_phishing_attempt\",\n                payload: {\n                  provider: e,\n                  storedStateCode: c ?? \"\",\n                  returnedStateCode: t ?? \"\"\n                }\n              }), new Oe(\"Unexpected auth flow. This may be a phishing attempt.\", void 0, Re.OAUTH_UNEXPECTED);\n            } catch (t) {\n              throw C.createAnalyticsEvent({\n                eventName: \"recovery_oauth_error\",\n                payload: {\n                  error: t.toString(),\n                  provider: e\n                }\n              }), new Oe(\"Recovery OAuth failed\");\n            }\n            [r, n] = await Promise.all([Va(), Ye({\n              api: Ra.api,\n              provider: e,\n              codeVerifier: l,\n              stateCode: t,\n              authorizationCode: o\n            })]);\n            break;\n          }\n        case \"icloud\":\n          {\n            let {\n              url: t\n            } = await $e({\n              api: Ra.api,\n              provider: e\n            });\n            i(t);\n            let {\n              ckWebAuthToken: o\n            } = await rt({\n              url: t,\n              popup: a,\n              provider: e\n            });\n            n = o, r = await Va();\n          }\n      }\n      if (!Qt) throw new Oe(\"Cannot connect to wallet proxy\");\n      if (!r) throw new Oe(\"Unable to authorize user\");\n      switch (t) {\n        case \"recover\":\n          {\n            let t = ra.recoverWallet?.entropyId,\n              a = ra.recoverWallet?.entropyIdVerifier;\n            if (!t || !a) throw new Oe(\"Recovery OAuth failed\");\n            C.createAnalyticsEvent({\n              eventName: \"embedded_wallet_recovery_started\",\n              payload: {\n                walletAddress: t,\n                recoveryMethod: e\n              }\n            }), await Qt.recover({\n              accessToken: r,\n              entropyId: t,\n              entropyIdVerifier: a,\n              recoveryAccessToken: n\n            }), C.createAnalyticsEvent({\n              eventName: \"embedded_wallet_recovery_completed\",\n              payload: {\n                walletAddress: t,\n                recoveryMethod: e\n              }\n            });\n            break;\n          }\n        case \"create-wallet\":\n          {\n            C.createAnalyticsEvent({\n              eventName: \"embedded_wallet_creation_started\"\n            }), await Qt.create({\n              accessToken: r,\n              recoveryAccessToken: n,\n              recoveryMethod: e\n            });\n            let t = O(await sr.refreshSessionAndUser());\n            if (!t) throw vt(ga, \"createWallet\", \"onError\", Re.UNKNOWN_EMBEDDED_WALLET_ERROR), Error(\"Failed to create wallet\");\n            C.createAnalyticsEvent({\n              eventName: \"embedded_wallet_creation_completed\",\n              payload: {\n                walletAddress: t.address\n              }\n            }), vt(ga, \"createWallet\", \"onSuccess\", {\n              wallet: t\n            });\n            break;\n          }\n        case \"set-recovery\":\n          {\n            let t = U(re);\n            if (!t) throw vt(ga, \"setWalletRecovery\", \"onError\", Re.EMBEDDED_WALLET_NOT_FOUND), Error(\"Embedded wallet not found\");\n            C.createAnalyticsEvent({\n              eventName: \"embedded_wallet_set_recovery_started\",\n              payload: {\n                walletAddress: t.address,\n                existingRecoveryMethod: t.recoveryMethod,\n                targetRecoveryMethod: e\n              }\n            });\n            let {\n              entropyId: a,\n              entropyIdVerifier: i\n            } = I(t);\n            await Qt.setRecovery({\n              accessToken: r,\n              entropyId: a,\n              entropyIdVerifier: i,\n              recoveryMethod: e,\n              recoveryAccessToken: n\n            });\n            let o = U(await sr.refreshSessionAndUser());\n            if (!o) throw vt(ga, \"createWallet\", \"onError\", Re.UNKNOWN_EMBEDDED_WALLET_ERROR), Error(\"Failed to set recovery on wallet\");\n            C.createAnalyticsEvent({\n              eventName: \"embedded_wallet_set_recovery_completed\",\n              payload: {\n                walletAddress: t.address,\n                existingRecoveryMethod: t.recoveryMethod,\n                targetRecoveryMethod: e\n              }\n            }), vt(ga, \"setWalletRecovery\", \"onSuccess\", {\n              method: e,\n              wallet: o\n            });\n            break;\n          }\n        default:\n          throw new Oe(\"Unsupported recovery action\");\n      }\n    },\n    async loginWithOAuth(e) {\n      let t, a, r;\n      if (!(C.authFlow instanceof St)) throw new Oe(\"Must initialize OAuth flow before calling loginWithOAuth\");\n      let n = Z.get(Q),\n        i = C.authFlow.meta.stateCode;\n      if (n !== i) throw C.createAnalyticsEvent({\n        eventName: \"possible_phishing_attempt\",\n        payload: {\n          provider: e,\n          storedStateCode: n ?? \"\",\n          returnedStateCode: i ?? \"\"\n        }\n      }), new Oe(\"Unexpected auth flow. This may be a phishing attempt.\", void 0, Re.OAUTH_UNEXPECTED);\n      if (null !== (await C.getAccessToken())) try {\n        let a = await C.link();\n        t = a.user, r = a.oAuthTokens, Aa.current = e;\n      } catch (t) {\n        throw vt(ga, \"linkAccount\", \"onError\", t.privyErrorCode || Re.FAILED_TO_LINK_ACCOUNT, {\n          linkMethod: e\n        }), t;\n      } else try {\n        let n = await C.authenticate();\n        t = n.user, a = n.isNewUser, r = n.oAuthTokens, Aa.current = e;\n      } catch (t) {\n        throw \"login\" === _a.current ? vt(ga, \"login\", \"onError\", t.privyErrorCode || Re.UNKNOWN_AUTH_ERROR) : \"link\" === _a.current && vt(ga, \"linkAccount\", \"onError\", t.privyErrorCode || Re.FAILED_TO_LINK_ACCOUNT, {\n          linkMethod: e\n        }), t;\n      }\n      return ie(t), ht(a || !1), G(!0), r && t && vt(ga, \"oAuthAuthorization\", \"onOAuthTokenGrant\", {\n        oAuthTokens: r,\n        user: t\n      }), r;\n    },\n    passkeyAuthState: xt,\n    setPasskeyAuthState: jt,\n    async initSignupWithPasskey({\n      captchaToken: e,\n      withPrivyUi: t\n    }) {\n      let a = new m({\n        captchaToken: e,\n        setPasskeyAuthState: jt\n      });\n      C.startAuthFlow(a), _a.current = \"login\";\n      try {\n        Aa.current = \"passkey\", jt({\n          status: \"generating-challenge\"\n        }), await a.initRegisterFlow(t), jt({\n          status: \"awaiting-passkey\"\n        });\n      } catch (e) {\n        throw jt({\n          status: \"error\",\n          error: e\n        }), vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR), e;\n      }\n    },\n    async signupWithPasskey() {\n      let e, t;\n      if (!B) throw new De();\n      if (!(C.authFlow instanceof m)) throw new Oe(\"Must initialize Passkey flow first.\");\n      if (\"passkey\" !== Aa.current) {\n        let e = new Oe(\"Must init login with Passkey flow first.\");\n        throw jt({\n          status: \"error\",\n          error: e\n        }), e;\n      }\n      let a = await Va();\n      try {\n        Aa.current = \"passkey\", jt({\n          status: \"awaiting-passkey\"\n        }), {\n          user: e,\n          isNewUser: t\n        } = await C.authenticate();\n      } catch (e) {\n        throw jt({\n          status: \"error\",\n          error: e\n        }), vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR), e;\n      }\n      ie(e), ht(t || !1), G(!0), jt({\n        status: \"done\"\n      });\n      let r = e?.linkedAccounts.find(({\n        type: e\n      }) => \"passkey\" === e) || null;\n      return {\n        user: e,\n        isNewUser: t || !1,\n        wasAlreadyAuthenticated: !!a,\n        loginAccount: r\n      };\n    },\n    async initLoginWithPasskey({\n      captchaToken: e,\n      withPrivyUi: t\n    }) {\n      let a = new m({\n        captchaToken: e,\n        setPasskeyAuthState: jt\n      });\n      C.startAuthFlow(a), _a.current = \"login\";\n      try {\n        Aa.current = \"passkey\", jt({\n          status: \"generating-challenge\"\n        }), await a.initAuthenticationFlow(t), jt({\n          status: \"awaiting-passkey\"\n        });\n      } catch (e) {\n        throw jt({\n          status: \"error\",\n          error: e\n        }), vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR), e;\n      }\n    },\n    async loginWithPasskey(e) {\n      let t, a;\n      if (!B) throw new De();\n      if (!(C.authFlow instanceof m)) throw new Oe(\"Must initialize Passkey flow first.\");\n      if (e?.credentialIds && (C.authFlow.meta.allowedCredentialsIds = e.credentialIds), \"passkey\" !== Aa.current) {\n        let e = new Oe(\"Must init login with Passkey flow first.\");\n        throw jt({\n          status: \"error\",\n          error: e\n        }), e;\n      }\n      let r = await Va();\n      try {\n        Aa.current = \"passkey\", jt({\n          status: \"awaiting-passkey\"\n        }), {\n          user: t,\n          isNewUser: a\n        } = await C.authenticate();\n      } catch (e) {\n        throw jt({\n          status: \"error\",\n          error: e\n        }), vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR), e;\n      }\n      ie(t), ht(a || !1), G(!0), jt({\n        status: \"done\"\n      });\n      let n = t?.linkedAccounts.find(({\n        type: e\n      }) => \"passkey\" === e) || null;\n      return {\n        user: t,\n        isNewUser: a || !1,\n        wasAlreadyAuthenticated: !!r,\n        loginAccount: n\n      };\n    },\n    async initLinkWithPasskey(e) {\n      let t = new m({\n        captchaToken: e\n      });\n      C.startAuthFlow(t), _a.current = \"link\", Aa.current = \"passkey\", jt({\n        status: \"generating-challenge\"\n      });\n      try {\n        await t.initLinkFlow(), jt({\n          status: \"awaiting-passkey\"\n        });\n      } catch (e) {\n        throw vt(ga, \"linkAccount\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR, {\n          linkMethod: \"passkey\"\n        }), jt({\n          status: \"error\",\n          error: e\n        }), e;\n      }\n    },\n    async linkWithPasskey() {\n      let e;\n      if (!B) throw new De();\n      if (!(C.authFlow instanceof m)) throw new Oe(\"Must initialize Passkey flow first.\");\n      if (\"passkey\" !== Aa.current) throw new Oe(\"Must init login with Passkey flow first.\");\n      try {\n        Aa.current = \"passkey\", {\n          user: e\n        } = await C.link();\n      } catch (e) {\n        throw vt(ga, \"linkAccount\", \"onError\", e.privyErrorCode || Re.FAILED_TO_LINK_ACCOUNT, {\n          linkMethod: \"passkey\"\n        }), e;\n      }\n      return ie(e || re || null), jt({\n        status: \"done\"\n      }), e;\n    },\n    async initLoginWithHeadlessOAuth(e, t, a) {\n      if (!ee()) throw Error(\"It looks like you're using an in-app browser.  To log in, please try again using an external browser.\");\n      if (\"google\" === e && tt(window.navigator.userAgent)) throw Error(\"It looks like you're using an in-app browser.  To log in, please try again using an external browser.\");\n      let r = new St({\n        provider: e,\n        withPrivyUi: !1,\n        disableSignup: a ?? !1\n      });\n      t && r.addCaptchaToken(t), $t({\n        status: \"loading\"\n      });\n      let n = await C.startAuthFlow(r).getAuthorizationUrl();\n      n?.url && window.location.assign(n.url);\n    },\n    async loginWithHeadlessOAuth(e) {\n      let t, a, r;\n      Pt(!0), $t({\n        status: \"loading\"\n      }), C.startAuthFlow(new St(e));\n      let n = Z.get(Q),\n        i = e.stateCode;\n      if (n !== i) throw C.createAnalyticsEvent({\n        eventName: \"possible_phishing_attempt\",\n        payload: {\n          provider: e.provider,\n          storedStateCode: n ?? \"\",\n          returnedStateCode: i ?? \"\"\n        }\n      }), Pt(!1), new Oe(\"Unexpected auth flow. This may be a phishing attempt.\", void 0, Re.OAUTH_UNEXPECTED);\n      if (null !== (await C.getAccessToken())) try {\n        ({\n          user: t,\n          oAuthTokens: r\n        } = await C.link()), Aa.current = e.provider;\n        let a = ar(t);\n        t && a && vt(ga, \"linkAccount\", \"onSuccess\", {\n          user: t,\n          linkMethod: Aa.current,\n          linkedAccount: a\n        });\n      } catch (t) {\n        throw Pt(!1), vt(ga, \"linkAccount\", \"onError\", t.privyErrorCode || Re.FAILED_TO_LINK_ACCOUNT, {\n          linkMethod: e.provider\n        }), t;\n      } else try {\n        ({\n          user: t,\n          isNewUser: a,\n          oAuthTokens: r\n        } = await C.authenticate()), Aa.current = e.provider;\n        let n = ar(t);\n        t && n && void 0 !== a && vt(ga, \"login\", \"onComplete\", {\n          user: t,\n          isNewUser: a,\n          wasAlreadyAuthenticated: !1,\n          loginMethod: Aa.current,\n          loginAccount: n\n        });\n      } catch (e) {\n        throw Pt(!1), $t({\n          status: \"error\",\n          error: e\n        }), vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR), e;\n      }\n      return ie(t), ht(a || !1), G(!0), Pt(!1), $t({\n        status: \"done\"\n      }), r && t && vt(ga, \"oAuthAuthorization\", \"onOAuthTokenGrant\", {\n        oAuthTokens: r,\n        user: t\n      }), t ?? void 0;\n    },\n    initLoginWithEmail: async ({\n      email: e,\n      captchaToken: t,\n      disableSignup: a,\n      withPrivyUi: r\n    }) => {\n      let n = new h({\n        email: e,\n        captchaToken: t,\n        disableSignup: a\n      });\n      C.startAuthFlow(n);\n      try {\n        Aa.current = \"email\", Vt({\n          status: \"sending-code\"\n        }), await n.sendCodeEmail({\n          withPrivyUi: r\n        }), Vt({\n          status: \"awaiting-code-input\"\n        });\n      } catch (e) {\n        throw Vt({\n          status: \"error\",\n          error: e\n        }), \"login\" === _a.current ? vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR) : \"link\" === _a.current && vt(ga, \"linkAccount\", \"onError\", e.privyErrorCode || Re.FAILED_TO_LINK_ACCOUNT, {\n          linkMethod: \"email\"\n        }), e;\n      }\n    },\n    initUpdateEmail: async (e, t, a) => {\n      let r = new u(e, t, a);\n      C.startAuthFlow(r);\n      try {\n        await r.sendCodeEmail({\n          withPrivyUi: !0\n        });\n      } catch (e) {\n        vt(ga, \"update\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR, {\n          linkMethod: Aa.current\n        });\n      }\n    },\n    initUpdatePhone: async (e, t, a) => {\n      let r = new f(e, t, a);\n      C.startAuthFlow(r);\n      try {\n        await r.sendSmsCode({\n          withPrivyUi: !0\n        });\n      } catch (e) {\n        vt(ga, \"update\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR, {\n          linkMethod: Aa.current\n        });\n      }\n    },\n    initLoginWithSms: async ({\n      phoneNumber: e,\n      captchaToken: t,\n      disableSignup: a,\n      withPrivyUi: r\n    }) => {\n      Kt({\n        status: \"sending-code\"\n      });\n      let n = new E({\n        phoneNumber: e,\n        captchaToken: t,\n        disableSignup: a\n      });\n      C.startAuthFlow(n);\n      try {\n        Aa.current = \"sms\", await n.sendSmsCode({\n          withPrivyUi: r\n        }), Kt({\n          status: \"awaiting-code-input\"\n        });\n      } catch (e) {\n        throw Kt({\n          status: \"error\",\n          error: e\n        }), \"login\" === _a.current ? vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR) : \"link\" === _a.current && vt(ga, \"linkAccount\", \"onError\", e.privyErrorCode || Re.FAILED_TO_LINK_ACCOUNT, {\n          linkMethod: \"sms\"\n        }), e;\n      }\n    },\n    resendEmailCode: async () => {\n      await C.authFlow?.sendCodeEmail({\n        withPrivyUi: !0\n      });\n    },\n    resendSmsCode: async () => {\n      await C.authFlow?.sendSmsCode({\n        withPrivyUi: !0\n      });\n    },\n    loginWithCode: async e => {\n      let t, a;\n      function r(e) {\n        C.authFlow instanceof h ? Vt(e) : C.authFlow instanceof E && Kt(e);\n      }\n      if (r({\n        status: \"submitting-code\"\n      }), !B) {\n        let e = new De();\n        throw r({\n          status: \"error\",\n          error: e\n        }), e;\n      }\n      if (C.authFlow instanceof h) C.authFlow.meta.emailCode = e.trim();else {\n        if (!(C.authFlow instanceof E)) {\n          let e = new Oe(\"Must initialize a passwordless code flow first\");\n          throw r({\n            status: \"error\",\n            error: e\n          }), e;\n        }\n        C.authFlow.meta.smsCode = e.trim();\n      }\n      let n = await Va();\n      if (\"link\" === _a.current) try {\n        ({\n          user: t\n        } = await C.link());\n      } catch (e) {\n        throw r({\n          status: \"error\",\n          error: e\n        }), vt(ga, \"linkAccount\", \"onError\", e.privyErrorCode || Re.FAILED_TO_LINK_ACCOUNT, {\n          linkMethod: Aa.current\n        }), e;\n      } else if (\"update\" === _a.current) try {\n        ({\n          user: t\n        } = await C.link());\n      } catch (e) {\n        throw r({\n          status: \"error\",\n          error: e\n        }), vt(ga, \"update\", \"onError\", e.privyErrorCode || Re.FAILED_TO_UPDATE_ACCOUNT, {\n          linkMethod: Aa.current\n        }), e;\n      } else try {\n        ({\n          user: t,\n          isNewUser: a\n        } = await C.authenticate());\n      } catch (e) {\n        throw r({\n          status: \"error\",\n          error: e\n        }), vt(ga, \"login\", \"onError\", e.privyErrorCode || Re.UNKNOWN_AUTH_ERROR), e;\n      }\n      let i = t || re;\n      ie(i || null), ht(a || !1), G(!0), r({\n        status: \"done\"\n      });\n      let o = null;\n      return C.authFlow instanceof h ? o = i?.linkedAccounts.find(({\n        type: e\n      }) => \"email\" === e) || null : C.authFlow instanceof E && (o = i?.linkedAccounts.find(({\n        type: e\n      }) => \"phone\" === e) || null), {\n        user: i,\n        isNewUser: a || !1,\n        wasAlreadyAuthenticated: !!n,\n        linkedAccount: o\n      };\n    },\n    generateSiweMessage: async ({\n      address: e,\n      chainId: t,\n      captchaToken: a\n    }) => {\n      _a.current = \"link\", Aa.current = \"siwe\", Gt({\n        status: \"generating-message\"\n      });\n      let r = await C.generateSiweNonce({\n        address: e,\n        captchaToken: a\n      });\n      return Gt({\n        status: \"awaiting-signature\"\n      }), nt({\n        address: e,\n        chainId: t.replace(\"eip155:\", \"\"),\n        nonce: r\n      });\n    },\n    generateSiweMessageForSmartWallet: async ({\n      address: e,\n      chainId: t\n    }) => {\n      let a = await C.generateSiweNonce({\n        address: e\n      });\n      return nt({\n        address: e,\n        chainId: t.replace(\"eip155:\", \"\"),\n        nonce: a\n      });\n    },\n    linkSmartWallet: async ({\n      message: e,\n      signature: t,\n      smartWalletType: a\n    }) => {\n      let r;\n      r = await C.linkSmartWallet({\n        message: e,\n        signature: t,\n        smartWalletType: a\n      }), ie((r = (await sr.refreshSessionAndUser()) ?? r) || re || null);\n    },\n    linkWithSiwe: async ({\n      message: e,\n      signature: t,\n      chainId: a,\n      walletClientType: r,\n      connectorType: n\n    }) => {\n      let i;\n      Ka(\"siwe\");\n      let o = null;\n      try {\n        Gt({\n          status: \"submitting-signature\"\n        }), i = await C.linkWithSiwe({\n          message: e,\n          signature: t,\n          chainId: a,\n          walletClientType: r,\n          connectorType: n\n        }), i = (await sr.refreshSessionAndUser()) ?? i, Gt({\n          status: \"done\"\n        }), (o = ar(i) || null) && vt(ga, \"linkAccount\", \"onSuccess\", {\n          user: i,\n          linkMethod: \"siwe\",\n          linkedAccount: o\n        });\n      } catch (e) {\n        throw vt(ga, \"linkAccount\", \"onError\", e.privyErrorCode || Re.FAILED_TO_LINK_ACCOUNT, {\n          linkMethod: \"siwe\"\n        }), _a.current = null, Aa.current = null, Gt({\n          status: \"error\",\n          error: e\n        }), e;\n      }\n      let s = i || re;\n      return ie(s || null), _a.current = null, Aa.current = null, {\n        user: s,\n        linkedAccount: o\n      };\n    },\n    refreshSessionAndUser: async () => {\n      let e = await C.getAuthenticatedUser();\n      return G(!!e), ie(e), e;\n    },\n    walletProxy: Qt,\n    createAnalyticsEvent: ({\n      eventName: e,\n      payload: t,\n      timestamp: a\n    }) => C.createAnalyticsEvent({\n      eventName: e,\n      payload: t,\n      timestamp: a\n    }),\n    acceptTerms: async () => {\n      let e = await C.acceptTerms();\n      return ie(e), e;\n    },\n    getUsdTokenPrice: e => C.getUsdTokenPrice(e),\n    getUsdPriceForSol: () => C.getUsdPriceForSol(),\n    getSplTokenMetadata: e => C.getSplTokenMetadata(e),\n    recoverPrimaryWallet: async e => new Promise(async (t, a) => {\n      let r = U(e?.user ?? re) || S(e?.user ?? re) || N(e?.user ?? re);\n      r || t(!0);\n      let n = await Va();\n      if (!n || !Qt || !r) return void a(Error(\"Must have valid access token and Privy wallet to recover wallet\"));\n      aa(!0);\n      let {\n        entropyId: i,\n        entropyIdVerifier: o\n      } = I(r);\n      try {\n        await Qt.connect({\n          accessToken: n,\n          entropyId: i,\n          entropyIdVerifier: o\n        }), t(!0);\n      } catch (e) {\n        We(e) && \"privy\" === r.recoveryMethod ? (C.createAnalyticsEvent({\n          eventName: \"embedded_wallet_pinless_recovery_started\",\n          payload: {\n            walletAddress: r.address\n          }\n        }), (await Qt.recover({\n          entropyId: i,\n          entropyIdVerifier: o,\n          accessToken: n\n        })).entropyId || a(Error(\"Unable to recover wallet\")), C.createAnalyticsEvent({\n          eventName: \"embedded_wallet_recovery_completed\",\n          payload: {\n            walletAddress: r.address\n          }\n        }), t(!0)) : We(e) && \"privy\" !== r.recoveryMethod ? (na({\n          recoverWallet: {\n            entropyId: i,\n            entropyIdVerifier: o,\n            onFailure: a,\n            onSuccess: () => t(!0)\n          },\n          recoveryOAuthStatus: {\n            provider: r.recoveryMethod,\n            action: \"recover\"\n          }\n        }), Ca(Xe(r.recoveryMethod))) : a(e);\n      }\n    }),\n    embeddedSolanaWallets: Ee,\n    createEmbeddedSolanaWallet: async e => {\n      e && \"target\" in e && (e = void 0);\n      let t = await sr.refreshSessionAndUser();\n      if (!t) throw vt(ga, \"createWallet\", \"onError\", Re.MUST_BE_AUTHENTICATED), Error(\"User must be authenticated before creating a Privy wallet\");\n      return (async (e, t, a) => {\n        let r = O(e),\n          n = R(e),\n          i = a && \"createAdditional\" in a && a.createAdditional,\n          o = a && \"walletIndex\" in a ? a.walletIndex : void 0,\n          s = (L(e)?.walletIndex ?? -1) + 1;\n        if (n && !i && \"number\" != typeof o) throw vt(ga, \"createWallet\", \"onError\", Re.EMBEDDED_WALLET_ALREADY_EXISTS), Error(\"User already has an embedded wallet.\");\n        if (\"number\" == typeof o && o < 0) throw vt(ga, \"createWallet\", \"onError\", Re.EMBEDDED_WALLET_CREATE_ERROR), Error(`A negative walletIndex (${o}) is invalid.`);\n        let [l, c] = await Promise.all([sr.initializeWalletProxy(t), Va()]);\n        if (!l || !c) throw vt(ga, \"createWallet\", \"onError\", Re.UNKNOWN_EMBEDDED_WALLET_ERROR), Error(\"Failed to connect to wallet proxy\");\n        return await Qa({\n          user: e,\n          wp: l,\n          accessToken: c,\n          walletIndex: o ?? s,\n          ethereumWallet: r\n        });\n      })(t, 15e3, e);\n    },\n    exportSolanaWallet: e => new Promise(async (t, a) => {\n      if (!z || !re) return void a(Error(\"User must be authenticated before exporting their Privy wallet\"));\n      let r = e?.address ?? R(re)?.address;\n      if (!r) return void a(Error(\"User does not have an HD Solana wallet.\"));\n      let {\n        signingWallet: n,\n        rootWallet: i\n      } = M(re, r);\n      if (!n || !i) return void a(Error(\"Must have a Privy wallet before exporting\"));\n      if (aa(!0), !(await Va()) || !Qt) return void a(Error(\"Must have valid access token to enroll in MFA\"));\n      if (!Qt) return void a(Error(\"Must have a Privy wallet before exporting\"));\n      let {\n        entropyId: o,\n        entropyIdVerifier: s\n      } = I(i);\n      na({\n        connectWallet: {\n          entropyId: o,\n          entropyIdVerifier: s,\n          onCompleteNavigateTo: yt.EMBEDDED_WALLET_KEY_EXPORT_SCREEN,\n          onFailure: a,\n          shouldForceMFA: !0\n        },\n        keyExport: {\n          appId: v.appId,\n          appClientId: v.clientId,\n          origin: C.apiUrl,\n          walletToExport: n,\n          primaryWallet: i,\n          onSuccess: t,\n          onFailure: a\n        }\n      }), Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN);\n    }),\n    setReadyToTrue: e => {\n      H(!0), ia?.(e);\n    },\n    updateWallets: () => qa(),\n    fundWallet: async (e, t) => {\n      let a = yt.FUNDING_METHOD_SELECTION_SCREEN;\n      na({\n        funding: Ot({\n          address: e,\n          appConfig: Zt,\n          fundWalletConfig: t,\n          methodScreen: a\n        })\n      }), Ca(a);\n    },\n    openModal: Ca,\n    requestFarcasterSignerStatus: async e => {\n      let t = await Va(),\n        a = re?.linkedAccounts.find(e => \"wallet\" === e.type && \"privy\" === e.walletClientType);\n      if (!t) throw Error(\"Must have valid access token to connect with Farcaster\");\n      if (!Qt || !a) throw Error(\"Must have an embedded wallet to use Farcaster signers\");\n      if (!re?.farcaster?.fid) throw Error(\"Must have Farcaster account to use Farcaster signers\");\n      let r = await C.requestFarcasterSignerStatus(e);\n      return \"approved\" === r.status && ie((await C.getAuthenticatedUser()) || re || null), r;\n    },\n    connectCoinbaseSmartWallet: async () => {\n      Zt.externalWallets.coinbaseWallet.connectionOptions = \"smartWalletOnly\";\n      let e = C.connectors?.findWalletConnector(\"coinbase_wallet\", \"coinbase_smart_wallet\") || C.connectors?.findWalletConnector(\"coinbase_wallet\", \"coinbase_wallet\");\n      if (e) return e.updateConnectionPreference(\"smartWalletOnly\"), Oa(e);\n      await Ua(\"coinbase_wallet\", \"coinbase_smart_wallet\");\n    },\n    initiateAccountTransfer: async ({\n      nonce: e,\n      account: t,\n      accountType: a,\n      externalWalletMetadata: r,\n      telegramAuthResult: n,\n      telegramWebAppData: i,\n      farcasterEmbeddedAddress: o,\n      oAuthUserInfo: s\n    }) => {\n      let l = await C.sendAccountTransferRequest({\n        nonce: e,\n        account: t,\n        accountType: a,\n        externalWalletMetadata: r,\n        telegramAuthResult: n,\n        telegramWebAppData: i,\n        farcasterEmbeddedAddress: o,\n        oAuthUserInfo: s\n      });\n      return ie(l), l;\n    }\n  };\n  Fa = sr.recoverPrimaryWallet, xa = sr.recoverPrimaryWallet, ja = sr.solanaSignMessage;\n  let lr = s(() => ({\n      wallets: oe,\n      ready: ca && fa\n    }), [oe, ca, fa]),\n    cr = C.authFlow instanceof A,\n    dr = !Zt.headless && Zt.captchaEnabled && !z && (B || cr); /*#__PURE__*/\n  return e(Wt.Provider, {\n    value: or,\n    children: /*#__PURE__*/e(Ct.Provider, {\n      value: ga,\n      children: /*#__PURE__*/e(Nt.Provider, {\n        value: lr,\n        children: /*#__PURE__*/e(_t, {\n          ...Zt,\n          children: /*#__PURE__*/t(It.Provider, {\n            value: sr,\n            children: [/*#__PURE__*/e(mt, {\n              children: /*#__PURE__*/t(kt, {\n                data: ra,\n                setModalData: na,\n                setInitialScreen: Dt,\n                initialScreen: Rt,\n                authenticated: z,\n                open: x,\n                children: [v.children, dr && /*#__PURE__*/e(le, {\n                  delayedExecution: !1\n                }), /*#__PURE__*/e(ft, {\n                  theme: {\n                    ...(Zt.appearance.palette || {})\n                  }\n                }), !Zt.render.standalone && /*#__PURE__*/e(ce, {\n                  open: x\n                })]\n              })\n            }), ta && ea ? /*#__PURE__*/e(Te, {\n              appId: v.appId,\n              appClientId: v.clientId,\n              clientAnalyticsId: C.clientAnalyticsId,\n              origin: C.apiUrl,\n              mfaMethods: re?.mfaMethods,\n              mfaPromise: ma,\n              mfaSubmitPromise: ya,\n              onLoad: Jt,\n              onLoadFailed: () => null\n            }) : null, Zt.loginConfig.telegramAuthConfiguration && /*#__PURE__*/e(gt, {\n              $if: !0,\n              children: /*#__PURE__*/e(de, {\n                scriptHost: v.apiUrl || V,\n                botUsername: Zt.loginConfig.telegramAuthConfiguration.botName\n              })\n            })]\n          })\n        })\n      })\n    })\n  });\n};\nexport { ka as C, Ia as E, Xa as P, Oa as a, Sa as b, Va as c, Ha as d, Ka as e, za as f, Ba as g, Ga as h, qa as i, $a as j, Ya as k };","map":{"version":3,"names":["jsx","e","jsxs","t","createStore","a","useState","r","useRef","n","useEffect","i","useCallback","o","useMemo","s","isAndroid","l","getAddress","c","CustomJwtAccountFlow","d","UpdateEmailFlow","u","EmailFlow","h","FarcasterFlow","p","GuestFlow","w","PasskeyFlow","m","SiweFlow","y","SiwsFlow","g","UpdateSmsFlow","f","SmsFlow","E","TelegramAuthFlow","A","convertInitDataRawToTelegramWebAppData","_","detectCompletingTelegramFlow","T","v4","v","AccessToken","C","getEntropyDetailsFromAccount","I","convertUserResponseToUser","k","getPrivySolanaHDWallets","W","getImportedPrivySolanaWallet","N","getPrivyPrimaryWallet","U","getPrivyEthereumWallet","O","getPrivyEthereumHDWallets","b","getImportedPrivyEthereumWallet","S","getPrivySolanaWallet","R","getLatestPrivyEthereumWallet","D","getSolanaSigningAndRootWallet","M","getEthereumSigningAndRootWallet","P","getLatestPrivySolanaWallet","L","getEntropyDetailsFromUser","F","x","CONNECTORS_STATE_KEY","j","CONNECTIONS_HISTORY_KEY","B","DEFAULT_PRIVY_API_URL","V","DEFAULT_API_TIMEOUT_MS","H","CLIENT_ANALYTICS_ID_KEY","K","CUSTOMER_ACCESS_TOKEN_STORAGE_KEY","z","PRIVY_ACCESS_TOKEN_STORAGE_KEY","G","getGuestCredentialStorageKey","q","WALLET_PROXY_TIMEOUT","$","HEADLESS_OAUTH_KEY","Y","OAUTH_DISABLE_SIGNUP_KEY","X","STATE_CODE_KEY","Q","FORKED_TOKEN_STORAGE_KEY","J","Z","isLocalStorageAccessible","ee","generateTypedDataWithDomainType","te","toHex","ae","detectInjectedConnectors","re","formatChainIdToCAIP2","ne","CoinbaseWalletConnector","ie","EmbeddedWalletConnector","oe","isSupportedEthereumRpcMethod","se","Captcha","le","LoginModal","ce","TelegramLoginButton","de","PrivyAppConfigProvider","ue","useAppConfig","he","useIsServerConfigLoaded","pe","areWalletArraysEqual","we","PrivyProviderRpcError","me","isBaseConnectedEthereumWallet","ye","mobileWalletsConfig","ge","getWalletConfigForConnector","fe","isSolanaWalletConnector","Ee","isBaseConnectedSolanaWallet","Ae","WalletConnectV2WalletConnector","_e","EmbeddedWalletIframe","Te","isWalletDelegated","ve","getDelegatedWalletsData","Ce","getRootWalletDataForDelegation","Ie","getDelegatedWalletsForUser","ke","errorIndicatesRecoveryIsNeeded","We","signTransaction","Ne","sendTransaction","Ue","PrivyClientError","Oe","formatApiError","be","formatPrivyError","Se","PrivyErrorCode","Re","PrivyNotReadyError","De","PrivyConnectorError","Me","PrivyError","Pe","signSolanaTransaction","Le","sendSolanaTransaction","Fe","extractChainIdFromCAIP2","xe","USE_BROADCAST_CHANNEL_EVENT_TYPE","je","isPrivyTheOAuthProvider","Be","CROSS_APP_BROADCAST_CHANNEL_NAME","Ve","getCrossAppAuthorizationUrl","He","authenticateCrossAppAccount","Ke","getProviderAppMetadata","ze","popupCrossAppAuthFlow","Ge","sendCrossAppRequest","qe","getRecoveryAuthorizationUrl","$e","authenticateRecovery","Ye","embeddedWalletRecoveryScreen","Xe","toEmbeddedWalletSetRecoveryScreen","Qe","FUNDING_SCREENS","Je","fundingScreenMethodMap","Ze","isFundingEnabled","et","tt","triggerPopup","at","popupOAuthFlow","rt","prepareSiweMessageWithNonce","nt","hasSufficientFunds","it","createSolanaTransactionReceipt","ot","toDisplayFromAccountType","st","shouldCreateEmbeddedEthWallet","lt","shouldCreateEmbeddedSolWallet","ct","prepareTransactionRequest","dt","transformResponseToSnakeCase","ut","PrivyPluginProvider","ht","usePlugins","pt","SOLANA_FUNDING_PLUGIN_ID","wt","RecentlyUsedAccountProvider","mt","ModalScreen","yt","Hide","gt","GlobalStyle","ft","getPublicClient","Et","notImplemented","At","CaptchaProvider","_t","privyEventsDefault","Tt","emitPrivyEvent","vt","PrivyEventsContext","Ct","InternalPrivyContext","It","ModalProvider","kt","PrivyContext","Wt","UseWalletsContext","Nt","prepareSolanaFundingModalData","Ut","prepareFundingModalData","Ot","detectCompletingOAuthFlow","bt","OAuthFlow","St","toViemTransactionSerializable","Rt","getRpcTimeout","Dt","EmbeddedProviderError","Mt","isEthereumWalletConnector","Pt","EthereumNullConnector","Lt","LegacyInjectedWalletConnector","Ft","Injected6963WalletConnector","xt","MetamaskWalletConnector","jt","PrivyProxyProvider","Bt","SolanaNullConnector","Vt","loadConnectionHistory","Ht","Http","Kt","getPaymasterContext","zt","transformOptionsToCamelCase","Gt","mfaPasswordlessSmsInitPath","qt","mfaPasskeyInitPath","$t","acceptTermsPath","Yt","unlinkEmailPath","Xt","unlinkPhonePath","Qt","unlinkWalletPath","Jt","siwsUnlinkWalletPath","Zt","unlinkOAuthPath","ea","unlinkFarcasterPath","ta","telegramAccountUnlinkPath","aa","delegatedActionsRevokePath","ra","analyticsEventsPath","na","moonpayPluginOnRampPath","ia","coinbaseOnRampInitPath","oa","coinbaseOnRampStatusPath","sa","siweInitPath","la","siweAuthenticatePath","ca","siweLinkPath","da","smartWalletLinkPath","ua","siwsInitPath","ha","siwsAuthenticatePath","pa","transferOAuthPath","wa","telegramAccountTransferPath","ma","transferFarcasterPath","ya","transferWalletPath","ga","transferPhonePath","fa","transferEmailPath","Ea","siwsLinkPath","Aa","usersMePath","_a","transactionScanningPath","Ta","AccessTokenTypes","va","Session","Ca","Ia","handleSendTransaction","params","Array","isArray","method","Va","address","hash","Ga","handleSignTransaction","signature","za","handleSwitchEthereumChain","chainId","Number","publicClient","chains","rpcConfig","appId","emit","handlePersonalSign","Error","Ha","message","handleSignedTypedData","JSON","parse","Ka","handleEstimateGas","gasPrice","maxFeePerGas","maxPriorityFeePerGas","estimateGas","account","from","request","console","debug","qa","walletProxy","rpc","accessToken","entropyId","entropyIdVerifier","chainType","hdWalletIndex","walletIndex","response","data","error","constructor","rpcTimeoutDuration","ka","wallets","Set","walletConnectors","flatMap","sort","connectedAt","filter","walletClientType","connectorType","meta","id","has","add","findIndex","activeWallet","unshift","splice","initialize","initialized","removeAllConnectors","get","getKeys","forEach","startsWith","del","store","walletList","externalWalletConfig","walletChainType","then","type","eip6963InjectedProvider","legacyInjectedProvider","createEthereumWalletConnector","providers","includes","Object","values","isInstalled","client","chainTypes","walletConfig","addWalletConnector","name","icon","logoDataUri","walletConnect","enabled","solana","connectors","addSolanaWalletConnector","_setOnConnectorsUpdated","findWalletConnector","find","findSolanaWalletConnector","walletBranding","findEmbeddedWalletConnectors","onInitialized","storedConnections","saveConnectionHistory","onWalletsUpdated","addEmbeddedWalletConnectors","rootWallet","embeddedWallets","defaultChain","proxyProvider","provider","imported","addImportedWalletConnector","removeEmbeddedWalletConnectors","removeImportedWalletConnector","indexOf","resetConnection","privyAppName","privyAppLogo","walletConnectCloudProjectId","shouldEnforceDefaultChainOnConnect","privyAppId","push","on","catch","map","put","activeWalletSign","length","sign","setActiveWallet","setWalletList","removeAllListeners","getEthereumProvider","Wa","Na","Ua","Oa","initializeConnectorManager","appName","generateApi","appClientId","defaults","baseURL","apiUrl","timeout","session","api","updateApiUrl","fallbackApiUrl","useServerCookies","authenticate","authFlow","link","oAuthTokens","user","getAuthenticatedUser","storeProviderAccessToken","getProviderAccessToken","logout","destroy","clearProviderAcccessTokens","linkedAccounts","providerApp","startAuthFlow","initMfaSmsVerification","post","action","initMfaPasskeyVerification","options","getCrossAppProviderDetails","_cachedProviderAppDetails","acceptTerms","unlinkEmail","unlinkPhone","phoneNumber","unlinkEthereumWallet","unlinkSolanaWallet","unlinkOAuth","subject","unlinkFarcaster","fid","unlinkTelegram","telegram_user_id","revokeDelegatedWallet","createAnalyticsEvent","eventName","payload","timestamp","window","clientAnalyticsId","warn","event_name","client_id","clientTimestamp","toISOString","Date","retry","keepalive","keepAlive","signMoonpayOnRampUrl","initCoinbaseOnRamp","getCoinbaseOnRampStatus","partnerUserId","hasRefreshCredentials","hasRecoveryCredentials","refresh","getAccessToken","getPrivyAccessToken","getCustomerAccessToken","_getToken","CUSTOMER","PRIVY","getToken","hasActiveAccessToken","destroyLocalState","disableAutoRefresh","getSmartWalletsConfig","token","authorization","headers","smartWalletType","smart_wallet_type","configuredNetworks","configured_networks","chain_id","bundlerUrl","bundler_url","paymasterUrl","paymaster_url","paymasterContext","paymaster_context","getServerConfig","telegram_auth_config","botId","bot_id","botName","bot_name","linkEnabled","link_enabled","seamlessAuthEnabled","seamless_auth_enabled","funding_config","methods","defaultRecommendedAmount","default_recommended_amount","defaultRecommendedCurrency","default_recommended_currency","promptFundingOnWalletCreation","prompt_funding_on_wallet_creation","crossChainBridgingEnabled","cross_chain_bridging_enabled","verificationKey","verification_key","logoUrl","logo_url","accentColor","accent_color","showWalletLoginFirst","show_wallet_login_first","allowlistConfig","errorTitle","allowlist_config","error_title","errorDetail","error_detail","errorCtaText","cta_text","errorCtaLink","cta_link","walletAuth","wallet_auth","solanaWalletAuth","solana_wallet_auth","emailAuth","email_auth","smsAuth","sms_auth","googleOAuth","google_oauth","twitterOAuth","twitter_oauth","discordOAuth","discord_oauth","githubOAuth","github_oauth","spotifyOAuth","spotify_oauth","instagramOAuth","instagram_oauth","tiktokOAuth","tiktok_oauth","linkedinOAuth","linkedin_oauth","appleOAuth","apple_oauth","farcasterAuth","farcaster_auth","passkeyAuth","passkey_auth","passkeysForSignupEnabled","passkeys_for_signup_enabled","telegramAuth","telegram_auth","disablePlusEmails","disable_plus_emails","termsAndConditionsUrl","terms_and_conditions_url","embeddedWalletConfig","createOnLogin","embedded_wallet_config","create_on_login","userOwnedRecoveryOptions","user_owned_recovery_options","requireUserOwnedRecoveryOnCreate","require_user_owned_recovery_on_create","privacyPolicyUrl","privacy_policy_url","requireUsersAcceptTerms","require_users_accept_terms","customApiUrl","custom_api_url","wallet_connect_cloud_project_id","fiatOnRampEnabled","fiat_on_ramp_enabled","captchaEnabled","captcha_enabled","captchaSiteKey","captcha_site_key","createdAt","created_at","updatedAt","updated_at","mfaMethods","mfa_methods","enforceWalletUis","enforce_wallet_uis","legacyWalletUiConfig","legacy_wallet_ui_config","telegramAuthConfiguration","fundingConfig","getUsdTokenPrice","nativeCurrency","symbol","usd","getUsdPriceForSol","getSplTokenMetadata","mintAddress","cluster","requestFarcasterSignerStatus","ed25519_public_key","forkSession","generateSiweNonce","captchaToken","nonce","authenticateWithSiweInternal","mode","linkWithSiweInternal","linkSmartWallet","linkWithSiwe","generateSiwsNonce","authenticateWithSiwsInternal","sendAccountTransferRequest","accountType","externalWalletMetadata","telegramAuthResult","telegramWebAppData","farcasterEmbeddedAddress","oAuthUserInfo","email","farcaster_id","farcaster_embedded_address","telegram_auth_result","telegram_web_app_data","userInfo","linkWithSiwsInternal","linkWithSiws","updateUserAndIdToken","updateIdentityToken","identity_token","scanTransaction","defineProperty","value","ba","prototype","hasOwnProperty","call","TypeError","Sa","handleSignMessage","Ya","uiOptions","$a","Ra","Da","Ma","Pa","La","Fa","xa","ja","Ba","Promise","resolve","Xa","config","location","hostname","protocol","clientId","assign","clientConfig","children","Qa","status","connectedWallet","connectError","connector","connectRetry","customAuth","onStoreCustomerAccessToken","onDeleteCustomerAccessToken","showWalletUIs","current","setTimeout","initialScreen","ethereum","now","linked","fund","unlink","getProvider","signMessage","MUST_BE_AUTHENTICATED","sr","recoverPrimaryWallet","UNKNOWN_CONNECT_WALLET_ERROR","Buffer","toString","er","transaction","connection","transactionOptions","wallet","signOnly","tx","transactingWalletAddress","transactingWalletIndex","loginOrLink","disconnect","isConnected","getCustomAccessToken","isLoading","or","isNewUser","wasAlreadyAuthenticated","loginMethod","loginAccount","privyErrorCode","UNKNOWN_AUTH_ERROR","createSolana","ethereumAddress","refreshSessionAndUser","externalWallets","onMount","onUnmount","URLSearchParams","search","URL","href","searchParams","delete","history","pushState","appearance","clearTimeout","reduce","expected","legal","hasAcceptedTerms","setReadyToTrue","telegramAuthModalData","seamlessAuth","TELEGRAM_AUTH_SCREEN","some","join","inProgress","popupFlow","opener","origin","postMessage","authorizationCode","stateCode","BroadcastChannel","close","withPrivyUi","AWAITING_OAUTH_SCREEN","loginMethods","telegram","loginConfig","flowType","authData","connect","showPrompt","replace","switchChain","cause","GENERIC_CONNECT_WALLET_ERROR","LOGIN_FAILED_SCREEN","AWAITING_CONNECT_ONLY_CONNECTION","AWAITING_CONNECTION","linkMethod","captchaModalData","callback","userIntentRequired","onSuccessNavigateTo","onErrorNavigateTo","ERROR_SCREEN","CAPTCHA_SCREEN","fundWallet","loginMethodsAndOrder","primary","overflow","createAdditional","EMBEDDED_WALLET_ALREADY_EXISTS","all","initializeWalletProxy","UNKNOWN_EMBEDDED_WALLET_ERROR","create","solanaAddress","Ja","addWallet","createWallet","onSuccess","onFailure","callAuthOnSuccessOnClose","EMBEDDED_WALLET_ON_ACCOUNT_CREATE_SCREEN","EMBEDDED_WALLET_CREATE_ERROR","wp","ethereumWallet","Za","fundWalletConfig","requesterAppId","signingWallet","EMBEDDED_WALLET_NOT_FOUND","lr","UNSUPPORTED_CHAIN_ID","transactingWallet","transactionRequest","TRANSACTION_FAILURE","onCompleteNavigateTo","EMBEDDED_WALLET_SEND_TRANSACTION_SCREEN","appConfig","methodScreen","FUNDING_METHOD_SELECTION_SCREEN","chainIdOverride","comingFromSendTransactionScreen","connectWallet","onConfirm","funding","EMBEDDED_WALLET_CONNECTING_SCREEN","INSUFFICIENT_BALANCE","signedTransaction","receipt","EMBEDDED_WALLET_SEND_SOLANA_TRANSACTION_SCREEN","tr","verifyMfa","ar","latestVerifiedAt","getTime","rr","displayName","CANNOT_LINK_MORE_OF_TYPE","nr","showAutomaticRecovery","legacySetWalletPasswordFlow","MISSING_MFA_CREDENTIALS","USER_EXITED_SET_PASSWORD_FLOW","recoveryMethod","walletAction","availableRecoveryMethods","isResettingPassword","setWalletPassword","recoverWallet","shouldForceMFA","recoverySelection","isInAccountCreateFlow","ir","providerAppId","crossAppAuth","popup","onError","CROSS_APP_AUTH_SCREEN","ready","authenticated","externalConnectWallet","suggestedAddress","CONNECT_ONLY_AUTHENTICATED_SCREEN","CONNECT_ONLY_LANDING_SCREEN","linkWallet","LINK_WALLET_SCREEN","startCrossAppAuthFlow","linkEmail","LINK_EMAIL_SCREEN","linkPhone","LINK_PHONE_SCREEN","linkGoogle","initLoginWithOAuth","linkTwitter","linkDiscord","linkGithub","linkSpotify","linkInstagram","linkTiktok","linkLinkedIn","linkApple","linkPasskey","initLinkWithPasskey","LINK_PASSKEY_SCREEN","linkTelegram","launchParams","initDataRaw","INVALID_DATA","initLoginWithTelegram","linkFarcaster","initLoginWithFarcaster","AWAITING_FARCASTER_CONNECTION","updateEmail","UPDATE_EMAIL_SCREEN","updatePhone","phone","UPDATE_PHONE_SCREEN","login","bind","isGuest","LANDING","connectOrCreateWallet","CONNECT_OR_CREATE","clearMfa","userId","unlinkWallet","unlinkGoogle","unlinkTwitter","unlinkDiscord","unlinkGithub","unlinkSpotify","unlinkInstagram","unlinkTiktok","unlinkLinkedIn","unlinkApple","unlinkPasskey","passkeys","shouldUnenrollMfaOnUnlink","unlinkPasskeyAccount","credentialId","removeAsMfa","unlinkCrossAppAccount","setWalletRecovery","INVALID_MESSAGE","walletAddress","UNABLE_TO_SIGN","confirmAndSign","EMBEDDED_WALLET_SIGN_REQUEST_SCREEN","signTypedData","exportWallet","EMBEDDED_WALLET_KEY_EXPORT_SCREEN","keyExport","walletToExport","primaryWallet","promptMfa","init","submit","mfaMethod","mfaCode","relyingParty","reject","startAuthentication","cancel","initEnrollmentWithSms","initEnrollMfa","enrollInMfa","closePrivyModal","mfa","noPromptOnMfaRequired","mfaEnrollmentFlow","shouldUnlinkOnUnenrollMfa","MFA_ENROLLMENT_FLOW_SCREEN","initEnrollmentWithTotp","secret","authUrl","submitEnrollmentWithSms","submitEnrollMfa","code","submitEnrollmentWithTotp","initEnrollmentWithPasskey","submitEnrollmentWithPasskey","credentialIds","removeForLogin","unenroll","unenrollMfa","requestFarcasterSignerFromWarpcast","farcaster","initFarcasterSigner","farcasterSigner","AWAITING_FARCASTER_SIGNER","getFarcasterSignerPublicKey","signerPublicKey","slice","Uint8Array","match","parseInt","signFarcasterMessage","bufferToBase64URLString","BigInt","base64URLStringToBuffer","createGuestAccount","loginWithGuestAccountFlow","signMessageWithCrossAppWallet","smartWallets","reconnect","signTypedDataWithCrossAppWallet","sendTransactionWithCrossAppWallet","isModalOpen","setAuthenticated","setUser","isNewUserThisSession","pendingTransaction","walletConnectionStatus","solanaWallets","showFiatPrices","priceDisplay","customAuthStatus","hideWalletUIs","emailOtpState","setEmailOtpState","smsOtpState","setSmsOtpState","oAuthState","setOAuthState","telegramAuthState","setTelegramAuthState","siweState","setSiweState","isHeadlessOAuthLoading","nativeTokenSymbolForChainId","race","getAuthFlow","getAuthMeta","shouldCallAuthOnSuccess","isSuccess","USER_EXITED_AUTH_FLOW","linkedAccount","USER_EXITED_LINK_FLOW","updateMethod","updatedAccount","USER_EXITED_UPDATE_FLOW","errorModalData","previousScreen","getBalance","fundingMethod","balance","chain","solanaSignMessage","openPrivyModal","initLoginWithWallet","loginWithWallet","FAILED_TO_LINK_ACCOUNT","delegateWallet","showDelegationUIs","createDelegatedAction","delegatedWallets","delegatedActions","consent","onDelegate","EMBEDDED_WALLET_DELEGATED_ACTIONS_CONSENT_SCREEN","revokeDelegatedWallets","revoke","onRevoke","EMBEDDED_WALLET_DELEGATED_ACTIONS_REVOKE_SCREEN","initializeFarcasterConnect","loginWithFarcaster","crossAppAuthFlow","url","codeVerifier","storedStateCode","returnedStateCode","OAUTH_UNEXPECTED","IN_APP_BROWSER_LOGIN_NOT_POSSIBLE","navigator","userAgent","disableSignup","addCaptchaToken","getAuthorizationUrl","Telegram","Login","auth","request_access","loginWithTelegram","intent","recoveryOAuthFlow","ckWebAuthToken","recover","recoveryAccessToken","existingRecoveryMethod","targetRecoveryMethod","setRecovery","loginWithOAuth","passkeyAuthState","setPasskeyAuthState","initSignupWithPasskey","initRegisterFlow","signupWithPasskey","initLoginWithPasskey","initAuthenticationFlow","loginWithPasskey","allowedCredentialsIds","initLinkFlow","linkWithPasskey","initLoginWithHeadlessOAuth","loginWithHeadlessOAuth","initLoginWithEmail","sendCodeEmail","initUpdateEmail","initUpdatePhone","sendSmsCode","initLoginWithSms","resendEmailCode","resendSmsCode","loginWithCode","emailCode","trim","smsCode","FAILED_TO_UPDATE_ACCOUNT","generateSiweMessage","generateSiweMessageForSmartWallet","recoveryOAuthStatus","embeddedSolanaWallets","createEmbeddedSolanaWallet","exportSolanaWallet","updateWallets","openModal","connectCoinbaseSmartWallet","coinbaseWallet","connectionOptions","updateConnectionPreference","initiateAccountTransfer","cr","dr","headless","Provider","setModalData","setInitialScreen","open","delayedExecution","theme","palette","render","standalone","mfaPromise","mfaSubmitPromise","onLoad","onLoadFailed","$if","scriptHost","botUsername"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/privy-provider-clgy2QJN.mjs"],"sourcesContent":["import{jsx as e,jsxs as t}from\"react/jsx-runtime\";import{createStore as a}from\"mipd\";import{useState as r,useRef as n,useEffect as i,useCallback as o,useMemo as s}from\"react\";import{isAndroid as l}from\"react-device-detect\";import{getAddress as c}from\"viem/utils\";import{CustomJwtAccountFlow as d}from\"./auth-flows/custom-jwt-account.mjs\";import{UpdateEmailFlow as u,EmailFlow as h}from\"./auth-flows/email.mjs\";import{FarcasterFlow as p}from\"./auth-flows/farcaster.mjs\";import{GuestFlow as w}from\"./auth-flows/guest.mjs\";import{PasskeyFlow as m}from\"./auth-flows/passkey.mjs\";import{SiweFlow as y}from\"./auth-flows/siwe.mjs\";import{SiwsFlow as g}from\"./auth-flows/siws.mjs\";import{UpdateSmsFlow as f,SmsFlow as E}from\"./auth-flows/sms.mjs\";import{TelegramAuthFlow as A,convertInitDataRawToTelegramWebAppData as _,detectCompletingTelegramFlow as T}from\"./auth-flows/telegram.mjs\";import{v4 as v}from\"uuid\";import{AccessToken as C}from\"./accessToken.mjs\";import{getEntropyDetailsFromAccount as I,convertUserResponseToUser as k,getPrivySolanaHDWallets as W,getImportedPrivySolanaWallet as N,getPrivyPrimaryWallet as U,getPrivyEthereumWallet as O,getPrivyEthereumHDWallets as b,getImportedPrivyEthereumWallet as S,getPrivySolanaWallet as R,getLatestPrivyEthereumWallet as D,getSolanaSigningAndRootWallet as M,getEthereumSigningAndRootWallet as P,getLatestPrivySolanaWallet as L,getEntropyDetailsFromUser as F}from\"./client/user.mjs\";import x from\"eventemitter3\";import{CONNECTORS_STATE_KEY as j,CONNECTIONS_HISTORY_KEY as B,DEFAULT_PRIVY_API_URL as V,DEFAULT_API_TIMEOUT_MS as H,CLIENT_ANALYTICS_ID_KEY as K,CUSTOMER_ACCESS_TOKEN_STORAGE_KEY as z,PRIVY_ACCESS_TOKEN_STORAGE_KEY as G,getGuestCredentialStorageKey as q,WALLET_PROXY_TIMEOUT as $,HEADLESS_OAUTH_KEY as Y,OAUTH_DISABLE_SIGNUP_KEY as X,STATE_CODE_KEY as Q,FORKED_TOKEN_STORAGE_KEY as J}from\"./constants.mjs\";import Z,{isLocalStorageAccessible as ee}from\"./storage.mjs\";import{generateTypedDataWithDomainType as te,toHex as ae,detectInjectedConnectors as re,formatChainIdToCAIP2 as ne}from\"./utils/index.mjs\";import{CoinbaseWalletConnector as ie}from\"./connectors/coinbase.mjs\";import{EmbeddedWalletConnector as oe}from\"./connectors/embedded.mjs\";import{isSupportedEthereumRpcMethod as se}from\"./embedded-wallets/rpc/types.mjs\";import{Captcha as le}from\"./components/Captcha.mjs\";import{LoginModal as ce}from\"./components/LoginModal.mjs\";import{TelegramLoginButton as de}from\"./components/TelegramLoginButton.mjs\";import{PrivyAppConfigProvider as ue,useAppConfig as he,useIsServerConfigLoaded as pe}from\"./configuration/context.mjs\";import{areWalletArraysEqual as we}from\"./connectors/areWalletArraysEqual.mjs\";import{PrivyProviderRpcError as me}from\"./connectors/errors.mjs\";import{isBaseConnectedEthereumWallet as ye}from\"./connectors/isBaseConnectedEthereumWallet.mjs\";import{mobileWalletsConfig as ge,getWalletConfigForConnector as fe}from\"./connectors/mobile-wallets.mjs\";import{isSolanaWalletConnector as Ee,isBaseConnectedSolanaWallet as Ae}from\"./connectors/solana/index.mjs\";import{WalletConnectV2WalletConnector as _e}from\"./connectors/walletconnect-v2.mjs\";import{EmbeddedWalletIframe as Te}from\"./embedded-wallets/EmbeddedWalletIframe.mjs\";import{isWalletDelegated as ve,getDelegatedWalletsData as Ce,getRootWalletDataForDelegation as Ie,getDelegatedWalletsForUser as ke}from\"./embedded-wallets/delegated-actions.mjs\";import{errorIndicatesRecoveryIsNeeded as We}from\"./embedded-wallets/errors.mjs\";import{signTransaction as Ne,sendTransaction as Ue}from\"./embedded-wallets/rpc/index.mjs\";import{PrivyClientError as Oe,formatApiError as be,formatPrivyError as Se,PrivyErrorCode as Re,PrivyNotReadyError as De,PrivyConnectorError as Me,PrivyError as Pe}from\"./errors.mjs\";import{signSolanaTransaction as Le,sendSolanaTransaction as Fe}from\"./embedded-wallets/solana/transaction.mjs\";import{extractChainIdFromCAIP2 as xe}from\"./lib/caip2.mjs\";import{USE_BROADCAST_CHANNEL_EVENT_TYPE as je,isPrivyTheOAuthProvider as Be,CROSS_APP_BROADCAST_CHANNEL_NAME as Ve}from\"./lib/cross-app/index.mjs\";import{getCrossAppAuthorizationUrl as He,authenticateCrossAppAccount as Ke,getProviderAppMetadata as ze}from\"./lib/cross-app/authFlow.mjs\";import{popupCrossAppAuthFlow as Ge}from\"./lib/cross-app/popupCrossAppAuthFlow.mjs\";import{sendCrossAppRequest as qe}from\"./lib/cross-app/sendCrossAppRequest.mjs\";import{getRecoveryAuthorizationUrl as $e,authenticateRecovery as Ye,embeddedWalletRecoveryScreen as Xe,toEmbeddedWalletSetRecoveryScreen as Qe}from\"./lib/embeddedWalletRecovery.mjs\";import{FUNDING_SCREENS as Je,fundingScreenMethodMap as Ze}from\"./lib/funding/index.mjs\";import{isFundingEnabled as et}from\"./lib/funding/isFundingEnabled.mjs\";import tt from\"./lib/isEmbeddedWebview.mjs\";import{triggerPopup as at}from\"./lib/popup/triggerPopup.mjs\";import{popupOAuthFlow as rt}from\"./lib/popupOAuthFlow.mjs\";import{prepareSiweMessageWithNonce as nt}from\"./lib/siwe.mjs\";import{hasSufficientFunds as it,createSolanaTransactionReceipt as ot}from\"./lib/solana/transaction.mjs\";import{toDisplayFromAccountType as st}from\"./lib/toDisplayFromAccountType.mjs\";import{shouldCreateEmbeddedEthWallet as lt}from\"./lib/user/shouldCreateEmbeddedEthWallet.mjs\";import{shouldCreateEmbeddedSolWallet as ct}from\"./lib/user/shouldCreateEmbeddedSolWallet.mjs\";import{prepareTransactionRequest as dt}from\"./lib/viem/prepareTransactionRequest.mjs\";import{transformResponseToSnakeCase as ut}from\"./passkeys/transformResponseToSnakeCase.mjs\";import{PrivyPluginProvider as ht,usePlugins as pt}from\"./plugins/context/PrivyPluginContext.mjs\";import{SOLANA_FUNDING_PLUGIN_ID as wt}from\"./plugins/solana-funding/id.mjs\";import{RecentlyUsedAccountProvider as mt}from\"./recent-login/context.mjs\";import{ModalScreen as yt}from\"./screens/index.mjs\";import{Hide as gt}from\"./screens/LandingScreen/styles.mjs\";import{GlobalStyle as ft}from\"./styles.mjs\";import{getPublicClient as Et}from\"./utils/eth/getPublicClient.mjs\";import{notImplemented as At}from\"./hooks/index.mjs\";import{CaptchaProvider as _t}from\"./hooks/captcha-context.mjs\";import{privyEventsDefault as Tt,emitPrivyEvent as vt,PrivyEventsContext as Ct}from\"./hooks/events-context.mjs\";import{InternalPrivyContext as It}from\"./hooks/internal-context.mjs\";import{ModalProvider as kt}from\"./hooks/modal-context.mjs\";import{PrivyContext as Wt}from\"./hooks/privy-context.mjs\";import{UseWalletsContext as Nt}from\"./hooks/useWallets.mjs\";import{prepareSolanaFundingModalData as Ut,prepareFundingModalData as Ot}from\"./lib/funding/prepareFundingModalData.mjs\";import{detectCompletingOAuthFlow as bt}from\"./auth-flows/oauth/detectCompletingOAuthFlow.mjs\";import{OAuthFlow as St}from\"./auth-flows/oauth/OAuthFlow.mjs\";import{toViemTransactionSerializable as Rt}from\"./lib/viem/toViemTransactionSerializable.mjs\";import{getRpcTimeout as Dt}from\"./connectors/getRpcTimeout.mjs\";import{EmbeddedProviderError as Mt}from\"./connectors/providerTypes.mjs\";import{isEthereumWalletConnector as Pt}from\"./connectors/ethereum/index.mjs\";import{EthereumNullConnector as Lt}from\"./connectors/ethereum/EthereumNullConnector.mjs\";import{LegacyInjectedWalletConnector as Ft,Injected6963WalletConnector as xt}from\"./connectors/injected.mjs\";import{MetamaskWalletConnector as jt}from\"./connectors/metamask.mjs\";import{PrivyProxyProvider as Bt}from\"./connectors/privyProxyProvider.mjs\";import{SolanaNullConnector as Vt}from\"./connectors/solana/SolanaNullConnector.mjs\";import{loadConnectionHistory as Ht}from\"./connectors/stored-connection.mjs\";import{Http as Kt}from\"./http.mjs\";import{getPaymasterContext as zt}from\"./lib/smart-wallet-helpers.mjs\";import{transformOptionsToCamelCase as Gt}from\"./passkeys/transformOptionsToCamelCase.mjs\";import{mfaPasswordlessSmsInitPath as qt,mfaPasskeyInitPath as $t,acceptTermsPath as Yt,unlinkEmailPath as Xt,unlinkPhonePath as Qt,unlinkWalletPath as Jt,siwsUnlinkWalletPath as Zt,unlinkOAuthPath as ea,unlinkFarcasterPath as ta,telegramAccountUnlinkPath as aa,delegatedActionsRevokePath as ra,analyticsEventsPath as na,moonpayPluginOnRampPath as ia,coinbaseOnRampInitPath as oa,coinbaseOnRampStatusPath as sa,siweInitPath as la,siweAuthenticatePath as ca,siweLinkPath as da,smartWalletLinkPath as ua,siwsInitPath as ha,siwsAuthenticatePath as pa,transferOAuthPath as wa,telegramAccountTransferPath as ma,transferFarcasterPath as ya,transferWalletPath as ga,transferPhonePath as fa,transferEmailPath as Ea,siwsLinkPath as Aa,usersMePath as _a,transactionScanningPath as Ta}from\"./paths.mjs\";import{AccessTokenTypes as va,Session as Ca}from\"./session.mjs\";class Ia extends x{async handleSendTransaction(e){if(!e.params||!Array.isArray(e.params))throw new Mt(`Invalid params for ${e.method}`,4200);let t=e.params[0];if(!await Va()||!this.address)throw new Mt(\"Disconnected\",4900);let{hash:a}=await Ga(t,{address:this.address});return a}async handleSignTransaction(e){if(!e.params||!Array.isArray(e.params))throw new Mt(`Invalid params for ${e.method}`,4200);let t=e.params[0];if(!await Va()||!this.address)throw new Mt(\"Disconnected\",4900);let{signature:a}=await za(t,{address:this.address});return a}handleSwitchEthereumChain(e){let t;if(!e.params||!Array.isArray(e.params))throw new Mt(`Invalid params for ${e.method}`,4200);if(\"string\"==typeof e.params[0])t=e.params[0];else{if(!(\"chainId\"in e.params[0])||\"string\"!=typeof e.params[0].chainId)throw new Mt(`Invalid params for ${e.method}`,4200);t=e.params[0].chainId}this.chainId=Number(t),this.publicClient=Et(this.chainId,this.chains,this.rpcConfig,{appId:this.appId}),this.emit(\"chainChanged\",t)}async handlePersonalSign(e){if(!e.params||!Array.isArray(e.params))throw Error(\"Invalid params for personal_sign\");let t=e.params[0],a=e.params[1],{signature:r}=await Ha({message:t},{address:a});return r}async handleSignedTypedData(e){if(!e.params||!Array.isArray(e.params))throw Error(\"Invalid params for eth_signTypedData_v4\");let t=e.params[0],a=\"string\"==typeof e.params[1]?JSON.parse(e.params[1]):e.params[1],{signature:r}=await Ka(te(a),{address:t});return r}async handleEstimateGas(e){if(!e.params||!Array.isArray(e.params))throw Error(\"Invalid params for eth_estimateGas\");delete e.params[0].gasPrice,delete e.params[0].maxFeePerGas,delete e.params[0].maxPriorityFeePerGas;let t={...e.params[0],chainId:ae(this.chainId)};return await this.publicClient.estimateGas({account:t.from??this.address,...Rt(t)})}async request(e){switch(console.debug(\"Embedded1193Provider.request() called with args\",e),e.method){case\"eth_accounts\":case\"eth_requestAccounts\":return this.address?[this.address]:[];case\"eth_chainId\":return ae(this.chainId);case\"eth_estimateGas\":return this.handleEstimateGas(e);case\"eth_sendTransaction\":return this.handleSendTransaction(e);case\"eth_signTransaction\":return this.handleSignTransaction(e);case\"wallet_switchEthereumChain\":return this.handleSwitchEthereumChain(e);case\"personal_sign\":return this.handlePersonalSign(e);case\"eth_signTypedData_v4\":return this.handleSignedTypedData(e)}if(!se(e.method))return this.publicClient.request({method:e.method,params:e.params});{let t=await Va();if(await qa(),!t||!this.address)throw new Mt(\"Disconnected\",4900);try{return(await this.walletProxy.rpc({accessToken:t,entropyId:this.entropyId,entropyIdVerifier:this.entropyIdVerifier,chainType:\"ethereum\",hdWalletIndex:this.walletIndex,request:{method:e.method,params:e.params}})).response.data}catch(e){throw console.error(e),new Mt(\"Disconnected\",4900)}}}constructor({walletProxy:e,address:t,entropyId:a,entropyIdVerifier:r,rpcConfig:n,chains:i,appId:o,chainId:s=1,walletIndex:l}){super(),this.walletProxy=e,this.address=t,this.entropyId=a,this.entropyIdVerifier=r,this.chainId=s,this.rpcConfig=n,this.chains=i,this.publicClient=Et(s,this.chains,n,{appId:o}),this.rpcTimeoutDuration=Dt(n,\"privy\"),this.appId=o,this.walletIndex=l}}class ka extends x{get wallets(){let e=new Set,t=this.walletConnectors.flatMap((e=>e.wallets)).sort(((e,t)=>e.connectedAt&&t.connectedAt?t.connectedAt-e.connectedAt:0)).filter((t=>{let a=`${t.address}${t.walletClientType}${t.connectorType}${t.meta.id}`;return!e.has(a)&&(e.add(a),!0)})),a=t.findIndex((e=>e.address===(this.activeWallet?this.activeWallet:\"unknown\")));return a>=0&&t.unshift(t.splice(a,1)[0]),t}async initialize(e){if(this.initialized&&!e)return;e&&this.removeAllConnectors(),Z.get(j)&&(Z.getKeys().forEach((e=>{e.startsWith(\"walletconnect\")&&Z.del(e)})),Z.del(j));let t=re({store:this.store,walletList:this.walletList,externalWalletConfig:this.externalWalletConfig,walletChainType:this.walletChainType}).then((e=>{e.forEach((({type:e,eip6963InjectedProvider:t,legacyInjectedProvider:a})=>{this.createEthereumWalletConnector({connectorType:\"injected\",walletClientType:e,providers:{eip6963InjectedProvider:t,legacyInjectedProvider:a}})}))}));for(let e of(this.walletList.includes(\"coinbase_wallet\")&&this.createEthereumWalletConnector({connectorType:\"coinbase_wallet\",walletClientType:\"coinbase_wallet\"}),Object.values(ge)))!e.isInstalled&&this.walletList.includes(e.client)&&([\"ethereum-only\",\"ethereum-and-solana\"].includes(this.walletChainType)&&e.chainTypes.includes(\"ethereum\")&&this.createEthereumWalletConnector({connectorType:\"null\",walletClientType:e.client,walletConfig:e}),[\"ethereum-and-solana\",\"solana-only\"].includes(this.walletChainType)&&e.chainTypes.includes(\"solana\")&&this.addWalletConnector(new Vt({id:e.client,name:e.name,icon:e.logoDataUri})));this.externalWalletConfig.walletConnect.enabled&&this.createEthereumWalletConnector({connectorType:\"wallet_connect_v2\",walletClientType:\"unknown\"}),this.externalWalletConfig.solana.connectors?.get().forEach(this.addSolanaWalletConnector),this.externalWalletConfig.solana.connectors?._setOnConnectorsUpdated?.((e=>{e?.forEach(this.addSolanaWalletConnector)})),await t,this.initialized=!0}findWalletConnector(e,t){return\"wallet_connect_v2\"===e?this.walletConnectors.filter(Pt).find((t=>t.connectorType===e))??null:this.walletConnectors.filter(Pt).find((a=>a.connectorType===e&&a.walletClientType===t))??null}findSolanaWalletConnector(e,t){return this.walletConnectors.filter(Ee).find((a=>a.connectorType===e&&(\"unknown\"===a.walletClientType?a.walletBranding.id===t:a.walletClientType===t)))??null}findEmbeddedWalletConnectors(){return this.walletConnectors.filter((e=>\"embedded\"===e.connectorType))}onInitialized(e){e.wallets.forEach((e=>{let t=this.storedConnections.find((t=>t.address===e.address&&t.connectorType===e.connectorType&&(\"solana\"===e.type&&\"unknown\"===t.walletClientType&&\"unknown\"===e.walletClientType?e.meta.id===t.id:t.walletClientType===e.walletClientType)));t&&(e.connectedAt=t.connectedAt)})),this.saveConnectionHistory(),this.emit(\"walletsUpdated\"),this.emit(\"connectorInitialized\")}onWalletsUpdated(e){e.initialized&&(this.saveConnectionHistory(),this.emit(\"walletsUpdated\"))}addEmbeddedWalletConnectors({walletProxy:e,rootWallet:t,embeddedWallets:a,defaultChain:r,appId:n}){for(let i of a){let a=this.findEmbeddedWalletConnectors().find((e=>e.walletIndex===i.walletIndex));if(a&&Pt(a))a.proxyProvider.walletProxy=e;else{let{entropyId:a,entropyIdVerifier:o}=I(t),s=new oe({provider:new Ia({walletProxy:e,address:i.address,entropyId:a,entropyIdVerifier:o,rpcConfig:this.rpcConfig,chains:this.chains,appId:n,chainId:r.id,walletIndex:i.walletIndex}),chains:this.chains,defaultChain:r,rpcConfig:this.rpcConfig,imported:!1,walletIndex:i.walletIndex});this.addWalletConnector(s)}}}addImportedWalletConnector(e,t,a,r){let n=this.findWalletConnector(\"embedded_imported\",\"privy\");if(n&&Pt(n))n.proxyProvider.walletProxy=e;else{let n=new oe({provider:new Ia({walletProxy:e,address:t,entropyId:t,entropyIdVerifier:\"ethereum-address-verifier\",walletIndex:0,rpcConfig:this.rpcConfig,chains:this.chains,appId:r,chainId:a.id}),chains:this.chains,walletIndex:0,defaultChain:a,rpcConfig:this.rpcConfig,imported:!0});this.addWalletConnector(n)}}removeEmbeddedWalletConnectors(){this.walletConnectors=this.walletConnectors.filter((e=>\"embedded\"!==e.connectorType)),this.saveConnectionHistory(),this.storedConnections=Ht(),this.emit(\"walletsUpdated\")}removeImportedWalletConnector(){let e=this.findWalletConnector(\"embedded_imported\",\"privy\");if(e){let t=this.walletConnectors.indexOf(e);this.walletConnectors.splice(t,1),this.saveConnectionHistory(),this.storedConnections=Ht(),this.emit(\"walletsUpdated\")}}async createEthereumWalletConnector({connectorType:e,walletClientType:t,providers:a,walletConfig:r}){let n=this.findWalletConnector(e,t);if(n&&Pt(n))return n instanceof _e&&n.resetConnection(t),n;let i=(()=>\"injected\"!==e?\"coinbase_wallet\"===e?new ie(this.chains,this.defaultChain,this.rpcConfig,this.externalWalletConfig,this.privyAppName,this.privyAppLogo):\"null\"!==e?new _e(this.walletConnectCloudProjectId,this.rpcConfig,this.chains,this.defaultChain,this.shouldEnforceDefaultChainOnConnect,this.privyAppId,this.privyAppName,t):r?new Lt({id:r.client,name:r.name,icon:r.logoDataUri,defaultChain:this.defaultChain,walletClientType:r.client}):null:\"metamask\"===t&&a?.eip6963InjectedProvider?new jt(this.chains,this.defaultChain,this.rpcConfig,a?.eip6963InjectedProvider,\"metamask\"):\"metamask\"===t&&a?.legacyInjectedProvider?new Ft(this.chains,this.defaultChain,this.rpcConfig,a?.legacyInjectedProvider,\"metamask\"):\"phantom\"===t&&a?.legacyInjectedProvider?new Ft(this.chains,this.defaultChain,this.rpcConfig,a?.legacyInjectedProvider,\"phantom\"):a?.legacyInjectedProvider&&\"unknown_browser_extension\"===t?new Ft(this.chains,this.defaultChain,this.rpcConfig,a?.legacyInjectedProvider):a?.eip6963InjectedProvider?new xt(this.chains,this.defaultChain,this.rpcConfig,a?.eip6963InjectedProvider,t):void 0)();return i&&this.addWalletConnector(i),i||null}addWalletConnector(e){this.walletConnectors.push(e),e.on(\"initialized\",(()=>this.onInitialized(e))),e.on(\"walletsUpdated\",(()=>this.onWalletsUpdated(e))),e.initialize().catch((e=>{console.debug(\"Failed to initialize connector\",e)}))}saveConnectionHistory(){let e=this.wallets.map((e=>({address:e.address,connectorType:e.connectorType,walletClientType:e.walletClientType,connectedAt:e.connectedAt,id:e.meta.id})));Z.put(B,e)}async activeWalletSign(e){let t=this.wallets,a=t.length>0?t[0]:null;return a&&ye(a)?a.sign(e):null}setActiveWallet(e){this.activeWallet=c(e),this.emit(\"walletsUpdated\")}setWalletList(e){this.walletList=e,this.initialized&&this.initialize(!0).catch(console.error)}removeAllConnectors(){for(let e of this.walletConnectors)e.removeAllListeners();this.walletConnectors=[]}constructor(e,t,a,r,n,i,o,s,l,c,d,u){super(),this.addSolanaWalletConnector=async e=>{this.findSolanaWalletConnector(\"solana_adapter\",e.walletClientType)||this.addWalletConnector(e)},this.getEthereumProvider=()=>{let e=this.wallets[0],t=this.walletConnectors.find((t=>t.wallets.find((t=>t.address===e?.address))));return e&&t?t.proxyProvider:new Bt},this.privyAppId=e,this.walletConnectCloudProjectId=t,this.rpcConfig=a,this.chains=r,this.defaultChain=n,this.walletConnectors=[],this.initialized=!1,this.store=i,this.walletList=o,this.shouldEnforceDefaultChainOnConnect=s,this.externalWalletConfig=l,this.privyAppName=c,this.privyAppLogo=d,this.walletChainType=u||\"ethereum-only\",this.storedConnections=Ht()}}let Wa;var Na=0,Ua=\"__private_\"+Na+++\"__getOrGenerateClientAnalyticsId\";class Oa{initializeConnectorManager({walletConnectCloudProjectId:e,rpcConfig:t,chains:a,defaultChain:r,store:n,walletList:i,shouldEnforceDefaultChainOnConnect:o,externalWalletConfig:s,appName:l,walletChainType:c}){this.connectors||(this.connectors=new ka(this.appId,e,t,a,r,n,i,o,s,l,void 0,c))}generateApi(){let e=new Kt({appId:this.appId,appClientId:this.appClientId,client:this,defaults:{baseURL:this.apiUrl,timeout:this.timeout}});return this.session.api=e,e}updateApiUrl(e){this.apiUrl=e||this.fallbackApiUrl,this.api=this.generateApi(),e&&(this.useServerCookies=!0)}authenticate(){if(!this.authFlow)throw new Oe(\"No auth flow in progress.\");return this.session.authenticate(this.authFlow)}async link(){if(!this.authFlow)throw new Oe(\"No auth flow in progress.\");let{oAuthTokens:e}=await this.session.link(this.authFlow);return{user:await this.getAuthenticatedUser(),oAuthTokens:e}}storeProviderAccessToken(e,t){this.session.storeProviderAccessToken(e,t)}getProviderAccessToken(e){return this.session.getProviderAccessToken(e)}async logout(){await this.session.destroy(),this.authFlow=void 0}clearProviderAcccessTokens(e){e.linkedAccounts.filter((e=>\"cross_app\"===e.type)).forEach((e=>{this.storeProviderAccessToken(e.providerApp.id,null)}))}startAuthFlow(e){return e.api=this.api,this.authFlow=e,this.authFlow}async initMfaSmsVerification(){try{await this.api.post(qt,{action:\"verify\"})}catch(e){throw be(e)}}async initMfaPasskeyVerification(){try{let e=await this.api.post($t,{});return Gt(e.options)}catch(e){throw be(e)}}async getCrossAppProviderDetails(e){try{return this._cachedProviderAppDetails[e]||(this._cachedProviderAppDetails[e]=await this.api.get(`/api/v1/apps/${e}/cross-app/details`)),this._cachedProviderAppDetails[e]}catch(e){console.error(\"Error fetching cross app provider details\",e)}}async acceptTerms(){try{let e=await this.api.post(Yt,{});return k(e)}catch(e){throw Se(e)}}async unlinkEmail(e){try{let t=await this.api.post(Xt,{address:e});return await this.getAuthenticatedUser()??k(t)}catch(e){throw Se(e)}}async unlinkPhone(e){try{let t=await this.api.post(Qt,{phoneNumber:e});return await this.getAuthenticatedUser()??k(t)}catch(e){throw Se(e)}}async unlinkEthereumWallet(e){try{let t=await this.api.post(Jt,{address:e});return await this.getAuthenticatedUser()??k(t)}catch(e){throw Se(e)}}async unlinkSolanaWallet(e){try{let t=await this.api.post(Zt,{address:e});return await this.getAuthenticatedUser()??k(t)}catch(e){throw Se(e)}}async unlinkOAuth(e,t){try{let a=await this.api.post(ea,{provider:e,subject:t});return await this.getAuthenticatedUser()??k(a)}catch(e){throw Se(e)}}async unlinkFarcaster(e){try{let t=await this.api.post(ta,{fid:e});return await this.getAuthenticatedUser()??k(t)}catch(e){throw Se(e)}}async unlinkTelegram(e){try{let t=await this.api.post(aa,{telegram_user_id:e});return await this.getAuthenticatedUser()??k(t)}catch(e){throw Se(e)}}async revokeDelegatedWallet(){try{await this.api.post(ra,{})}catch(e){throw Se(e)}}async createAnalyticsEvent({eventName:e,payload:t,timestamp:a,options:r}){if(\"undefined\"!=typeof window)try{this.clientAnalyticsId||console.warn(\"No client analytics id set, refusing to send analytics event\"),await this.api.post(na,{event_name:e,client_id:this.clientAnalyticsId,payload:{...t||{},clientTimestamp:a?a.toISOString():(new Date).toISOString()}},{retry:-1,keepalive:r?.keepAlive??!1})}catch(e){}}async signMoonpayOnRampUrl(e){try{return this.api.post(ia,e)}catch(e){throw Se(e)}}async initCoinbaseOnRamp(e){try{return this.api.post(oa,e)}catch(e){throw Se(e)}}async getCoinbaseOnRampStatus({partnerUserId:e}){try{return this.api.get(`${sa}?partnerUserId=${e}`)}catch(e){throw Se(e)}}async getAuthenticatedUser(){return this.session.hasRefreshCredentials()||this.session.hasRecoveryCredentials()?this.session.refresh():null}async getAccessToken(e){return await this.getPrivyAccessToken(e)||await this.getCustomerAccessToken(e)}async getCustomerAccessToken(e){return await this._getToken(va.CUSTOMER,e)}async getPrivyAccessToken(e){return await this._getToken(va.PRIVY,e)}async _getToken(e,t){return this.session.getToken(e)?this.session.hasActiveAccessToken(e)?this.session.hasRefreshCredentials(e)?C.parse(this.session.getToken(e))?.appId!==this.appId?(await this.logout(),null):this.session.getToken(e):(this.session.destroyLocalState(),null):!t?.disableAutoRefresh&&this.session.hasRefreshCredentials(e)?(await this.session.refresh(),this.session.getToken(e)):null:null}async getSmartWalletsConfig(){try{let e={},t=this.session.token;t&&(e.authorization=`Bearer ${t}`);let a=await this.api.get(`/api/v1/apps/${this.appId}/smart_wallets`,{baseURL:this.fallbackApiUrl,headers:e});return a.enabled?{enabled:a.enabled,smartWalletType:a.smart_wallet_type,configuredNetworks:a.configured_networks.map((e=>({chainId:e.chain_id,bundlerUrl:e.bundler_url,paymasterUrl:e.paymaster_url,paymasterContext:zt(e.paymaster_url,e.paymaster_context)})))}:{enabled:a.enabled}}catch(e){throw Se(e)}}async getServerConfig(){try{let e={},t=this.session.token;t&&(e.authorization=`Bearer ${t}`);let a=await this.api.get(`/api/v1/apps/${this.appId}`,{baseURL:this.fallbackApiUrl,headers:e}),r=a.telegram_auth_config?{botId:a.telegram_auth_config.bot_id,botName:a.telegram_auth_config.bot_name,linkEnabled:a.telegram_auth_config.link_enabled,seamlessAuthEnabled:a.telegram_auth_config.seamless_auth_enabled}:void 0,n=a.funding_config?{methods:a.funding_config.methods,options:a.funding_config.options,defaultRecommendedAmount:a.funding_config.default_recommended_amount,defaultRecommendedCurrency:a.funding_config.default_recommended_currency,promptFundingOnWalletCreation:a.funding_config.prompt_funding_on_wallet_creation,crossChainBridgingEnabled:a.funding_config.cross_chain_bridging_enabled}:void 0;return{id:a.id,name:a.name,verificationKey:a.verification_key,logoUrl:a.logo_url||void 0,accentColor:a.accent_color||void 0,showWalletLoginFirst:a.show_wallet_login_first,allowlistConfig:{errorTitle:a.allowlist_config.error_title,errorDetail:a.allowlist_config.error_detail,errorCtaText:a.allowlist_config.cta_text,errorCtaLink:a.allowlist_config.cta_link},walletAuth:a.wallet_auth,solanaWalletAuth:a.solana_wallet_auth,emailAuth:a.email_auth,smsAuth:a.sms_auth,googleOAuth:a.google_oauth,twitterOAuth:a.twitter_oauth,discordOAuth:a.discord_oauth,githubOAuth:a.github_oauth,spotifyOAuth:a.spotify_oauth,instagramOAuth:a.instagram_oauth,tiktokOAuth:a.tiktok_oauth,linkedinOAuth:a.linkedin_oauth,appleOAuth:a.apple_oauth,farcasterAuth:a.farcaster_auth,passkeyAuth:a.passkey_auth,passkeysForSignupEnabled:a.passkeys_for_signup_enabled,telegramAuth:a.telegram_auth,disablePlusEmails:a.disable_plus_emails,termsAndConditionsUrl:a.terms_and_conditions_url,embeddedWalletConfig:{createOnLogin:a.embedded_wallet_config?.create_on_login,userOwnedRecoveryOptions:a.embedded_wallet_config.user_owned_recovery_options,requireUserOwnedRecoveryOnCreate:a.embedded_wallet_config.require_user_owned_recovery_on_create},privacyPolicyUrl:a.privacy_policy_url,requireUsersAcceptTerms:a.require_users_accept_terms,customApiUrl:a.custom_api_url,walletConnectCloudProjectId:a.wallet_connect_cloud_project_id,fiatOnRampEnabled:a.fiat_on_ramp_enabled,captchaEnabled:a.captcha_enabled,captchaSiteKey:a.captcha_site_key,createdAt:new Date(1e3*a.created_at),updatedAt:new Date(1e3*a.updated_at),mfaMethods:a.mfa_methods,enforceWalletUis:a.enforce_wallet_uis,legacyWalletUiConfig:a.legacy_wallet_ui_config,telegramAuthConfiguration:r,fundingConfig:n}}catch(e){throw Se(e)}}async getUsdTokenPrice(e){try{return(await this.api.get(`/api/v1/token_price?chainId=${e.id}&tokenSymbol=${e.nativeCurrency.symbol}`)).usd}catch(t){return void console.error(`Unable to fetch token price for chain with id ${e.id}`)}}async getUsdPriceForSol(){try{return(await this.api.get(\"/api/v1/token_price?chainId=0&tokenSymbol=SOL\")).usd}catch(e){return void console.error(\"Unable to fetch token price for SOL\")}}async getSplTokenMetadata({mintAddress:e,cluster:t}){try{return await this.api.get(`/api/v1/spl_token_info?mint_address=${e}&cluster=${t}`)}catch(a){return void console.error(`Unable to fetch token metadata for ${t}:${e}`)}}async requestFarcasterSignerStatus(e){try{return await this.api.post(\"/api/v1/farcaster/signer/status\",{ed25519_public_key:e})}catch(e){throw console.error(\"Unable to fetch Farcaster signer status\"),e}}async forkSession(){return await this.session.forkSession()}async generateSiweNonce({address:e,captchaToken:t}){try{return(await this.api.post(la,{address:e,token:t})).nonce}catch(e){throw Se(e)}}async authenticateWithSiweInternal({message:e,signature:t,chainId:a,walletClientType:r,connectorType:n,mode:i}){return await this.api.post(ca,{message:e,signature:t,chainId:a,walletClientType:r,connectorType:n,mode:i})}async linkWithSiweInternal({message:e,signature:t,chainId:a,walletClientType:r,connectorType:n}){return await this.api.post(da,{message:e,signature:t,chainId:a,walletClientType:r,connectorType:n})}async linkSmartWallet({message:e,signature:t,smartWalletType:a}){try{let r=await this.api.post(ua,{message:e,signature:t,smart_wallet_type:a});return k(r)}catch(e){throw Se(e)}}async linkWithSiwe({message:e,signature:t,chainId:a,walletClientType:r,connectorType:n}){try{let i=await this.linkWithSiweInternal({message:e,signature:t,chainId:a,walletClientType:r,connectorType:n});return k(i)}catch(e){throw Se(e)}}async generateSiwsNonce({address:e,captchaToken:t}){try{return(await this.api.post(ha,{address:e,token:t})).nonce}catch(e){throw Se(e)}}async authenticateWithSiwsInternal({message:e,signature:t,walletClientType:a,connectorType:r,mode:n}){return await this.api.post(pa,{message:e,signature:t,walletClientType:a,connectorType:r,mode:n})}async sendAccountTransferRequest({nonce:e,account:t,accountType:a,externalWalletMetadata:r,telegramAuthResult:n,telegramWebAppData:i,farcasterEmbeddedAddress:o,oAuthUserInfo:s}){try{let l,c;switch(a){case\"email\":l=Ea,c={nonce:e,email:t};break;case\"sms\":l=fa,c={nonce:e,phoneNumber:t};break;case\"siwe\":if(l=ga,!r)throw Error(\"Wallet parameters must be defined\");c={nonce:e,address:t,...r};break;case\"farcaster\":l=ya,c={nonce:e,farcaster_id:t,farcaster_embedded_address:o};break;case\"telegram\":l=ma,c={nonce:e,telegram_auth_result:n,telegram_web_app_data:i};break;case\"custom\":case\"guest\":case\"passkey\":throw Error(\"Invalid transfer account type\");default:l=wa,c={nonce:e,userInfo:s}}let d=await this.api.post(l,c);return await this.getAuthenticatedUser()??k(d)}catch(e){throw Se(e)}}async linkWithSiwsInternal({message:e,signature:t,walletClientType:a,connectorType:r}){return await this.api.post(Aa,{message:e,signature:t,walletClientType:a,connectorType:r})}async linkWithSiws({message:e,signature:t,walletClientType:a,connectorType:r}){try{let n=await this.linkWithSiwsInternal({message:e,signature:t,walletClientType:a,connectorType:r});return k(n)}catch(e){throw Se(e)}}async updateUserAndIdToken(){try{let e=await this.api.get(_a);return this.session.updateIdentityToken(e.identity_token),k(e.user)}catch(e){throw Se(e)}}async scanTransaction(e){try{return await this.api.post(Ta,e)}catch(e){throw Se(e)}}constructor({apiUrl:e=V,appId:t,appClientId:a,timeout:r=H}){Object.defineProperty(this,Ua,{value:ba}),this._cachedProviderAppDetails={},this.apiUrl=e,this.fallbackApiUrl=this.apiUrl,this.useServerCookies=e!==V&&e.startsWith(\"https://privy.\"),this.timeout=r,this.appId=t,this.appClientId=a,this.clientAnalyticsId=function(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw TypeError(\"attempted to use private field on non-instance\");return e}(this,Ua)[Ua](),Wa||(Wa=new Ca),this.session=Wa,this.api=this.generateApi(),this.session.client=this}}function ba(){if(\"undefined\"==typeof window)return null;try{let e=Z.get(K);if(\"string\"==typeof e&&e.length>0)return e}catch(e){}let e=v();try{return Z.put(K,e),e}catch(t){return e}}class Sa{async handleSignMessage(e){if(!e.params||\"string\"!=typeof e.params.message)throw Error(\"Message must be provided as a string for Solana signMessage RPC\");return await Ya({message:e.params.message,options:{address:this.address,uiOptions:{}}})}async request(e){if(console.debug(\"EmbeddedSolanaProvider.request() called with args\",e),!await Va())throw Error(\"User must be authenticated to use embedded Solana wallet\");if(!await $a())throw new Oe(\"Unable to connect to Solana embedded wallet\");if(\"signMessage\"===e.method)return await this.handleSignMessage(e);throw Error(\"Embedded Solana provider does not yet support this RPC method.\")}constructor(e,t){this.walletProxy=e,this.address=t}}let Ra,Da,Ma,Pa,La,Fa,xa,ja;function Ba(){return Ra?Ra.getCustomerAccessToken():Promise.resolve(Z.get(z)||null)}async function Va(){return Ra?Ra.getAccessToken():Promise.resolve(Z.get(G)||Z.get(z)||null)}const Ha=(e,t)=>Da(e,t),Ka=(e,t)=>Ma(e,t),za=(e,t)=>Pa(e,t),Ga=(e,t)=>La(e,t),qa=()=>Fa(),$a=()=>xa(),Ya=({message:e,address:t})=>ja({message:e,options:{address:t,uiOptions:{}}});const Xa=({config:t,...a})=>{var r;if(\"undefined\"!=typeof window&&0>[\"localhost\",\"127.0.0.1\"].indexOf(window.location.hostname)&&\"https:\"!==window.location.protocol)throw new Oe(\"Embedded wallet is only available over HTTPS\");if(\"string\"!=typeof(r=a.appId)||25!==r.length)throw new Oe(\"Cannot initialize the Privy provider with an invalid Privy app ID\");Ra||(Ra=new Oa({appId:a.appId,appClientId:a.clientId,apiUrl:a.apiUrl}));let n=Object.assign({},t);/*#__PURE__*/\nreturn e(ue,{client:Ra,clientConfig:n,children:/*#__PURE__*/e(ht,{children:/*#__PURE__*/e(Qa,{...a,client:Ra})})})};let Qa=v=>{let C=v.client,k=pt(),[x,j]=r(!1),[B,H]=r(!1),[z,G]=r(!1),[re,ie]=r(null),[oe,se]=r([]),[ue,ge]=r([]),[Ee,be]=r([]),[Se,ht]=r(!1),[Rt,Dt]=r(null),[Mt,Pt]=r(!1),[Lt,Ft]=r({status:\"disconnected\",connectedWallet:null,connectError:null,connector:null,connectRetry:At}),[xt,jt]=r({status:\"initial\"}),[Bt,Vt]=r({status:\"initial\"}),[Ht,Kt]=r({status:\"initial\"}),[zt,Gt]=r({status:\"initial\"}),[qt,$t]=r({status:\"initial\"}),[Yt,Xt]=r({status:\"initial\"}),[Qt,Jt]=r(null),Zt=he(),ea=pe(),[ta,aa]=r(!0),[ra,na]=r({}),[ia,oa]=r(null),[sa,la]=r(null),[ca,da]=r(!1),[ua,ha]=r(!1),[pa,wa]=r(Zt.customAuth?.enabled?{status:\"initial\"}:{status:\"not-enabled\"}),ma=n(null),ya=n(null),ga=n(Tt),[fa,Ea]=r(!1);C.onStoreCustomerAccessToken=e=>{e&&vt(ga,\"accessToken\",\"onAccessTokenGranted\",{accessToken:e})},C.onDeleteCustomerAccessToken=()=>{ie(null),G(!1),vt(ga,\"accessToken\",\"onAccessTokenRemoved\")};let Aa=n(null),_a=n(null),Ta=n(!1),va=({showWalletUIs:e})=>Ta.current?Ta.current:void 0!==e?!e:!Zt.embeddedWallets.showWalletUIs,Ca=e=>{Dt(e),setTimeout((()=>{j(!0)}),15),C.createAnalyticsEvent({eventName:\"modal_open\",payload:{initialScreen:e}})},Ia=e=>{(\"off\"!==Zt.embeddedWallets.ethereum.createOnLogin||\"off\"!==Zt.embeddedWallets.solana.createOnLogin)&&aa(!0),Ca(e)};i((()=>{let e=[...W(re),N(re)].filter((e=>!!e));Qt&&be(e.map((e=>({type:\"solana\",imported:e.imported,address:e.address,connectedAt:Date.now(),walletClientType:\"privy\",connectorType:\"embedded\",walletIndex:e.walletIndex??void 0,meta:{name:\"Privy Wallet\",icon:void 0,id:\"io.privy.solana.wallet\"},linked:!0,fund(){throw new Oe(\"'fund' is deprecated for Solana wallets - use 'fundWallet' instead\")},unlink:()=>{throw new Oe(\"Cannot unlink an embedded Solana wallet\")},getProvider:async()=>new Sa(Qt,e.address),async signMessage(t){let a=await Va();if(!a||!Qt)throw new Oe(\"Must have valid access token and Privy wallet to send transaction\",Re.MUST_BE_AUTHENTICATED);let r=e.imported?N(re):U(re);if(!r)throw new Oe(\"Attempting to sign a transaction without a root wallet\");let{entropyId:n,entropyIdVerifier:i}=I(r);if(!await sr.recoverPrimaryWallet().catch((()=>!1)))throw new Oe(\"Wallet couldn't be connected\",Re.UNKNOWN_CONNECT_WALLET_ERROR);if(!re)throw new Oe(\"Attempting to sign a transaction with no user initialized\");let{response:o}=await Qt.rpc({accessToken:a,entropyId:n,entropyIdVerifier:i,chainType:\"solana\",hdWalletIndex:e.walletIndex??0,request:{method:\"signMessage\",params:{message:Buffer.from(t).toString(\"base64\")}}});return Buffer.from(o.data.signature,\"base64\")},async sendTransaction(e,t,a){let{signature:r}=await er({transaction:e,connection:t,transactionOptions:a,wallet:this,signOnly:!1});return r},async signTransaction(t){let a=await Va();if(!a||!Qt)throw new Oe(\"Must have valid access token and Privy wallet to send transaction\",Re.MUST_BE_AUTHENTICATED);if(!await sr.recoverPrimaryWallet().catch((()=>!1)))throw new Oe(\"Wallet couldn't be connected\",Re.UNKNOWN_CONNECT_WALLET_ERROR);let r=e.imported?e:U(re);if(!r)throw new Oe(\"Attempting to sign a transaction without a root wallet\");let{entropyId:n,entropyIdVerifier:i}=I(r);return await Le({tx:t,accessToken:a,walletProxy:Qt,entropyId:n,entropyIdVerifier:i,transactingWalletAddress:e.address,transactingWalletIndex:e.walletIndex??0}),t},loginOrLink:async()=>{throw new Oe(\"Cannot login or link with an embedded Solana wallet\")},disconnect:()=>{},isConnected:async()=>!0}))))}),[Qt,re]),i((()=>{if(!re)return void C.connectors?.removeEmbeddedWalletConnectors();let e=O(re),t=b(re),a=S(re);e&&t.length||C.connectors?.removeEmbeddedWalletConnectors(),a||C.connectors?.removeImportedWalletConnector(),C.connectors?Qt?(e&&C.connectors.addEmbeddedWalletConnectors({walletProxy:Qt,rootWallet:e,embeddedWallets:t,defaultChain:Zt.defaultChain,appId:v.appId}),a&&C.connectors.addImportedWalletConnector(Qt,a.address,Zt.defaultChain,v.appId)):console.debug(\"Failed to add embedded wallet connector: Wallet proxy not initialized\"):console.debug(\"Failed to add embedded wallet connector: Client connectors not initialized\")}),[Qt,re]),i((()=>{Qt&&sa?.(Qt)}),[Qt]);let ka=n();i((()=>{(async()=>{if(!Zt.customAuth?.enabled)return void wa({status:\"not-enabled\"});aa(!0);let{getCustomAccessToken:e,isLoading:t}=Zt.customAuth;if(B&&!t&&\"loading\"!==pa.status){wa({status:\"loading\"});try{let t=await e();if(t===ka.current)return void wa({status:\"done\"});if(!t&&z)return ka.current=t,await or.logout(),wa({status:\"done\"}),void vt(ga,\"customAuth\",\"onUnauthenticated\");if(!t)return ka.current=t,void wa({status:\"done\"});C.startAuthFlow(new d(t));let{user:a,isNewUser:r}=await C.authenticate();if(!a)return await or.logout(),wa({status:\"error\",error:new Oe(\"Failed to sync with custom auth provider\")}),void vt(ga,\"customAuth\",\"onUnauthenticated\");void 0!==r&&vt(ga,\"login\",\"onComplete\",{user:a,isNewUser:r,wasAlreadyAuthenticated:!1,loginMethod:\"custom\",loginAccount:null}),ka.current=t,vt(ga,\"customAuth\",\"onAuthenticated\",{user:a}),wa({status:\"done\"}),ie(a||null),ht(r||!1),G(!0),ha(!0)}catch(e){if(console.warn(e),await or.logout(),vt(ga,\"customAuth\",\"onUnauthenticated\"),\"User already exists with provided custom JWT account.\"===e.message)return void wa({status:\"initial\"});vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR),wa({status:\"error\",error:e})}}})()}),[\"initial\"===pa.status,Zt.customAuth?.enabled,Zt.customAuth?.getCustomAccessToken,Zt.customAuth?.isLoading,B,z]),i((()=>{ua&&Qt&&re&&(async()=>{let e=lt(re,Zt.embeddedWallets.ethereum.createOnLogin),t=ct(re,Zt.embeddedWallets.solana.createOnLogin),a=await Va();if(a){if(e&&t){let e=await $a(re,$);return await Qt.createSolana({accessToken:a,ethereumAddress:e?.address}),void ha(!1)}if(t)return await Qt.createSolana({accessToken:a,ethereumAddress:O(re)?.address}),await sr.refreshSessionAndUser(),void ha(!1);if(e)return await $a(re,$),void ha(!1)}})().catch(console.error)}),[ua&&Qt&&re]),i((()=>{if(Zt.externalWallets.solana.connectors)return Zt.externalWallets.solana.connectors.onMount(),()=>Zt.externalWallets.solana.connectors?.onUnmount()}),[Zt.externalWallets.solana.connectors]),i((()=>{!B&&ea&&async function(){let e,t=Wa(),r=Na();(()=>{let e=new URLSearchParams(window.location.search).get(\"privy_token\");if(!e)return;Z.put(J,e);let t=new URL(window.location.href);t.searchParams.delete(\"privy_token\"),window.history.pushState({},\"\",t)})();let n=a();C.initializeConnectorManager({walletConnectCloudProjectId:Zt.walletConnectCloudProjectId,rpcConfig:Zt.rpcConfig,chains:Zt.chains,defaultChain:Zt.defaultChain,store:n,walletList:Zt.appearance.walletList,shouldEnforceDefaultChainOnConnect:Zt.shouldEnforceDefaultChainOnConnect,externalWalletConfig:Zt.externalWallets,appName:Zt.name??\"Privy\",walletChainType:Zt.appearance.walletChainType}),C.connectors?.on(\"connectorInitialized\",(()=>{e&&clearTimeout(e);let t=C.connectors.walletConnectors.length,a=C.connectors.walletConnectors.reduce(((e,t)=>e+(t.initialized?1:0)),0);a===t?Ea(!0):e=setTimeout((()=>{console.debug({message:\"Unable to initialize all expected connectors before timeout\",initialized:a,expected:t}),Ea(!0)}),1500)})),C.connectors?.initialize().then((()=>{Ha()}));let i=await C.getAuthenticatedUser(),o=!!i;Zt.legal.requireUsersAcceptTerms&&i&&!i.hasAcceptedTerms?(await C.logout(),sr.setReadyToTrue(!0),vt(ga,\"logout\",\"onSuccess\")):(Zt.customAuth?.enabled||(G(!!i),i&&vt(ga,\"login\",\"onComplete\",{user:i,isNewUser:!1,wasAlreadyAuthenticated:!0,loginMethod:null,loginAccount:null}),ie(i)),t?_a.current=o?\"link\":\"login\":r&&!o?(_a.current=\"login\",na({telegramAuthModalData:{seamlessAuth:!0}}),Ia(yt.TELEGRAM_AUTH_SCREEN)):sr.setReadyToTrue(!!i))}()}),[C,ia,B,ea]),i((()=>{if(B){if(!re||!re.linkedAccounts.find((e=>\"wallet\"===e.type&&\"privy\"===e.walletClientType)))return void da(!0);da([...oe,...Ee].some((e=>\"privy\"===e.walletClientType)))}}),[B,re,oe,Ee]),i((()=>{C.connectors?.setWalletList(Zt.appearance.walletList)}),[Zt.appearance.walletList.join()]);let Wa=()=>{let e=bt();return e.inProgress&&e.popupFlow?window.opener.location.origin!==window.location.origin?void window.opener.postMessage({type:\"PRIVY_OAUTH_ERROR\",error:\"Origins between parent and child windows do not match.\"}):\"error\"===e.authorizationCode?void window.opener.postMessage({type:\"PRIVY_OAUTH_ERROR\",error:\"Something went wrong. Try again.\"}):void window.opener.postMessage({type:\"PRIVY_OAUTH_RESPONSE\",stateCode:e.stateCode,authorizationCode:e.authorizationCode}):(e.inProgress&&Be(e.provider)&&!e.popupFlow&&(new BroadcastChannel(Ve).postMessage({type:\"PRIVY_OAUTH_RESPONSE\",stateCode:e.stateCode,authorizationCode:e.authorizationCode}),window.close()),!!e.inProgress&&!!e.withPrivyUi&&(C.startAuthFlow(new St(e)),Ia(yt.AWAITING_OAUTH_SCREEN),!0))},Na=()=>{let e=T();if(!e||!Zt.loginMethods.telegram||!Zt.loginConfig.telegramAuthConfiguration?.seamlessAuthEnabled)return;let t=new A;return C.startAuthFlow(t),\"login-url\"===e.flowType&&(t.meta.telegramWebAppData=void 0,t.meta.telegramAuthResult=e.authData),\"web-app\"===e.flowType&&(t.meta.telegramAuthResult=void 0,t.meta.telegramWebAppData=e.authData),!0},Ua=async(e,t,a,r)=>{if(\"solana_adapter\"!==e)Oa(await(C.connectors?.createEthereumWalletConnector({connectorType:e,walletClientType:t}))||null,t,a,r);else{let n=C.connectors?.findSolanaWalletConnector(e,t);if(!n)return;Oa(n,t,a,r)}};async function Oa(e,t,a,r){if(!e)return Ft({status:\"disconnected\",connectedWallet:null,connectError:new Me(\"Unable to connect to wallet.\"),connector:null,connectRetry:At}),r?.(null,a);Ft({status:\"disconnected\",connectedWallet:null,connectError:null,connector:e,connectRetry:At}),e instanceof _e&&t&&await e.resetConnection(t),Ft({connector:e,status:\"connecting\",connectedWallet:null,connectError:null,connectRetry:()=>Oa(e,t,a,r)});try{let t=await e.connect({showPrompt:!0});if((!t||ye(t))&&Zt.shouldEnforceDefaultChainOnConnect&&!Zt.chains.find((e=>e.id===Number(t?.chainId.replace(\"eip155:\",\"\"))))&&(\"wallet_connect_v2\"!==t?.connectorType||\"metamask\"!==t?.walletClientType)){Ft((t=>({...t,connector:e,status:\"switching_to_supported_chain\",connectedWallet:null,connectError:null,connectRetry:At})));try{await(t?.switchChain(Zt.defaultChain.id)),t&&(t.chainId=ne(ae(Zt.defaultChain.id)))}catch{console.warn(`Unable to switch to default chain: ${Zt.defaultChain.id}`)}}return Ft((e=>({...e,status:\"connected\",connectedWallet:t,connectError:null,connectRetry:At}))),t&&vt(ga,\"connectWallet\",\"onSuccess\",{wallet:t}),r?.(t,a)}catch(e){return e instanceof Pe?(console.warn(e.cause?e.cause:e.message),vt(ga,\"connectWallet\",\"onError\",e.privyErrorCode||Re.GENERIC_CONNECT_WALLET_ERROR)):(console.warn(e),vt(ga,\"connectWallet\",\"onError\",Re.UNKNOWN_CONNECT_WALLET_ERROR)),Ft((t=>({...t,status:\"disconnected\",connectedWallet:null,connectError:e}))),r?.(null,a)}}let ba=async(e,t,a)=>{if(null===e||!ye(e))return;let r=new y(e,C,t,a);C.startAuthFlow(r)},Ba=async(e,t,a)=>{if(null===e||!Ae(e))return;let r=new g(e,C,t,a);C.startAuthFlow(r)},Ha=()=>{let e=new URLSearchParams(window.location.search),t=e.get(\"privy_connector\"),a=e.get(\"privy_wallet_client\"),r=\"true\"===e.get(\"privy_connect_only\");if(!t||!a)return;let n=fe({connectorType:t,walletClientType:a});if(!n||!n.isInstalled)return Ia(yt.LOGIN_FAILED_SCREEN);if(!C.connectors)throw new Oe(\"Connector not initialized\");Ca(r?yt.AWAITING_CONNECT_ONLY_CONNECTION:yt.AWAITING_CONNECTION);let i=new URL(window.location.href);i.searchParams.delete(\"privy_connector\"),i.searchParams.delete(\"privy_wallet_client\"),i.searchParams.delete(\"privy_connect_only\"),window.history.pushState({},\"\",i),Ua(t,a,void 0,r?void 0:\"solana_adapter\"===t?Ba:ba)};i((()=>{B&&z&&null===re&&C.getAuthenticatedUser().then(ie)}),[B,z,re,C]);let Ka=e=>{if(!z)throw vt(ga,\"linkAccount\",\"onError\",Re.MUST_BE_AUTHENTICATED,{linkMethod:e}),new Oe(\"User must be authenticated before linking an account.\")},za=e=>{if(!z||!re)return!1;if(\"privy\"===e.walletClientType)return!0;for(let t of re.linkedAccounts)if(\"wallet\"===t.type&&t.address===e.address&&\"privy\"!==t.walletClientType)return!0;return!1},Ga=async e=>{let t;if(!C.connectors)throw new Oe(\"Connector not initialized\");t=\"ethereum\"===e.type?C.connectors.findWalletConnector(e.connectorType,e.walletClientType)||null:C.connectors.findSolanaWalletConnector(e.connectorType,e.walletClientType)||null,Ft((a=>({...a,connector:t,status:\"connected\",connectedWallet:e,connectError:null,connectRetry:At}))),Zt.captchaEnabled&&!z?(na({captchaModalData:{callback:t=>ye(e)?ba(e,t):Ba(e,t),userIntentRequired:!1,onSuccessNavigateTo:yt.AWAITING_CONNECTION,onErrorNavigateTo:yt.ERROR_SCREEN}}),Ia(yt.CAPTCHA_SCREEN)):(ye(e)?await ba(e):await Ba(e),Ia(yt.AWAITING_CONNECTION))},qa=()=>{se((e=>{let t=C.connectors?.wallets.filter(ye).map((e=>({...e,linked:za(e),loginOrLink:async()=>{if(!await e.isConnected())throw new Oe(\"Wallet is not connected\");if(\"embedded\"===e.connectorType&&\"privy\"===e.walletClientType)throw new Oe(\"Cannot link or login with embedded wallet\");Ga(e)},fund:async t=>{await sr.fundWallet(e.address,t)},unlink:async()=>{if(!z)throw new Oe(\"User is not authenticated.\");if(\"embedded\"===e.connectorType&&\"privy\"===e.walletClientType)throw new Oe(\"Cannot unlink an embedded wallet\");ie(await C.unlinkEthereumWallet(e.address))}})))||[];return we(e,t)?e:t})),ge((e=>{let t=(C.connectors?.wallets??[]).filter(Ae).map((e=>({...e,linked:za(e),loginOrLink:async()=>{if(!await e.isConnected())throw new Oe(\"Wallet is not connected\");if(\"embedded\"===e.connectorType&&\"privy\"===e.walletClientType)throw new Oe(\"Cannot link or login with embedded wallet\");Ga(e)},fund:async()=>{throw new Oe(\"'fund' is deprecated for Solana wallets - use 'fundWallet' instead\")},unlink:async()=>{if(!z)throw new Oe(\"User is not authenticated.\");if(\"embedded\"===e.connectorType&&\"privy\"===e.walletClientType)throw new Oe(\"Cannot unlink an embedded wallet\");ie(await C.unlinkSolanaWallet(e.address))}})));return we(e,t)?e:t}))};i((()=>{qa()}),[re?.linkedAccounts,z,B]),i((()=>{if(B){if(!C.connectors)throw new Oe(\"Connector not initialized\");qa(),C.connectors.on(\"walletsUpdated\",qa)}}),[B]),i((()=>{[...Zt.loginMethodsAndOrder?.primary??[],...Zt.loginMethodsAndOrder?.overflow??[]].filter((e=>e.startsWith(\"privy:\"))).forEach((e=>C.getCrossAppProviderDetails(e.replace(\"privy:\",\"\"))))}),[!!C]);let $a=async(e,t,a)=>{let r=O(e),n=R(e);if(a&&\"walletIndex\"in a&&\"number\"==typeof a.walletIndex)return Xa(e,t,a.walletIndex,r,n);let i=a&&\"createAdditional\"in a&&a.createAdditional;if(r&&!i)throw vt(ga,\"createWallet\",\"onError\",Re.EMBEDDED_WALLET_ALREADY_EXISTS),Error(\"User already has an embedded wallet.\");let[o,s]=await Promise.all([sr.initializeWalletProxy(t),Va()]);if(!o&&Zt.customAuth?.enabled)throw vt(ga,\"createWallet\",\"onError\",Re.UNKNOWN_EMBEDDED_WALLET_ERROR),Error(\"Failed to connect to wallet proxy\");if(!o||!s||Zt.embeddedWallets?.requireUserOwnedRecoveryOnCreate)return Ya();if(!r)return n&&await sr.recoverPrimaryWallet(),await o.create({accessToken:s,solanaAddress:n?.address}),Ja(0,\"ethereum\");{let t=(D(e)?.walletIndex??0)+1,{entropyId:a,entropyIdVerifier:r}=I(U(e));return await sr.recoverPrimaryWallet(),await o.addWallet({accessToken:s,entropyId:a,entropyIdVerifier:r,chainType:\"ethereum\",hdWalletIndex:t}),Ja(t,\"ethereum\")}},Ya=async()=>new Promise(((e,t)=>{aa(!0),na({createWallet:{onSuccess:t=>{vt(ga,\"createWallet\",\"onSuccess\",{wallet:t}),e(t)},onFailure:e=>{vt(ga,\"createWallet\",\"onError\",Re.UNKNOWN_EMBEDDED_WALLET_ERROR),t(e)},callAuthOnSuccessOnClose:!1}}),Ca(yt.EMBEDDED_WALLET_ON_ACCOUNT_CREATE_SCREEN)})),Xa=async(e,t,a,r,n)=>{if(a<0)throw vt(ga,\"createWallet\",\"onError\",Re.EMBEDDED_WALLET_CREATE_ERROR),Error(`A negative walletIndex (${a}) is invalid.`);let[i,o]=await Promise.all([sr.initializeWalletProxy(t),Va()]);if(!i&&Zt.customAuth?.enabled)throw vt(ga,\"createWallet\",\"onError\",Re.UNKNOWN_EMBEDDED_WALLET_ERROR),Error(\"Failed to connect to wallet proxy\");if(!i||!o||Zt.embeddedWallets?.requireUserOwnedRecoveryOnCreate){if(0==a)return Ya();throw vt(ga,\"createWallet\",\"onError\",Re.UNKNOWN_EMBEDDED_WALLET_ERROR),Error(\"Create wallet UI can only be displayed when walletIndex is 0.\")}if(0==a){if(r)return r;await i.create({accessToken:o,solanaAddress:n?.address})}else{if(!r)throw vt(ga,\"createWallet\",\"onError\",Re.EMBEDDED_WALLET_CREATE_ERROR),Error(\"A user must have a wallet at HD index 0 before creating a wallet at greater HD indices.\");let t=b(e).find((e=>e.walletIndex===a));if(t)return t;let{entropyId:n,entropyIdVerifier:s}=I(U(e));await sr.recoverPrimaryWallet(),await i.addWallet({accessToken:o,entropyId:n,entropyIdVerifier:s,chainType:\"ethereum\",hdWalletIndex:a})}return Ja(a,\"ethereum\")},Qa=async({user:e,wp:t,accessToken:a,walletIndex:r,ethereumWallet:n})=>{let i=W(e).find((e=>e.walletIndex===r));if(i)return i;if(0===r)n&&await sr.recoverPrimaryWallet(),await t.createSolana({accessToken:a,ethereumAddress:n?.address});else{let n=U(e);if(!n)throw vt(ga,\"createWallet\",\"onError\",Re.EMBEDDED_WALLET_CREATE_ERROR),Error(\"User must have a wallet at HD index 0 before creating a wallet at greater HD indices.\");let{entropyId:i,entropyIdVerifier:o}=I(n);await sr.recoverPrimaryWallet(),await t.addWallet({accessToken:a,entropyId:i,entropyIdVerifier:o,chainType:\"solana\",hdWalletIndex:r})}return Ja(r,\"solana\")},Ja=async(e,t)=>{let a=await sr.refreshSessionAndUser(),r=(\"ethereum\"===t?b(a):W(a)).find((t=>t.walletIndex===e));if(!r)throw vt(ga,\"createWallet\",\"onError\",Re.UNKNOWN_EMBEDDED_WALLET_ERROR),Error(\"Failed to create wallet\");return vt(ga,\"createWallet\",\"onSuccess\",{wallet:r}),r},Za=({transaction:e,uiOptions:t,fundWalletConfig:a,address:r,signOnly:n})=>new Promise((async(i,o)=>{let{requesterAppId:s}=t||{},l=n?\"signTransaction\":\"sendTransaction\";if(!z||!re)return vt(ga,l,\"onError\",Re.MUST_BE_AUTHENTICATED),void o(Error(\"User must be authenticated before signing with a Privy wallet\"));let d=r??O(re)?.address;if(!d)throw new Oe(\"User must have an embedded wallet to send a transaction.\");let{signingWallet:u,rootWallet:h}=P(re,d);if(!h||!u)return vt(ga,l,\"onError\",Re.EMBEDDED_WALLET_NOT_FOUND),void o(Error(\"Must have a Privy wallet before signing\"));aa(!0);let p=lr.wallets.find((e=>\"privy\"===e.walletClientType&&c(e.address)===c(u.address))),w=await(p?.getEthereumProvider());if(!p||!w)throw new Oe(`Cannot sendTransaction before embedded wallet ${u.address} is connected`);let m=e.chainId?Number(e.chainId):xe(p.chainId);(e=>{if(!Zt.chains.map((e=>e.id)).includes(e))throw new Me(`Chain ID ${e} is not supported. It must be added to the config.supportedChains property of the PrivyProvider.`,Re.UNSUPPORTED_CHAIN_ID)})(m);let y={...e,from:e.from??u.address,chainId:m},g=await Va();if(!g||!Qt)return vt(ga,l,\"onError\",Re.EMBEDDED_WALLET_NOT_FOUND),void o(Error(\"Must have valid access token and Privy wallet to send transaction\"));let f=Et(y.chainId,Zt.chains,Zt.rpcConfig,{appId:v.appId});if(va({showWalletUIs:t?.showWalletUIs}))(async()=>{try{if(!await sr.recoverPrimaryWallet())return vt(ga,l,\"onError\",Re.UNKNOWN_CONNECT_WALLET_ERROR),void o(Error(\"Unable to connect to wallet\"));let e=await dt(y,f,y.from),{entropyId:t,entropyIdVerifier:a}=I(h),r=n?await Ne({accessToken:g,entropyId:t,entropyIdVerifier:a,transactingWallet:u,walletProxy:Qt,transactionRequest:y,requesterAppId:s}):await Ue({accessToken:g,entropyId:t,entropyIdVerifier:a,transactingWallet:u,walletProxy:Qt,transactionRequest:e,publicClient:f,requesterAppId:s});n?vt(ga,\"signTransaction\",\"onSuccess\",{signature:r}):vt(ga,\"sendTransaction\",\"onSuccess\",{hash:r}),i({hash:r})}catch(e){vt(ga,l,\"onError\",Re.TRANSACTION_FAILURE),o(e)}})();else{let{entropyId:e,entropyIdVerifier:r}=I(h),c={entropyId:e,entropyIdVerifier:r,onCompleteNavigateTo:yt.EMBEDDED_WALLET_SEND_TRANSACTION_SCREEN,onFailure:e=>{vt(ga,l,\"onError\",Re.UNKNOWN_CONNECT_WALLET_ERROR),o(e)}},d=et(Zt)?Ot({address:u.address,appConfig:Zt,fundWalletConfig:a,methodScreen:yt.FUNDING_METHOD_SELECTION_SCREEN,chainIdOverride:y.chainId,comingFromSendTransactionScreen:!0}):void 0;na({connectWallet:c,sendTransaction:{transactionRequest:y,transactingWallet:u,entropyId:e,entropyIdVerifier:r,signOnly:n,onConfirm:n?async()=>await Ne({accessToken:g,entropyId:e,entropyIdVerifier:r,transactingWallet:u,walletProxy:Qt,transactionRequest:y,requesterAppId:s}):void 0,onSuccess:e=>{n?vt(ga,\"signTransaction\",\"onSuccess\",{signature:e.hash}):vt(ga,\"sendTransaction\",\"onSuccess\",{hash:e.hash}),i(e)},onFailure:e=>{vt(ga,l,\"onError\",Re.TRANSACTION_FAILURE),o(e)},uiOptions:t||{},fundWalletConfig:a,requesterAppId:s},funding:d}),Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN)}})),er=({transaction:e,connection:t,transactionOptions:a,fundWalletConfig:r,uiOptions:n,wallet:i,signOnly:o})=>new Promise((async(s,l)=>{let{requesterAppId:c}=n||{},d=o?\"signSolanaTransaction\":\"sendSolanaTransaction\";if(!z||!re)return vt(ga,d,\"onError\",Re.MUST_BE_AUTHENTICATED),void l(new Oe(\"User must be authenticated before signing with a Privy wallet\",Re.MUST_BE_AUTHENTICATED));let u=i?re.linkedAccounts.find((e=>\"wallet\"===e.type&&e.address===i.address)):R(re);if(!u)return vt(ga,d,\"onError\",Re.EMBEDDED_WALLET_NOT_FOUND),void l(new Oe(\"Must have a Privy wallet before signing\",Re.EMBEDDED_WALLET_NOT_FOUND));aa(!0);let{rootWallet:h}=M(re,u.address);if(!await sr.recoverPrimaryWallet().catch((()=>!1))||!h)throw vt(ga,d,\"onError\",Re.EMBEDDED_WALLET_NOT_FOUND),new Oe(`Cannot sendSolanaTransaction before embedded wallet ${u.address} is connected`,Re.EMBEDDED_WALLET_NOT_FOUND);if(va({showWalletUIs:n?.showWalletUIs}))(async()=>{let r=await Va();if(!r||!Qt)return vt(ga,d,\"onError\",Re.EMBEDDED_WALLET_NOT_FOUND),void l(new Oe(\"Must have valid access token and Privy wallet to send transaction\",Re.EMBEDDED_WALLET_NOT_FOUND));try{let i;if(!await sr.recoverPrimaryWallet())return vt(ga,d,\"onError\",Re.UNKNOWN_CONNECT_WALLET_ERROR),void l(new Oe(\"Unable to connect to wallet\",Re.UNKNOWN_CONNECT_WALLET_ERROR));if(va({showWalletUIs:n?.showWalletUIs}))try{if(!await it(e,t))return vt(ga,d,\"onError\",Re.INSUFFICIENT_BALANCE),void l(new Oe(\"Solana wallet has insufficient funds for this transaction.\",Re.INSUFFICIENT_BALANCE))}catch(e){return console.error(e),vt(ga,d,\"onError\",Re.TRANSACTION_FAILURE),void l(new Oe(e instanceof Error?e.message:\"Transaction failed.\",Re.TRANSACTION_FAILURE))}let{entropyId:c,entropyIdVerifier:h}=F(re);if(o)await Le({accessToken:r,tx:e,walletProxy:Qt,entropyId:c,entropyIdVerifier:h,transactingWalletAddress:u.address,transactingWalletIndex:u.walletIndex??0}),i=ot(\"\",e,null),vt(ga,\"signSolanaTransaction\",\"onSuccess\",{signedTransaction:e});else{let{signature:n,receipt:o}=await Fe({accessToken:r,tx:e,connection:t,walletProxy:Qt,transactionOptions:a,entropyId:c,entropyIdVerifier:h,transactingWalletAddress:u.address,transactingWalletIndex:u.walletIndex??0});i=ot(n,e,o),vt(ga,\"sendSolanaTransaction\",\"onSuccess\",{response:i})}s(i)}catch(e){vt(ga,d,\"onError\",Re.TRANSACTION_FAILURE),l(e)}})();else{let{entropyId:i,entropyIdVerifier:p}=I(h),w={entropyId:i,entropyIdVerifier:p,onCompleteNavigateTo:yt.EMBEDDED_WALLET_SEND_SOLANA_TRANSACTION_SCREEN,onFailure:e=>{vt(ga,d,\"onError\",Re.UNKNOWN_CONNECT_WALLET_ERROR),l(e)}},m=et(Zt)?Ut({address:u.address,appConfig:Zt,methodScreen:yt.FUNDING_METHOD_SELECTION_SCREEN,fundWalletConfig:r,comingFromSendTransactionScreen:!0}):void 0;na({connectWallet:w,sendSolanaTransaction:{transactionRequest:e,connection:t,transactionOptions:a,transactingWallet:u,onSuccess:e=>{o?vt(ga,\"signSolanaTransaction\",\"onSuccess\",{signedTransaction:e.signedTransaction}):vt(ga,\"sendSolanaTransaction\",\"onSuccess\",{response:e}),s(e)},onFailure:e=>{vt(ga,d,\"onError\",Re.TRANSACTION_FAILURE),l(e)},uiOptions:n||{},requesterAppId:c,signOnly:o},funding:m}),Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN)}}));function tr(){return new Promise((async(e,t)=>{let a=await Va();if(!a||!Qt)throw Error(\"Must have valid access token to enroll in MFA\");try{await Qt.verifyMfa({accessToken:a}),e()}catch(e){t(e)}}))}let ar=e=>e?.linkedAccounts.filter((e=>null!==e.latestVerifiedAt&&!(\"wallet\"===e.type&&\"privy\"===e.walletClientType))).sort(((e,t)=>t.latestVerifiedAt.getTime()-e.latestVerifiedAt.getTime()))[0],rr=e=>{let t=re?.linkedAccounts.filter((t=>t.type===e)).length??0,{displayName:a,loginMethod:r}=st(e);if(\"passkey\"===e&&t>=5||\"passkey\"!==e&&t>=1)throw vt(ga,\"linkAccount\",\"onError\",Re.CANNOT_LINK_MORE_OF_TYPE,{linkMethod:r}),new Oe(`User already has an account of type ${a} linked.`)};async function nr({showAutomaticRecovery:e=!1,legacySetWalletPasswordFlow:t=!1}){Dt(null);let a=t?\"setWalletPassword\":\"setWalletRecovery\";if(!z||!re)throw vt(ga,a,\"onError\",Re.MUST_BE_AUTHENTICATED),Error(\"User must be authenticated before adding recovery method to Privy wallet\");let r=U(re);if(!r||!Qt)throw vt(ga,a,\"onError\",Re.EMBEDDED_WALLET_NOT_FOUND),Error(\"Must have a Privy wallet to add a recovery method\");try{await tr()}catch(e){throw vt(ga,a,\"onError\",Re.MISSING_MFA_CREDENTIALS),e}return new Promise(((n,i)=>{aa(!0);let o={onSuccess:e=>{vt(ga,a,\"onSuccess\",{method:\"user-passcode\",wallet:e}),n(e)},onFailure:e=>{vt(ga,a,\"onError\",Re.USER_EXITED_SET_PASSWORD_FLOW),i(e)},callAuthOnSuccessOnClose:!1},s=\"user-passcode\"===r.recoveryMethod,l=Qe({walletAction:\"update\",availableRecoveryMethods:Zt.embeddedWallets.userOwnedRecoveryOptions,legacySetWalletPasswordFlow:t,isResettingPassword:s,showAutomaticRecovery:e}),{entropyId:c,entropyIdVerifier:d}=I(r);na({setWalletPassword:o,recoverWallet:{entropyId:c,entropyIdVerifier:d,onFailure:i},createWallet:o,connectWallet:{onCompleteNavigateTo:l,shouldForceMFA:!1,entropyId:c,entropyIdVerifier:d,onFailure:e=>{vt(ga,a,\"onError\",Re.UNKNOWN_CONNECT_WALLET_ERROR),i(e)}},recoverySelection:{isInAccountCreateFlow:!1,isResettingPassword:s}}),Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN)}))}async function ir({appId:e,action:t}){let a=await Va();if(\"link\"===t&&!a)throw vt(ga,\"linkAccount\",\"onError\",Re.MUST_BE_AUTHENTICATED,{linkMethod:`privy:${e}`}),new Oe(\"User must be authenticated before linking an account.\");if(\"login\"===t&&a)throw vt(ga,\"login\",\"onError\",Re.UNKNOWN_AUTH_ERROR),new Oe(\"Attempted to log in, but user is already logged in. Use a `link` helper instead.\");Aa.current=`privy:${e}`,_a.current=t;let r=at();return C.createAnalyticsEvent({eventName:\"cross_app_auth_started\",payload:{providerAppId:e}}),new Promise((async(a,n)=>{let{name:i,logoUrl:o}=await ze({api:C.api,providerAppId:e,requesterAppId:Zt.id});na({crossAppAuth:{appId:e,name:i,logoUrl:o,action:t,popup:r,onSuccess:a,onError:n}}),Ia(yt.CROSS_APP_AUTH_SCREEN)}))}let or={ready:B,authenticated:z,user:re,walletConnectors:C.connectors||null,connectWallet:e=>{e&&\"target\"in e&&e&&(e=void 0),na({externalConnectWallet:{walletList:e?.walletList&&e?.walletList.length>0?e.walletList:void 0,suggestedAddress:e?.suggestedAddress,walletChainType:e?.walletChainType}}),Ca(z?yt.CONNECT_ONLY_AUTHENTICATED_SCREEN:yt.CONNECT_ONLY_LANDING_SCREEN)},linkWallet:e=>{e&&\"target\"in e&&e&&(e=void 0),Ka(\"siwe\"),Aa.current=\"siwe\",_a.current=\"link\",na({...ra,externalConnectWallet:{...ra.externalConnectWallet,suggestedAddress:e?.suggestedAddress,walletList:e?.walletList,walletChainType:e?.walletChainType}}),Ca(yt.LINK_WALLET_SCREEN)},startCrossAppAuthFlow:ir,linkEmail:()=>{Ka(\"email\"),rr(\"email\"),Aa.current=\"email\",_a.current=\"link\",Ca(yt.LINK_EMAIL_SCREEN)},linkPhone:()=>{Ka(\"sms\"),rr(\"phone\"),Aa.current=\"sms\",_a.current=\"link\",Ca(yt.LINK_PHONE_SCREEN)},linkGoogle:async()=>{Ka(\"google\"),rr(\"google_oauth\"),_a.current=\"link\",await sr.initLoginWithOAuth(\"google\")},linkTwitter:async()=>{Ka(\"twitter\"),rr(\"twitter_oauth\"),_a.current=\"link\",await sr.initLoginWithOAuth(\"twitter\")},linkDiscord:async()=>{Ka(\"discord\"),rr(\"discord_oauth\"),_a.current=\"link\",await sr.initLoginWithOAuth(\"discord\")},linkGithub:async()=>{Ka(\"github\"),rr(\"github_oauth\"),_a.current=\"link\",await sr.initLoginWithOAuth(\"github\")},linkSpotify:async()=>{Ka(\"spotify\"),rr(\"spotify_oauth\"),_a.current=\"link\",await sr.initLoginWithOAuth(\"spotify\")},linkInstagram:async()=>{Ka(\"instagram\"),rr(\"instagram_oauth\"),_a.current=\"link\",await sr.initLoginWithOAuth(\"instagram\")},linkTiktok:async()=>{Ka(\"tiktok\"),rr(\"tiktok_oauth\"),_a.current=\"link\",await sr.initLoginWithOAuth(\"tiktok\")},linkLinkedIn:async()=>{Ka(\"linkedin\"),rr(\"linkedin_oauth\"),_a.current=\"link\",await sr.initLoginWithOAuth(\"linkedin\")},linkApple:async()=>{Ka(\"apple\"),rr(\"apple_oauth\"),_a.current=\"link\",await sr.initLoginWithOAuth(\"apple\")},linkPasskey:async()=>{Ka(\"passkey\"),rr(\"passkey\"),await sr.initLinkWithPasskey(),Ca(yt.LINK_PASSKEY_SCREEN)},linkTelegram:async e=>{if(Ka(\"telegram\"),rr(\"telegram\"),_a.current=\"link\",Aa.current=\"telegram\",e?.launchParams)if(e.launchParams.initDataRaw){let t=new A;C.startAuthFlow(t),t.meta.telegramAuthResult=void 0,t.meta.telegramWebAppData=_(e.launchParams.initDataRaw),na({telegramAuthModalData:{seamlessAuth:!0}}),Ia(yt.TELEGRAM_AUTH_SCREEN)}else vt(ga,\"linkAccount\",\"onError\",Re.INVALID_DATA,{linkMethod:\"telegram\"});else await sr.initLoginWithTelegram();Ca(yt.TELEGRAM_AUTH_SCREEN)},linkFarcaster:async()=>{Ka(\"farcaster\"),rr(\"farcaster\"),await sr.initLoginWithFarcaster(),_a.current=\"link\",Aa.current=\"farcaster\",Ca(yt.AWAITING_FARCASTER_CONNECTION)},updateEmail:()=>{if(Ka(\"email\"),!re?.email)throw new Oe(\"User does not have an email linked to their account.\");_a.current=\"update\",Aa.current=\"email\",Ca(yt.UPDATE_EMAIL_SCREEN)},updatePhone:()=>{if(Ka(\"sms\"),!re?.phone)throw new Oe(\"User does not have a phone number linked to their account.\");_a.current=\"update\",Aa.current=\"sms\",Ca(yt.UPDATE_PHONE_SCREEN)},login:async e=>{e&&\"target\"in e&&e&&(e=void 0);let t=\"Attempted to log in, but user is already logged in. Use a `link` helper instead.\";if(!B){let e=await new Promise((e=>{oa((t=>e.bind(t)))}));if(oa(null),e)return void console.warn(t)}!re||re.isGuest?(_a.current=\"login\",na({login:e}),Ia(yt.LANDING)):console.warn(t)},connectOrCreateWallet:async()=>{B||(await new Promise((e=>{oa((()=>e))})),oa(null)),z?console.warn(\"User must be unauthenticated to `connectOrCreateWallet`\"):(_a.current=\"login\",Ia(yt.CONNECT_OR_CREATE))},logout:async()=>{if(_a.current=null,Aa.current=null,re&&C.clearProviderAcccessTokens(re),Dt(null),await C.logout(),re&&Qt)try{await Qt.clearMfa({userId:re.id})}catch(e){}ie(null),G(!1),vt(ga,\"logout\",\"onSuccess\"),j(!1),Z.del(K),Z.del(q(Zt.id))},getAccessToken:o((()=>C.getCustomerAccessToken()),[C]),unlinkWallet:async e=>{let t;return ie(t=e.startsWith(\"0x\")?await C.unlinkEthereumWallet(e):await C.unlinkSolanaWallet(e)),t},unlinkEmail:async e=>{let t=await C.unlinkEmail(e);return ie(t),t},unlinkPhone:async e=>{let t=await C.unlinkPhone(e);return ie(t),t},unlinkGoogle:async e=>{let t=await C.unlinkOAuth(\"google\",e);return ie(t),t},unlinkTwitter:async e=>{let t=await C.unlinkOAuth(\"twitter\",e);return ie(t),t},unlinkDiscord:async e=>{let t=await C.unlinkOAuth(\"discord\",e);return ie(t),t},unlinkGithub:async e=>{let t=await C.unlinkOAuth(\"github\",e);return ie(t),t},unlinkSpotify:async e=>{let t=await C.unlinkOAuth(\"spotify\",e);return ie(t),t},unlinkInstagram:async e=>{let t=await C.unlinkOAuth(\"instagram\",e);return ie(t),t},unlinkTiktok:async e=>{let t=await C.unlinkOAuth(\"tiktok\",e);return ie(t),t},unlinkLinkedIn:async e=>{let t=await C.unlinkOAuth(\"linkedin\",e);return ie(t),t},unlinkApple:async e=>{let t=await C.unlinkOAuth(\"apple\",e);return ie(t),t},unlinkFarcaster:async e=>{let t=await C.unlinkFarcaster(e);return ie(t),t},unlinkTelegram:async e=>{let t=await C.unlinkTelegram(e);return ie(t),t},unlinkPasskey:async e=>{let t=await Va();if(!t)throw Error(\"Must have valid access token to enroll in MFA\");if(!Qt)throw Error(\"Wallet proxy not initialized.\");let a=Zt.passkeys.shouldUnenrollMfaOnUnlink;await Qt.unlinkPasskeyAccount({credentialId:e,accessToken:t,removeAsMfa:a});let r=await C.getAuthenticatedUser();return ie(r),r},unlinkCrossAppAccount:async({subject:e})=>{let t=re?.linkedAccounts.find((t=>\"cross_app\"===t.type&&t.subject===e))?.providerApp;if(!t)throw new Oe(\"Invalid subject\");C.storeProviderAccessToken(t.id,null);let a=await C.unlinkOAuth(`privy:${t.id}`,e);return ie(a),a},createWallet:async e=>{e&&\"target\"in e&&e&&(e=void 0);let t=await sr.refreshSessionAndUser();if(!t)throw vt(ga,\"createWallet\",\"onError\",Re.MUST_BE_AUTHENTICATED),Error(\"User must be authenticated before creating a Privy wallet\");return $a(t,15e3,e)},setWalletRecovery:async e=>nr({legacySetWalletPasswordFlow:!1,showAutomaticRecovery:e?.showAutomaticRecovery??!1}),setWalletPassword:async()=>nr({legacySetWalletPasswordFlow:!0,showAutomaticRecovery:!1}),signMessage:(e,t)=>new Promise((async(a,r)=>{let{requesterAppId:n}=t?.uiOptions||{},i=e.message;if(!z||!re)return vt(ga,\"signMessage\",\"onError\",Re.MUST_BE_AUTHENTICATED),void r(Error(\"User must be authenticated before signing with a Privy wallet\"));let o=t?.address??O(re)?.address;if(!o)throw new Oe(\"User must have an embedded wallet to sign a message.\");let{signingWallet:s,rootWallet:l}=P(re,o);if(!s||!l)return vt(ga,\"signMessage\",\"onError\",Re.EMBEDDED_WALLET_NOT_FOUND),void r(Error(\"Must have a Privy wallet before signing\"));if(\"string\"!=typeof i||i.length<1)return vt(ga,\"signMessage\",\"onError\",Re.INVALID_MESSAGE),void r(Error(\"Message must be a non-empty string\"));aa(!0);let c=async()=>{if(!z)throw Error(\"User must be authenticated before signing with a Privy wallet\");let e=await Va();if(!Qt||!e||!await sr.recoverPrimaryWallet())throw Error(\"Unable to connect to wallet\");C.createAnalyticsEvent({eventName:\"embedded_wallet_sign_message_started\",payload:{walletAddress:s.address,requesterAppId:n}});let{entropyId:t,entropyIdVerifier:a}=I(l),{response:r}=await Qt.rpc({accessToken:e,entropyId:t,entropyIdVerifier:a,chainType:\"ethereum\",hdWalletIndex:s.walletIndex??0,requesterAppId:n,request:{method:\"personal_sign\",params:[i,s.address]}}),o=r.data;return C.createAnalyticsEvent({eventName:\"embedded_wallet_sign_message_completed\",payload:{walletAddress:s.address,requesterAppId:n}}),o};if(va({showWalletUIs:t?.uiOptions?.showWalletUIs}))try{let e=await c();vt(ga,\"signMessage\",\"onSuccess\",{signature:e}),a({signature:e})}catch(e){vt(ga,\"signMessage\",\"onError\",Re.UNABLE_TO_SIGN),r(e??new me(\"Unable to sign message\"))}else{let e={method:\"personal_sign\",data:i,confirmAndSign:c,onSuccess:e=>{vt(ga,\"signMessage\",\"onSuccess\",{signature:e}),a({signature:e})},onFailure:e=>{vt(ga,\"signMessage\",\"onError\",Re.UNABLE_TO_SIGN),r(e)},uiOptions:t?.uiOptions||{}},{entropyId:n,entropyIdVerifier:o}=I(l);na({signMessage:e,connectWallet:{entropyId:n,entropyIdVerifier:o,onCompleteNavigateTo:yt.EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,onFailure:e=>{vt(ga,\"signMessage\",\"onError\",Re.UNKNOWN_CONNECT_WALLET_ERROR),r(e)}}}),Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN)}})),signTypedData:(e,t)=>new Promise((async(a,r)=>{let{requesterAppId:n}=t?.uiOptions||{};if(!z||!re)return vt(ga,\"signTypedData\",\"onError\",Re.MUST_BE_AUTHENTICATED),void r(Error(\"User must be authenticated before signing with a Privy wallet\"));let i=t?.address??O(re)?.address;if(!i)throw new Oe(\"User must have an embedded wallet to sign a message.\");let{signingWallet:o,rootWallet:s}=P(re,i);if(!s||!o)return vt(ga,\"signTypedData\",\"onError\",Re.EMBEDDED_WALLET_NOT_FOUND),void r(Error(\"Must have a Privy wallet before signing\"));aa(!0);let l=te(e),c=async()=>{if(!z)throw Error(\"User must be authenticated before signing with a Privy wallet\");let e=await Va();if(!Qt||!e||!await sr.recoverPrimaryWallet())throw Error(\"Unable to connect to wallet\");C.createAnalyticsEvent({eventName:\"embedded_wallet_sign_typed_data_started\",payload:{walletAddress:o.address,requesterAppId:n}});let{entropyId:t,entropyIdVerifier:a}=I(s),{response:r}=await Qt.rpc({accessToken:e,entropyId:t,entropyIdVerifier:a,chainType:\"ethereum\",hdWalletIndex:o.walletIndex??0,requesterAppId:n,request:{method:\"eth_signTypedData_v4\",params:[o.address,l]}}),i=r.data;return C.createAnalyticsEvent({eventName:\"embedded_wallet_sign_typed_data_completed\",payload:{walletAddress:o.address,requesterAppId:n}}),i};if(va({showWalletUIs:t?.uiOptions?.showWalletUIs}))try{let e=await c();vt(ga,\"signTypedData\",\"onSuccess\",{signature:e}),a({signature:e})}catch(e){vt(ga,\"signTypedData\",\"onError\",Re.UNABLE_TO_SIGN),r(e??new me(\"Unable to sign message\"))}else{let e={method:\"eth_signTypedData_v4\",data:l,confirmAndSign:c,onSuccess:e=>{vt(ga,\"signTypedData\",\"onSuccess\",{signature:e}),a({signature:e})},onFailure:e=>{vt(ga,\"signTypedData\",\"onError\",Re.UNABLE_TO_SIGN),r(e)},uiOptions:t?.uiOptions||{}},{entropyId:n,entropyIdVerifier:i}=I(s);na({signMessage:e,connectWallet:{entropyId:n,entropyIdVerifier:i,onCompleteNavigateTo:yt.EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,onFailure:e=>{vt(ga,\"signMessage\",\"onError\",Re.UNKNOWN_CONNECT_WALLET_ERROR),r(e)}}}),Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN)}})),sendTransaction:async(e,t)=>await Za({transaction:e,uiOptions:t?.uiOptions,fundWalletConfig:t?.fundWalletConfig,address:t?.address,signOnly:!1}),signTransaction:async(e,t)=>({signature:(await Za({transaction:e,uiOptions:t?.uiOptions,address:t?.address,signOnly:!0})).hash}),exportWallet:e=>new Promise((async(t,a)=>{if(!z||!re)return void a(Error(\"User must be authenticated before exporting their Privy wallet\"));e&&\"target\"in e&&e&&(e=void 0);let r=e?.address??O(re)?.address;if(!r)return void a(Error(\"User does not have an HD Ethereum wallet. To export an imported wallet, pass the `address` of the wallet to `exportWallet`.\"));let{signingWallet:n,rootWallet:i}=P(re,r);if(!n||!i)return void a(Error(\"Must have a Privy wallet before exporting\"));aa(!0);let{entropyId:o,entropyIdVerifier:s}=I(i),l={entropyId:o,entropyIdVerifier:s,onCompleteNavigateTo:yt.EMBEDDED_WALLET_KEY_EXPORT_SCREEN,onFailure:a,shouldForceMFA:!0};na(ra),await Va()&&Qt?Qt?(na({keyExport:{appId:v.appId,appClientId:v.clientId,origin:C.apiUrl,walletToExport:n,primaryWallet:i,onSuccess:t,onFailure:a},connectWallet:l}),Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN)):a(Error(\"Must have a Privy wallet before exporting\")):a(Error(\"Must have valid access token to enroll in MFA\"))})),promptMfa:tr,async init(e){switch(e){case\"sms\":return void await C.initMfaSmsVerification();case\"passkey\":return await C.initMfaPasskeyVerification();case\"totp\":return;default:throw Error(`Unsupported MFA method: ${e}`)}},async submit(e,t){switch(e){case\"totp\":case\"sms\":if(\"string\"!=typeof t)throw new Oe(\"Invalid MFA code\");ma.current?.resolve({mfaMethod:e,mfaCode:t,relyingParty:window.origin}),await new Promise(((e,t)=>{ya.current={resolve:e,reject:t}}));break;case\"passkey\":if(\"string\"==typeof t)throw new Oe(\"Invalid authenticator response\");let a=await import(\"@simplewebauthn/browser\"),r=ut(await a.startAuthentication(t));ma.current?.resolve({mfaMethod:e,mfaCode:r,relyingParty:window.origin}),await new Promise(((e,t)=>{ya.current={resolve:e,reject:t}}));break;default:throw ma.current?.reject(new Oe(\"Unsupported MFA method\")),new Oe(`Unsupported MFA method: ${e}`)}},cancel(){ma.current?.reject(new Oe(\"MFA canceled\"))},async initEnrollmentWithSms(e){let t=await Va();if(!t||!Qt)throw Error(\"Must have valid access token to enroll in MFA\");await Qt.initEnrollMfa({method:\"sms\",accessToken:t,phoneNumber:e.phoneNumber})},enrollInMfa:e=>new Promise(((t,a)=>{if(!e)return sr.closePrivyModal(),void t();Zt.mfa.noPromptOnMfaRequired&&console.warn(\"[Privy Warning] Triggering the 'showMfaEnrollmentModal' function when 'noPromptOnMfaRequired' is set to true is unexpected. If this is intentional, ensure that you are building custom UIs for MFA verification.\"),na({mfaEnrollmentFlow:{mfaMethods:Zt.mfa.methods,shouldUnlinkOnUnenrollMfa:Zt.passkeys.shouldUnlinkOnUnenrollMfa,onSuccess:t,onFailure:a}}),Ca(yt.MFA_ENROLLMENT_FLOW_SCREEN)})),async initEnrollmentWithTotp(){let e=await Va();if(!e||!Qt)throw Error(\"Must have valid access token to enroll in MFA\");let t=await Qt.initEnrollMfa({method:\"totp\",accessToken:e});return{secret:t.secret,authUrl:t.authUrl}},async submitEnrollmentWithSms(e){let t=await Va();if(!t||!Qt)throw Error(\"Must have valid access token to enroll in MFA\");await Qt.submitEnrollMfa({method:\"sms\",accessToken:t,phoneNumber:e.phoneNumber,code:e.mfaCode}),ie(await C.getAuthenticatedUser())},async submitEnrollmentWithTotp(e){let t=await Va();if(!t||!Qt)throw Error(\"Must have valid access token to enroll in MFA\");await Qt.submitEnrollMfa({method:\"totp\",accessToken:t,code:e.mfaCode}),ie(await C.getAuthenticatedUser())},async initEnrollmentWithPasskey(){},async submitEnrollmentWithPasskey({credentialIds:e},t={}){let a=await Va();if(!a||!Qt)throw Error(\"Must have valid access token to enroll in MFA\");await Qt.submitEnrollMfa({method:\"passkey\",accessToken:a,credentialIds:e,removeForLogin:t.removeForLogin}),ie(await C.getAuthenticatedUser())},async unenroll(e,t={}){let a=await Va();if(!a||!Qt)throw Error(\"Must have valid access token to remove MFA\");\"passkey\"===e?await Qt.submitEnrollMfa({method:\"passkey\",accessToken:a,credentialIds:[],removeForLogin:t.removeForLogin}):await Qt.unenrollMfa({method:e,accessToken:a}),ie(await C.getAuthenticatedUser())},requestFarcasterSignerFromWarpcast:async()=>{let e=await Va(),t=re?.linkedAccounts.find((e=>\"wallet\"===e.type&&\"privy\"===e.walletClientType));if(!e)throw Error(\"Must have valid access token to connect with Farcaster\");if(!Qt||!t)throw Error(\"Must have an embedded wallet to use Farcaster signers\");if(!re?.farcaster?.fid)throw Error(\"Must have Farcaster account to use Farcaster signers\");if(!await sr.recoverPrimaryWallet())throw Error(\"Unable to connect to wallet\");let a=await Qt.initFarcasterSigner({address:t.address,hdWalletIndex:null,accessToken:e,mfaCode:null,mfaMethod:null,relyingParty:window.origin});\"approved\"===a.status&&ie(await C.getAuthenticatedUser()||re||null),na({farcasterSigner:a}),Ca(yt.AWAITING_FARCASTER_SIGNER)},getFarcasterSignerPublicKey:async()=>{let e,t=await Va(),a=re?.linkedAccounts.find((e=>\"wallet\"===e.type&&\"privy\"===e.walletClientType));if(!t)throw Error(\"Must have valid access token to connect with Farcaster\");if(!Qt||!a)throw Error(\"Must have an embedded wallet to use Farcaster signers\");if(!re?.farcaster?.fid)throw Error(\"Must have Farcaster account to use Farcaster signers\");if(!await sr.recoverPrimaryWallet())throw Error(\"Unable to connect to wallet\");if(!re.farcaster?.signerPublicKey)throw Error(\"Must have a Farcaster signer public key to sign\");return e=re.farcaster.signerPublicKey.slice(2),Uint8Array.from(e.match(/.{1,2}/g).map((e=>parseInt(e,16))))},signFarcasterMessage:async e=>{let t=await Va(),a=re?.linkedAccounts.find((e=>\"wallet\"===e.type&&\"privy\"===e.walletClientType));if(!t)throw Error(\"Must have valid access token to connect with Farcaster\");if(!Qt||!a)throw Error(\"Must have an embedded wallet to use Farcaster signers\");if(!re?.farcaster?.fid)throw Error(\"Must have Farcaster account to use Farcaster signers\");if(!await sr.recoverPrimaryWallet())throw Error(\"Unable to connect to wallet\");if(!re.farcaster?.signerPublicKey)throw Error(\"Must have a Farcaster signer public key to sign\");let r=await import(\"@simplewebauthn/browser\"),n=await Qt.signFarcasterMessage({address:a.address,hdWalletIndex:null,accessToken:t,mfaCode:null,mfaMethod:null,payload:{hash:r.bufferToBase64URLString(e)},fid:BigInt(re.farcaster.fid),relyingParty:window.origin});return new Uint8Array(r.base64URLStringToBuffer(n.signature))},createGuestAccount:async()=>{if(re&&!re.isGuest)throw Error(\"User cannot already be authenticated to create a guest account\");return re?.isGuest?re:sr.loginWithGuestAccountFlow()},signMessageWithCrossAppWallet(e,{address:t,chainId:a}){let r=re?.linkedAccounts.some((e=>\"cross_app\"===e.type&&e.smartWallets.some((e=>e.address===t))));return qe({user:re,client:C,address:t,requesterAppId:Zt.id,request:{method:r?\"privy_signSmartWalletMessage\":\"personal_sign\",params:[e,t],chainId:a},reconnect:ir})},signTypedDataWithCrossAppWallet(e,{address:t,chainId:a}){let r=re?.linkedAccounts.some((e=>\"cross_app\"===e.type&&e.smartWallets.some((e=>e.address===t)))),n=te(e);return qe({user:re,client:C,address:t,requesterAppId:Zt.id,request:{method:r?\"privy_signSmartWalletTypedData\":\"eth_signTypedData_v4\",params:[t,n],chainId:a},reconnect:ir})},sendTransactionWithCrossAppWallet(e,{address:t}){let a=re?.linkedAccounts.some((e=>\"cross_app\"===e.type&&e.smartWallets.some((e=>e.address===t))));return qe({user:re,client:C,address:t,requesterAppId:Zt.id,request:{method:a?\"privy_sendSmartWalletTx\":\"eth_sendTransaction\",params:[e],chainId:e.chainId},reconnect:ir})},isModalOpen:x,mfaMethods:Zt.mfa.methods};Da=or.signMessage,Ma=or.signTypedData,La=async(e,t)=>await Za({transaction:e,...t,signOnly:!1}),Pa=async(e,t)=>({signature:(await Za({transaction:e,...t,signOnly:!0})).hash});let sr={setAuthenticated:G,setUser:ie,isNewUserThisSession:Se,pendingTransaction:null,walletConnectionStatus:Lt,connectors:C.connectors?.walletConnectors??[],solanaWallets:ue,rpcConfig:Zt.rpcConfig,chains:Zt.chains,appId:v.appId,showFiatPrices:\"native-token\"!==Zt.embeddedWallets.priceDisplay.primary,clientAnalyticsId:C.clientAnalyticsId,customAuthStatus:pa,hideWalletUIs:Ta,emailOtpState:Bt,setEmailOtpState:Vt,smsOtpState:Ht,setSmsOtpState:Kt,oAuthState:qt,setOAuthState:$t,telegramAuthState:Yt,setTelegramAuthState:Xt,siweState:zt,setSiweState:Gt,isHeadlessOAuthLoading:Mt,nativeTokenSymbolForChainId:e=>Zt.chains.find((t=>t.id===Number(e)))?.nativeCurrency.symbol,initializeWalletProxy:async e=>{if(Qt)return Qt;let t=new Promise((e=>{la((()=>t=>e(t)))})),a=new Promise((t=>setTimeout((()=>t(null)),e))),r=await Promise.race([t,a]);return la(null),r},getAuthFlow:()=>C.authFlow,getAuthMeta:()=>C.authFlow?.meta,client:C,closePrivyModal:async(e={shouldCallAuthOnSuccess:!0,isSuccess:!1})=>{let t,a=B&&z&&re;a&&Aa.current&&(t=ar(re)),\"login\"===_a.current?e.shouldCallAuthOnSuccess&&a&&Aa.current?vt(ga,\"login\",\"onComplete\",{user:re,isNewUser:Se,wasAlreadyAuthenticated:!1,loginMethod:Aa.current,loginAccount:t??null}):vt(ga,\"login\",\"onError\",Re.USER_EXITED_AUTH_FLOW):\"link\"===_a.current&&t?e.isSuccess&&a&&Aa.current?vt(ga,\"linkAccount\",\"onSuccess\",{user:re,linkMethod:Aa.current,linkedAccount:t}):Aa.current&&vt(ga,\"linkAccount\",\"onError\",Re.USER_EXITED_LINK_FLOW,{linkMethod:Aa.current}):\"update\"===_a.current&&t&&(e.isSuccess&&a&&Aa.current?vt(ga,\"update\",\"onSuccess\",{user:re,updateMethod:Aa.current,updatedAccount:t}):Aa.current&&vt(ga,\"update\",\"onError\",Re.USER_EXITED_UPDATE_FLOW,{linkMethod:Aa.current}));let r=Rt&&Je.includes(Rt),n=Rt===yt.ERROR_SCREEN&&ra.errorModalData&&Je.includes(ra.errorModalData.previousScreen);if((r||n)&&ra.funding){let e,t=Ze[Rt]??null;if(\"solana\"===ra.funding.chainType){let a=k(wt);if(!a)return void console.warn(\"Unable to load solana plugin, skipping balance\");try{e=BigInt(await a.getBalance({address:ra.funding.address,cluster:ra.funding.cluster}))}catch{console.error(\"Unable to pull wallet balance\")}vt(ga,\"fundSolanaWallet\",\"onUserExited\",{address:ra.funding.address,cluster:ra.funding.cluster,fundingMethod:t,balance:e})}else{let a=Et(ra.funding.chain.id,Zt.chains,Zt.rpcConfig,{appId:v.appId});try{e=await a.getBalance({address:ra.funding.address})}catch{console.error(\"Unable to pull wallet balance\")}vt(ga,\"fundWallet\",\"onUserExited\",{address:ra.funding.address,chain:ra.funding.chain,fundingMethod:t,balance:e})}}na({...ra,externalConnectWallet:{suggestedAddress:void 0}}),_a.current=null,Aa.current=null,ht(!1),j(!1),setTimeout((()=>{C.authFlow=void 0}),200),C.createAnalyticsEvent({eventName:\"modal_closed\"})},solanaSignMessage:({message:e,options:t})=>new Promise((async(a,r)=>{if(!z||!re)return vt(ga,\"signSolanaMessage\",\"onError\",Re.MUST_BE_AUTHENTICATED),void r(Error(\"User must be authenticated before signing with a Privy wallet\"));let n=t?.address??R(re)?.address;if(!n)throw new Oe(\"User must have an embedded wallet to sign a message.\");let{signingWallet:i,rootWallet:o}=M(re,n);if(!i||!o)return vt(ga,\"signSolanaMessage\",\"onError\",Re.EMBEDDED_WALLET_NOT_FOUND),void r(Error(\"Must have a Privy wallet before signing\"));if(\"string\"!=typeof e||e.length<1)return vt(ga,\"signMessage\",\"onError\",Re.INVALID_MESSAGE),void r(Error(\"Message must be a non-empty string\"));aa(!0);let s=async()=>{if(!z)throw Error(\"User must be authenticated before signing with a Privy wallet\");let t=await C.getAccessToken();if(!t)throw Error(\"User must be authenticated to use their embedded wallet.\");let a=sr.walletProxy??await sr.initializeWalletProxy(15e3);if(!a)throw Error(\"Failed to initialize embedded wallet proxy.\");if(!await sr.recoverPrimaryWallet())throw Error(\"Unable to connect to wallet\");if(!o)throw Error(\"No root wallet for signing wallet found\");let{entropyId:r,entropyIdVerifier:n}=I(o),{response:s}=await a.rpc({accessToken:t,entropyId:r,entropyIdVerifier:n,chainType:\"solana\",hdWalletIndex:i.walletIndex??0,request:{method:\"signMessage\",params:{message:e}}});return s.data.signature};if(va({showWalletUIs:t?.uiOptions?.showWalletUIs}))try{let e=await s();vt(ga,\"signSolanaMessage\",\"onSuccess\",{signature:new Uint8Array(Buffer.from(e,\"base64\"))}),a({signature:e})}catch(e){r(e)}else{let n={method:\"solana_signMessage\",data:e,confirmAndSign:s,onSuccess:e=>{vt(ga,\"signSolanaMessage\",\"onSuccess\",{signature:new Uint8Array(Buffer.from(e,\"base64\"))}),a({signature:e})},onFailure:e=>{r(e)},uiOptions:t?.uiOptions},{entropyId:i,entropyIdVerifier:l}=I(o);na({signMessage:n,connectWallet:{entropyId:i,entropyIdVerifier:l,onCompleteNavigateTo:yt.EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,onFailure:e=>{vt(ga,\"signSolanaMessage\",\"onError\",Re.UNKNOWN_CONNECT_WALLET_ERROR),r(e)}}}),Ia(yt.EMBEDDED_WALLET_CONNECTING_SCREEN)}})),signSolanaTransaction:async({transaction:e,connection:t,uiOptions:a,transactionOptions:r,address:n})=>{let i=n?Ee.find((e=>e.address===n)):Ee.slice().sort(((e,t)=>(e.walletIndex??0)-(t.walletIndex??0)))[0];if(!i)throw vt(ga,\"signSolanaTransaction\",\"onError\",Re.EMBEDDED_WALLET_NOT_FOUND),new Oe(\"Embedded wallet not found\",Re.EMBEDDED_WALLET_NOT_FOUND);let{signedTransaction:o}=await er({transaction:e,connection:t,transactionOptions:r,uiOptions:a,wallet:i,signOnly:!0});return o},sendSolanaTransaction:async({transaction:e,connection:t,uiOptions:a,transactionOptions:r,fundWalletConfig:n,address:i})=>{let o=i?Ee.find((e=>e.address===i)):Ee.slice().sort(((e,t)=>(e.walletIndex??0)-(t.walletIndex??0)))[0];if(!o)throw vt(ga,\"sendSolanaTransaction\",\"onError\",Re.EMBEDDED_WALLET_NOT_FOUND),new Oe(\"Embedded wallet not found\",Re.EMBEDDED_WALLET_NOT_FOUND);return await er({transaction:e,connection:t,transactionOptions:r,uiOptions:a,fundWalletConfig:n,wallet:o,signOnly:!1})},openPrivyModal:Ca,connectWallet:Oa,initLoginWithWallet:async(e,t,a)=>{ye(e)?(Aa.current=\"siwe\",ba(e,t,a)):(Aa.current=\"siws\",Ba(e,t,a))},loginWithWallet:async()=>{let e,t,a;if(!B)throw new De;if(C.authFlow instanceof y?e=\"siwe\":C.authFlow instanceof g&&(e=\"siws\"),!e)throw new Oe(\"Must initialize SIWE/SIWS flow first.\");if(null!==await C.getAccessToken())try{({user:t}=await C.link()),Aa.current=e}catch(t){throw vt(ga,\"linkAccount\",\"onError\",t.privyErrorCode||Re.FAILED_TO_LINK_ACCOUNT,{linkMethod:e}),t}else try{({user:t,isNewUser:a}=await C.authenticate()),Aa.current=e}catch(e){throw vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.GENERIC_CONNECT_WALLET_ERROR),e}ie(t||re||null),ht(a||!1),G(!0)},delegateWallet:async({address:e,chainType:t,showDelegationUIs:a})=>new Promise((async(r,n)=>{let i=await Va();if(!z||!re||!i)throw new Oe(\"User must be authenticated and have an embedded wallet to delegate actions.\");if(\"solana\"!==t&&\"ethereum\"!==t)throw new Oe(\"Only Solana and Ethereum embedded wallets are supported for delegation and revocation.\");let o=sr.walletProxy??await sr.initializeWalletProxy(15e3);if(!o)throw new Oe(\"Wallet proxy not initialized.\");if(ve({address:e,chainType:t,user:re}))return r();let s=Ce({address:e,user:re}),l=Ie({address:e,user:re}),c=async()=>{await o.createDelegatedAction({accessToken:i,rootWallet:l,delegatedWallets:[s]}),await sr.refreshSessionAndUser()};if(!a){try{await c(),r()}catch(e){n(e)}return}await sr.recoverPrimaryWallet(),na({delegatedActions:{consent:{address:e,onDelegate:c,onSuccess:async()=>{r()},onError:async e=>{n(e)}}}}),Ca(yt.EMBEDDED_WALLET_DELEGATED_ACTIONS_CONSENT_SCREEN)})),revokeDelegatedWallets:async({showDelegationUIs:e})=>new Promise((async(t,a)=>{if(!z||!re)throw new Oe(\"User must be authenticated and have an embedded wallet to revoke a delegated wallet.\");if(0===ke(re).length)throw new Oe(\"User has no delegated wallets to revoke.\");let r=async()=>{await C.revokeDelegatedWallet(),await sr.refreshSessionAndUser()};if(e)na({delegatedActions:{revoke:{onRevoke:r,onSuccess:async()=>{t()},onError:async e=>{a(e)}}}}),Ca(yt.EMBEDDED_WALLET_DELEGATED_ACTIONS_REVOKE_SCREEN);else try{await r(),t()}catch(e){a(e)}})),initLoginWithFarcaster:async(e,t)=>{let a=new p(e,t);C.startAuthFlow(a);try{Aa.current=\"farcaster\",await a.initializeFarcasterConnect()}catch(e){throw\"login\"===_a.current?vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR):\"link\"===_a.current&&vt(ga,\"linkAccount\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR,{linkMethod:\"farcaster\"}),e}},loginWithFarcaster:async()=>{let e,t;if(!B)throw new De;if(!(C.authFlow instanceof p))throw new Oe(\"Must initialize Farcaster flow first.\");if(null!==await C.getAccessToken())try{({user:e}=await C.link()),Aa.current=\"farcaster\"}catch(e){throw vt(ga,\"linkAccount\",\"onError\",e.privyErrorCode||Re.FAILED_TO_LINK_ACCOUNT,{linkMethod:\"farcaster\"}),e}else try{({user:e,isNewUser:t}=await C.authenticate()),Aa.current=\"farcaster\"}catch(e){throw vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR),e}ie(e||null),ht(t||!1),G(!0)},async loginWithGuestAccountFlow(){let e=new w(this.appId);C.startAuthFlow(e);try{_a.current=\"login\",Aa.current=\"guest\";let{user:e,isNewUser:t}=await C.authenticate();if(t=t||!1,!e)throw new Oe(\"Unable to authenticate guest account\");let a=await Va(),r=await sr.initializeWalletProxy($);if(a&&r)try{let t=lt(e,Zt.embeddedWallets.ethereum.createOnLogin),n=ct(e,Zt.embeddedWallets.solana.createOnLogin);if(t&&n){let t=await $a(e,$);await r.createSolana({accessToken:a,ethereumAddress:t?.address}),e=await sr.refreshSessionAndUser()}else n?(await r.createSolana({accessToken:a,ethereumAddress:O(e)?.address}),e=await sr.refreshSessionAndUser()):t?(await $a(e,$),e=await sr.refreshSessionAndUser()):ie(e)}catch(t){ie(e),console.warn(\"Unable to create embedded wallet for guest account\")}return ht(t),G(!0),vt(ga,\"login\",\"onComplete\",{user:e,isNewUser:t,wasAlreadyAuthenticated:!1,loginMethod:\"guest\",loginAccount:null}),e}catch(e){throw vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR),e}},async crossAppAuthFlow({appId:e,popup:t,action:a}){let r=`privy:${e}`;Aa.current=r;let{url:n,stateCode:i,codeVerifier:o}=await He({api:C.api,appId:e});if(!n)throw C.createAnalyticsEvent({eventName:\"cross_app_auth_error\",payload:{error:\"Unable to open cross-app auth popup\",appId:e}}),new Oe(\"No authorization URL returned for cross-app auth.\");try{let s=await Ge({url:n,popup:t,provider:r}),l=s.stateCode,c=s.authorizationCode;if(l!==i)throw C.createAnalyticsEvent({eventName:\"possible_phishing_attempt\",payload:{provider:r,storedStateCode:i??\"\",returnedStateCode:l??\"\"}}),new Oe(\"Unexpected auth flow. This may be a phishing attempt.\",void 0,Re.OAUTH_UNEXPECTED);let d=await Ke({appId:e,codeVerifier:o,stateCode:l,authorizationCode:c,action:a,client:C});d&&C.storeProviderAccessToken(e,d);let u=await sr.refreshSessionAndUser();if(!u)throw new Oe(\"Unable to update user\");return C.createAnalyticsEvent({eventName:\"cross_app_auth_completed\",payload:{providerAppId:e}}),u}catch(e){throw C.createAnalyticsEvent({eventName:\"cross_app_auth_error\",payload:{error:e.toString(),provider:r}}),e}},async initLoginWithOAuth(e,t,a){if(Aa.current=e,!ee())return void Ia(yt.IN_APP_BROWSER_LOGIN_NOT_POSSIBLE);if(\"google\"===e&&tt(window.navigator.userAgent))return void Ia(yt.IN_APP_BROWSER_LOGIN_NOT_POSSIBLE);\"twitter\"===e&&window.opener&&window.opener.postMessage({type:je},\"*\"),Z.del(Y),Z.del(X);let r=new St({provider:e,disableSignup:!!a,withPrivyUi:!0});t&&r.addCaptchaToken(t),C.startAuthFlow(r);let n=await C.authFlow.getAuthorizationUrl();n&&n.url&&(\"twitter\"===e&&l&&(n.url=n.url.replace(\"x.com\",\"twitter.com\")),window.location.assign(n.url))},async initLoginWithTelegram(e,t){if(!B)throw new De;Aa.current=\"telegram\";let a=new A(e,t);C.startAuthFlow(a),Xt({status:\"loading\"}),a.meta.telegramWebAppData=void 0,a.meta.telegramAuthResult=await new Promise(((e,t)=>Zt.loginConfig.telegramAuthConfiguration?window.Telegram?void window.Telegram.Login.auth({bot_id:Zt.loginConfig.telegramAuthConfiguration.botId,request_access:!0},(a=>a?e(a):t(new Oe(\"Telegram auth failed or was canceled by the client\")))):t(new Oe(\"Telegram was not initialized\")):t(new Oe(\"Telegram Auth configuration is not loaded\"))))},async loginWithTelegram(e){let t,a;if(!(C.authFlow instanceof A))throw new Oe(\"Must initialize Telegram flow before calling loginWithTelegram\");C.authFlow.meta.captchaToken||=e?.captchaToken;let r=await Va(),n=e?.intent||_a.current;if(\"login\"===n)try{let e=await C.authenticate();t=e.user,a=e.isNewUser,Aa.current=\"telegram\"}catch(e){throw vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR),e}else{if(\"link\"!==n)throw new Oe(\"Unknown auth intent\");try{t=(await C.link()).user,Aa.current=\"telegram\"}catch(e){throw vt(ga,\"linkAccount\",\"onError\",e.privyErrorCode||Re.FAILED_TO_LINK_ACCOUNT,{linkMethod:\"telegram\"}),e}}ie(t),ht(a||!1),G(!0),Xt({status:\"done\"});let i=t?.linkedAccounts.find((({type:e})=>\"telegram\"===e))||null;return{user:t,isNewUser:a||!1,wasAlreadyAuthenticated:!!r,loginAccount:i}},async recoveryOAuthFlow(e,t,a){let r,n;function i(t){if(!t)throw C.createAnalyticsEvent({eventName:\"recovery_oauth_error\",payload:{error:\"Unable to open recovery OAuth popup\",provider:e}}),new Oe(\"Recovery OAuth failed\")}switch(e){case\"google-drive\":{let t,o,{url:s,codeVerifier:l,stateCode:c}=await $e({api:Ra.api,provider:e});i(s);try{let r=await rt({url:s,popup:a,provider:e});if(t=r.stateCode,o=r.authorizationCode,t!==c)throw C.createAnalyticsEvent({eventName:\"possible_phishing_attempt\",payload:{provider:e,storedStateCode:c??\"\",returnedStateCode:t??\"\"}}),new Oe(\"Unexpected auth flow. This may be a phishing attempt.\",void 0,Re.OAUTH_UNEXPECTED)}catch(t){throw C.createAnalyticsEvent({eventName:\"recovery_oauth_error\",payload:{error:t.toString(),provider:e}}),new Oe(\"Recovery OAuth failed\")}[r,n]=await Promise.all([Va(),Ye({api:Ra.api,provider:e,codeVerifier:l,stateCode:t,authorizationCode:o})]);break}case\"icloud\":{let{url:t}=await $e({api:Ra.api,provider:e});i(t);let{ckWebAuthToken:o}=await rt({url:t,popup:a,provider:e});n=o,r=await Va()}}if(!Qt)throw new Oe(\"Cannot connect to wallet proxy\");if(!r)throw new Oe(\"Unable to authorize user\");switch(t){case\"recover\":{let t=ra.recoverWallet?.entropyId,a=ra.recoverWallet?.entropyIdVerifier;if(!t||!a)throw new Oe(\"Recovery OAuth failed\");C.createAnalyticsEvent({eventName:\"embedded_wallet_recovery_started\",payload:{walletAddress:t,recoveryMethod:e}}),await Qt.recover({accessToken:r,entropyId:t,entropyIdVerifier:a,recoveryAccessToken:n}),C.createAnalyticsEvent({eventName:\"embedded_wallet_recovery_completed\",payload:{walletAddress:t,recoveryMethod:e}});break}case\"create-wallet\":{C.createAnalyticsEvent({eventName:\"embedded_wallet_creation_started\"}),await Qt.create({accessToken:r,recoveryAccessToken:n,recoveryMethod:e});let t=O(await sr.refreshSessionAndUser());if(!t)throw vt(ga,\"createWallet\",\"onError\",Re.UNKNOWN_EMBEDDED_WALLET_ERROR),Error(\"Failed to create wallet\");C.createAnalyticsEvent({eventName:\"embedded_wallet_creation_completed\",payload:{walletAddress:t.address}}),vt(ga,\"createWallet\",\"onSuccess\",{wallet:t});break}case\"set-recovery\":{let t=U(re);if(!t)throw vt(ga,\"setWalletRecovery\",\"onError\",Re.EMBEDDED_WALLET_NOT_FOUND),Error(\"Embedded wallet not found\");C.createAnalyticsEvent({eventName:\"embedded_wallet_set_recovery_started\",payload:{walletAddress:t.address,existingRecoveryMethod:t.recoveryMethod,targetRecoveryMethod:e}});let{entropyId:a,entropyIdVerifier:i}=I(t);await Qt.setRecovery({accessToken:r,entropyId:a,entropyIdVerifier:i,recoveryMethod:e,recoveryAccessToken:n});let o=U(await sr.refreshSessionAndUser());if(!o)throw vt(ga,\"createWallet\",\"onError\",Re.UNKNOWN_EMBEDDED_WALLET_ERROR),Error(\"Failed to set recovery on wallet\");C.createAnalyticsEvent({eventName:\"embedded_wallet_set_recovery_completed\",payload:{walletAddress:t.address,existingRecoveryMethod:t.recoveryMethod,targetRecoveryMethod:e}}),vt(ga,\"setWalletRecovery\",\"onSuccess\",{method:e,wallet:o});break}default:throw new Oe(\"Unsupported recovery action\")}},async loginWithOAuth(e){let t,a,r;if(!(C.authFlow instanceof St))throw new Oe(\"Must initialize OAuth flow before calling loginWithOAuth\");let n=Z.get(Q),i=C.authFlow.meta.stateCode;if(n!==i)throw C.createAnalyticsEvent({eventName:\"possible_phishing_attempt\",payload:{provider:e,storedStateCode:n??\"\",returnedStateCode:i??\"\"}}),new Oe(\"Unexpected auth flow. This may be a phishing attempt.\",void 0,Re.OAUTH_UNEXPECTED);if(null!==await C.getAccessToken())try{let a=await C.link();t=a.user,r=a.oAuthTokens,Aa.current=e}catch(t){throw vt(ga,\"linkAccount\",\"onError\",t.privyErrorCode||Re.FAILED_TO_LINK_ACCOUNT,{linkMethod:e}),t}else try{let n=await C.authenticate();t=n.user,a=n.isNewUser,r=n.oAuthTokens,Aa.current=e}catch(t){throw\"login\"===_a.current?vt(ga,\"login\",\"onError\",t.privyErrorCode||Re.UNKNOWN_AUTH_ERROR):\"link\"===_a.current&&vt(ga,\"linkAccount\",\"onError\",t.privyErrorCode||Re.FAILED_TO_LINK_ACCOUNT,{linkMethod:e}),t}return ie(t),ht(a||!1),G(!0),r&&t&&vt(ga,\"oAuthAuthorization\",\"onOAuthTokenGrant\",{oAuthTokens:r,user:t}),r},passkeyAuthState:xt,setPasskeyAuthState:jt,async initSignupWithPasskey({captchaToken:e,withPrivyUi:t}){let a=new m({captchaToken:e,setPasskeyAuthState:jt});C.startAuthFlow(a),_a.current=\"login\";try{Aa.current=\"passkey\",jt({status:\"generating-challenge\"}),await a.initRegisterFlow(t),jt({status:\"awaiting-passkey\"})}catch(e){throw jt({status:\"error\",error:e}),vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR),e}},async signupWithPasskey(){let e,t;if(!B)throw new De;if(!(C.authFlow instanceof m))throw new Oe(\"Must initialize Passkey flow first.\");if(\"passkey\"!==Aa.current){let e=new Oe(\"Must init login with Passkey flow first.\");throw jt({status:\"error\",error:e}),e}let a=await Va();try{Aa.current=\"passkey\",jt({status:\"awaiting-passkey\"}),({user:e,isNewUser:t}=await C.authenticate())}catch(e){throw jt({status:\"error\",error:e}),vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR),e}ie(e),ht(t||!1),G(!0),jt({status:\"done\"});let r=e?.linkedAccounts.find((({type:e})=>\"passkey\"===e))||null;return{user:e,isNewUser:t||!1,wasAlreadyAuthenticated:!!a,loginAccount:r}},async initLoginWithPasskey({captchaToken:e,withPrivyUi:t}){let a=new m({captchaToken:e,setPasskeyAuthState:jt});C.startAuthFlow(a),_a.current=\"login\";try{Aa.current=\"passkey\",jt({status:\"generating-challenge\"}),await a.initAuthenticationFlow(t),jt({status:\"awaiting-passkey\"})}catch(e){throw jt({status:\"error\",error:e}),vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR),e}},async loginWithPasskey(e){let t,a;if(!B)throw new De;if(!(C.authFlow instanceof m))throw new Oe(\"Must initialize Passkey flow first.\");if(e?.credentialIds&&(C.authFlow.meta.allowedCredentialsIds=e.credentialIds),\"passkey\"!==Aa.current){let e=new Oe(\"Must init login with Passkey flow first.\");throw jt({status:\"error\",error:e}),e}let r=await Va();try{Aa.current=\"passkey\",jt({status:\"awaiting-passkey\"}),({user:t,isNewUser:a}=await C.authenticate())}catch(e){throw jt({status:\"error\",error:e}),vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR),e}ie(t),ht(a||!1),G(!0),jt({status:\"done\"});let n=t?.linkedAccounts.find((({type:e})=>\"passkey\"===e))||null;return{user:t,isNewUser:a||!1,wasAlreadyAuthenticated:!!r,loginAccount:n}},async initLinkWithPasskey(e){let t=new m({captchaToken:e});C.startAuthFlow(t),_a.current=\"link\",Aa.current=\"passkey\",jt({status:\"generating-challenge\"});try{await t.initLinkFlow(),jt({status:\"awaiting-passkey\"})}catch(e){throw vt(ga,\"linkAccount\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR,{linkMethod:\"passkey\"}),jt({status:\"error\",error:e}),e}},async linkWithPasskey(){let e;if(!B)throw new De;if(!(C.authFlow instanceof m))throw new Oe(\"Must initialize Passkey flow first.\");if(\"passkey\"!==Aa.current)throw new Oe(\"Must init login with Passkey flow first.\");try{Aa.current=\"passkey\",({user:e}=await C.link())}catch(e){throw vt(ga,\"linkAccount\",\"onError\",e.privyErrorCode||Re.FAILED_TO_LINK_ACCOUNT,{linkMethod:\"passkey\"}),e}return ie(e||re||null),jt({status:\"done\"}),e},async initLoginWithHeadlessOAuth(e,t,a){if(!ee())throw Error(\"It looks like you're using an in-app browser.  To log in, please try again using an external browser.\");if(\"google\"===e&&tt(window.navigator.userAgent))throw Error(\"It looks like you're using an in-app browser.  To log in, please try again using an external browser.\");let r=new St({provider:e,withPrivyUi:!1,disableSignup:a??!1});t&&r.addCaptchaToken(t),$t({status:\"loading\"});let n=await C.startAuthFlow(r).getAuthorizationUrl();n?.url&&window.location.assign(n.url)},async loginWithHeadlessOAuth(e){let t,a,r;Pt(!0),$t({status:\"loading\"}),C.startAuthFlow(new St(e));let n=Z.get(Q),i=e.stateCode;if(n!==i)throw C.createAnalyticsEvent({eventName:\"possible_phishing_attempt\",payload:{provider:e.provider,storedStateCode:n??\"\",returnedStateCode:i??\"\"}}),Pt(!1),new Oe(\"Unexpected auth flow. This may be a phishing attempt.\",void 0,Re.OAUTH_UNEXPECTED);if(null!==await C.getAccessToken())try{({user:t,oAuthTokens:r}=await C.link()),Aa.current=e.provider;let a=ar(t);t&&a&&vt(ga,\"linkAccount\",\"onSuccess\",{user:t,linkMethod:Aa.current,linkedAccount:a})}catch(t){throw Pt(!1),vt(ga,\"linkAccount\",\"onError\",t.privyErrorCode||Re.FAILED_TO_LINK_ACCOUNT,{linkMethod:e.provider}),t}else try{({user:t,isNewUser:a,oAuthTokens:r}=await C.authenticate()),Aa.current=e.provider;let n=ar(t);t&&n&&void 0!==a&&vt(ga,\"login\",\"onComplete\",{user:t,isNewUser:a,wasAlreadyAuthenticated:!1,loginMethod:Aa.current,loginAccount:n})}catch(e){throw Pt(!1),$t({status:\"error\",error:e}),vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR),e}return ie(t),ht(a||!1),G(!0),Pt(!1),$t({status:\"done\"}),r&&t&&vt(ga,\"oAuthAuthorization\",\"onOAuthTokenGrant\",{oAuthTokens:r,user:t}),t??void 0},initLoginWithEmail:async({email:e,captchaToken:t,disableSignup:a,withPrivyUi:r})=>{let n=new h({email:e,captchaToken:t,disableSignup:a});C.startAuthFlow(n);try{Aa.current=\"email\",Vt({status:\"sending-code\"}),await n.sendCodeEmail({withPrivyUi:r}),Vt({status:\"awaiting-code-input\"})}catch(e){throw Vt({status:\"error\",error:e}),\"login\"===_a.current?vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR):\"link\"===_a.current&&vt(ga,\"linkAccount\",\"onError\",e.privyErrorCode||Re.FAILED_TO_LINK_ACCOUNT,{linkMethod:\"email\"}),e}},initUpdateEmail:async(e,t,a)=>{let r=new u(e,t,a);C.startAuthFlow(r);try{await r.sendCodeEmail({withPrivyUi:!0})}catch(e){vt(ga,\"update\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR,{linkMethod:Aa.current})}},initUpdatePhone:async(e,t,a)=>{let r=new f(e,t,a);C.startAuthFlow(r);try{await r.sendSmsCode({withPrivyUi:!0})}catch(e){vt(ga,\"update\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR,{linkMethod:Aa.current})}},initLoginWithSms:async({phoneNumber:e,captchaToken:t,disableSignup:a,withPrivyUi:r})=>{Kt({status:\"sending-code\"});let n=new E({phoneNumber:e,captchaToken:t,disableSignup:a});C.startAuthFlow(n);try{Aa.current=\"sms\",await n.sendSmsCode({withPrivyUi:r}),Kt({status:\"awaiting-code-input\"})}catch(e){throw Kt({status:\"error\",error:e}),\"login\"===_a.current?vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR):\"link\"===_a.current&&vt(ga,\"linkAccount\",\"onError\",e.privyErrorCode||Re.FAILED_TO_LINK_ACCOUNT,{linkMethod:\"sms\"}),e}},resendEmailCode:async()=>{await(C.authFlow?.sendCodeEmail({withPrivyUi:!0}))},resendSmsCode:async()=>{await(C.authFlow?.sendSmsCode({withPrivyUi:!0}))},loginWithCode:async e=>{let t,a;function r(e){C.authFlow instanceof h?Vt(e):C.authFlow instanceof E&&Kt(e)}if(r({status:\"submitting-code\"}),!B){let e=new De;throw r({status:\"error\",error:e}),e}if(C.authFlow instanceof h)C.authFlow.meta.emailCode=e.trim();else{if(!(C.authFlow instanceof E)){let e=new Oe(\"Must initialize a passwordless code flow first\");throw r({status:\"error\",error:e}),e}C.authFlow.meta.smsCode=e.trim()}let n=await Va();if(\"link\"===_a.current)try{({user:t}=await C.link())}catch(e){throw r({status:\"error\",error:e}),vt(ga,\"linkAccount\",\"onError\",e.privyErrorCode||Re.FAILED_TO_LINK_ACCOUNT,{linkMethod:Aa.current}),e}else if(\"update\"===_a.current)try{({user:t}=await C.link())}catch(e){throw r({status:\"error\",error:e}),vt(ga,\"update\",\"onError\",e.privyErrorCode||Re.FAILED_TO_UPDATE_ACCOUNT,{linkMethod:Aa.current}),e}else try{({user:t,isNewUser:a}=await C.authenticate())}catch(e){throw r({status:\"error\",error:e}),vt(ga,\"login\",\"onError\",e.privyErrorCode||Re.UNKNOWN_AUTH_ERROR),e}let i=t||re;ie(i||null),ht(a||!1),G(!0),r({status:\"done\"});let o=null;return C.authFlow instanceof h?o=i?.linkedAccounts.find((({type:e})=>\"email\"===e))||null:C.authFlow instanceof E&&(o=i?.linkedAccounts.find((({type:e})=>\"phone\"===e))||null),{user:i,isNewUser:a||!1,wasAlreadyAuthenticated:!!n,linkedAccount:o}},generateSiweMessage:async({address:e,chainId:t,captchaToken:a})=>{_a.current=\"link\",Aa.current=\"siwe\",Gt({status:\"generating-message\"});let r=await C.generateSiweNonce({address:e,captchaToken:a});return Gt({status:\"awaiting-signature\"}),nt({address:e,chainId:t.replace(\"eip155:\",\"\"),nonce:r})},generateSiweMessageForSmartWallet:async({address:e,chainId:t})=>{let a=await C.generateSiweNonce({address:e});return nt({address:e,chainId:t.replace(\"eip155:\",\"\"),nonce:a})},linkSmartWallet:async({message:e,signature:t,smartWalletType:a})=>{let r;r=await C.linkSmartWallet({message:e,signature:t,smartWalletType:a}),ie((r=await sr.refreshSessionAndUser()??r)||re||null)},linkWithSiwe:async({message:e,signature:t,chainId:a,walletClientType:r,connectorType:n})=>{let i;Ka(\"siwe\");let o=null;try{Gt({status:\"submitting-signature\"}),i=await C.linkWithSiwe({message:e,signature:t,chainId:a,walletClientType:r,connectorType:n}),i=await sr.refreshSessionAndUser()??i,Gt({status:\"done\"}),(o=ar(i)||null)&&vt(ga,\"linkAccount\",\"onSuccess\",{user:i,linkMethod:\"siwe\",linkedAccount:o})}catch(e){throw vt(ga,\"linkAccount\",\"onError\",e.privyErrorCode||Re.FAILED_TO_LINK_ACCOUNT,{linkMethod:\"siwe\"}),_a.current=null,Aa.current=null,Gt({status:\"error\",error:e}),e}let s=i||re;return ie(s||null),_a.current=null,Aa.current=null,{user:s,linkedAccount:o}},refreshSessionAndUser:async()=>{let e=await C.getAuthenticatedUser();return G(!!e),ie(e),e},walletProxy:Qt,createAnalyticsEvent:({eventName:e,payload:t,timestamp:a})=>C.createAnalyticsEvent({eventName:e,payload:t,timestamp:a}),acceptTerms:async()=>{let e=await C.acceptTerms();return ie(e),e},getUsdTokenPrice:e=>C.getUsdTokenPrice(e),getUsdPriceForSol:()=>C.getUsdPriceForSol(),getSplTokenMetadata:e=>C.getSplTokenMetadata(e),recoverPrimaryWallet:async e=>new Promise((async(t,a)=>{let r=U(e?.user??re)||S(e?.user??re)||N(e?.user??re);r||t(!0);let n=await Va();if(!n||!Qt||!r)return void a(Error(\"Must have valid access token and Privy wallet to recover wallet\"));aa(!0);let{entropyId:i,entropyIdVerifier:o}=I(r);try{await Qt.connect({accessToken:n,entropyId:i,entropyIdVerifier:o}),t(!0)}catch(e){We(e)&&\"privy\"===r.recoveryMethod?(C.createAnalyticsEvent({eventName:\"embedded_wallet_pinless_recovery_started\",payload:{walletAddress:r.address}}),(await Qt.recover({entropyId:i,entropyIdVerifier:o,accessToken:n})).entropyId||a(Error(\"Unable to recover wallet\")),C.createAnalyticsEvent({eventName:\"embedded_wallet_recovery_completed\",payload:{walletAddress:r.address}}),t(!0)):We(e)&&\"privy\"!==r.recoveryMethod?(na({recoverWallet:{entropyId:i,entropyIdVerifier:o,onFailure:a,onSuccess:()=>t(!0)},recoveryOAuthStatus:{provider:r.recoveryMethod,action:\"recover\"}}),Ca(Xe(r.recoveryMethod))):a(e)}})),embeddedSolanaWallets:Ee,createEmbeddedSolanaWallet:async e=>{e&&\"target\"in e&&(e=void 0);let t=await sr.refreshSessionAndUser();if(!t)throw vt(ga,\"createWallet\",\"onError\",Re.MUST_BE_AUTHENTICATED),Error(\"User must be authenticated before creating a Privy wallet\");return(async(e,t,a)=>{let r=O(e),n=R(e),i=a&&\"createAdditional\"in a&&a.createAdditional,o=a&&\"walletIndex\"in a?a.walletIndex:void 0,s=(L(e)?.walletIndex??-1)+1;if(n&&!i&&\"number\"!=typeof o)throw vt(ga,\"createWallet\",\"onError\",Re.EMBEDDED_WALLET_ALREADY_EXISTS),Error(\"User already has an embedded wallet.\");if(\"number\"==typeof o&&o<0)throw vt(ga,\"createWallet\",\"onError\",Re.EMBEDDED_WALLET_CREATE_ERROR),Error(`A negative walletIndex (${o}) is invalid.`);let[l,c]=await Promise.all([sr.initializeWalletProxy(t),Va()]);if(!l||!c)throw vt(ga,\"createWallet\",\"onError\",Re.UNKNOWN_EMBEDDED_WALLET_ERROR),Error(\"Failed to connect to wallet proxy\");return await Qa({user:e,wp:l,accessToken:c,walletIndex:o??s,ethereumWallet:r})})(t,15e3,e)},exportSolanaWallet:e=>new Promise((async(t,a)=>{if(!z||!re)return void a(Error(\"User must be authenticated before exporting their Privy wallet\"));let r=e?.address??R(re)?.address;if(!r)return void a(Error(\"User does not have an HD Solana wallet.\"));let{signingWallet:n,rootWallet:i}=M(re,r);if(!n||!i)return void a(Error(\"Must have a Privy wallet before exporting\"));if(aa(!0),!await Va()||!Qt)return void a(Error(\"Must have valid access token to enroll in MFA\"));if(!Qt)return void a(Error(\"Must have a Privy wallet before exporting\"));let{entropyId:o,entropyIdVerifier:s}=I(i);na({connectWallet:{entropyId:o,entropyIdVerifier:s,onCompleteNavigateTo:yt.EMBEDDED_WALLET_KEY_EXPORT_SCREEN,onFailure:a,shouldForceMFA:!0},keyExport:{appId:v.appId,appClientId:v.clientId,origin:C.apiUrl,walletToExport:n,primaryWallet:i,onSuccess:t,onFailure:a}}),Ca(yt.EMBEDDED_WALLET_CONNECTING_SCREEN)})),setReadyToTrue:e=>{H(!0),ia?.(e)},updateWallets:()=>qa(),fundWallet:async(e,t)=>{let a=yt.FUNDING_METHOD_SELECTION_SCREEN;na({funding:Ot({address:e,appConfig:Zt,fundWalletConfig:t,methodScreen:a})}),Ca(a)},openModal:Ca,requestFarcasterSignerStatus:async e=>{let t=await Va(),a=re?.linkedAccounts.find((e=>\"wallet\"===e.type&&\"privy\"===e.walletClientType));if(!t)throw Error(\"Must have valid access token to connect with Farcaster\");if(!Qt||!a)throw Error(\"Must have an embedded wallet to use Farcaster signers\");if(!re?.farcaster?.fid)throw Error(\"Must have Farcaster account to use Farcaster signers\");let r=await C.requestFarcasterSignerStatus(e);return\"approved\"===r.status&&ie(await C.getAuthenticatedUser()||re||null),r},connectCoinbaseSmartWallet:async()=>{Zt.externalWallets.coinbaseWallet.connectionOptions=\"smartWalletOnly\";let e=C.connectors?.findWalletConnector(\"coinbase_wallet\",\"coinbase_smart_wallet\")||C.connectors?.findWalletConnector(\"coinbase_wallet\",\"coinbase_wallet\");if(e)return e.updateConnectionPreference(\"smartWalletOnly\"),Oa(e);await Ua(\"coinbase_wallet\",\"coinbase_smart_wallet\")},initiateAccountTransfer:async({nonce:e,account:t,accountType:a,externalWalletMetadata:r,telegramAuthResult:n,telegramWebAppData:i,farcasterEmbeddedAddress:o,oAuthUserInfo:s})=>{let l=await C.sendAccountTransferRequest({nonce:e,account:t,accountType:a,externalWalletMetadata:r,telegramAuthResult:n,telegramWebAppData:i,farcasterEmbeddedAddress:o,oAuthUserInfo:s});return ie(l),l}};Fa=sr.recoverPrimaryWallet,xa=sr.recoverPrimaryWallet,ja=sr.solanaSignMessage;let lr=s((()=>({wallets:oe,ready:ca&&fa})),[oe,ca,fa]),cr=C.authFlow instanceof A,dr=!Zt.headless&&Zt.captchaEnabled&&!z&&(B||cr);/*#__PURE__*/return e(Wt.Provider,{value:or,children:/*#__PURE__*/e(Ct.Provider,{value:ga,children:/*#__PURE__*/e(Nt.Provider,{value:lr,children:/*#__PURE__*/e(_t,{...Zt,children:/*#__PURE__*/t(It.Provider,{value:sr,children:[/*#__PURE__*/e(mt,{children:/*#__PURE__*/t(kt,{data:ra,setModalData:na,setInitialScreen:Dt,initialScreen:Rt,authenticated:z,open:x,children:[v.children,dr&&/*#__PURE__*/e(le,{delayedExecution:!1}),/*#__PURE__*/e(ft,{theme:{...Zt.appearance.palette||{}}}),!Zt.render.standalone&&/*#__PURE__*/e(ce,{open:x})]})}),ta&&ea?/*#__PURE__*/e(Te,{appId:v.appId,appClientId:v.clientId,clientAnalyticsId:C.clientAnalyticsId,origin:C.apiUrl,mfaMethods:re?.mfaMethods,mfaPromise:ma,mfaSubmitPromise:ya,onLoad:Jt,onLoadFailed:()=>null}):null,Zt.loginConfig.telegramAuthConfiguration&&\n/*#__PURE__*/e(gt,{$if:!0,children:/*#__PURE__*/e(de,{scriptHost:v.apiUrl||V,botUsername:Zt.loginConfig.telegramAuthConfiguration.botName})})]})})})})})};export{ka as C,Ia as E,Xa as P,Oa as a,Sa as b,Va as c,Ha as d,Ka as e,za as f,Ba as g,Ga as h,qa as i,$a as j,Ya as k};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}