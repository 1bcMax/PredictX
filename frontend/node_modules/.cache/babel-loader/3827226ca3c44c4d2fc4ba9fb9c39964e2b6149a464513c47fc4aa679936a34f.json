{"ast":null,"code":"import { createPublicClient as r, http as p } from \"viem\";\nimport { PrivyConnectorError as t } from \"../../errors.mjs\";\nimport \"ofetch\";\nconst e = (e, l, s, c) => {\n    let o = Number(e),\n      d = l.find(r => r.id === o);\n    if (!d) throw new t(`Unsupported chainId ${e}`, 4901);\n    return r({\n      transport: p(i(d, s, c.appId)),\n      chain: d\n    });\n  },\n  i = (r, p, e) => {\n    let i,\n      l = r.id,\n      s = Number(r.id);\n    if (r.rpcUrls.privyWalletOverride && r.rpcUrls.privyWalletOverride.http[0]) i = r.rpcUrls.privyWalletOverride.http[0];else if (p.rpcUrls && p.rpcUrls[s]) i = p.rpcUrls[s];else if (r.rpcUrls.privy?.http[0]) {\n      let p = new URL(r.rpcUrls.privy.http[0]);\n      p.searchParams.append(\"privyAppId\", e), i = p.toString();\n    } else i = r.rpcUrls.public?.http[0] ? r.rpcUrls.public.http[0] : r.rpcUrls.default?.http[0];\n    if (!i) throw new t(`No RPC url found for ${l}`);\n    return i;\n  };\nexport { i as getJsonRpcEndpointFromChain, e as getPublicClient };","map":{"version":3,"names":["createPublicClient","r","http","p","PrivyConnectorError","t","e","l","s","c","o","Number","d","find","id","transport","i","appId","chain","rpcUrls","privyWalletOverride","privy","URL","searchParams","append","toString","public","default","getJsonRpcEndpointFromChain","getPublicClient"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/utils/eth/getPublicClient.mjs"],"sourcesContent":["import{createPublicClient as r,http as p}from\"viem\";import{PrivyConnectorError as t}from\"../../errors.mjs\";import\"ofetch\";const e=(e,l,s,c)=>{let o=Number(e),d=l.find((r=>r.id===o));if(!d)throw new t(`Unsupported chainId ${e}`,4901);return r({transport:p(i(d,s,c.appId)),chain:d})},i=(r,p,e)=>{let i,l=r.id,s=Number(r.id);if(r.rpcUrls.privyWalletOverride&&r.rpcUrls.privyWalletOverride.http[0])i=r.rpcUrls.privyWalletOverride.http[0];else if(p.rpcUrls&&p.rpcUrls[s])i=p.rpcUrls[s];else if(r.rpcUrls.privy?.http[0]){let p=new URL(r.rpcUrls.privy.http[0]);p.searchParams.append(\"privyAppId\",e),i=p.toString()}else i=r.rpcUrls.public?.http[0]?r.rpcUrls.public.http[0]:r.rpcUrls.default?.http[0];if(!i)throw new t(`No RPC url found for ${l}`);return i};export{i as getJsonRpcEndpointFromChain,e as getPublicClient};\n"],"mappings":"AAAA,SAAOA,kBAAkB,IAAIC,CAAC,EAACC,IAAI,IAAIC,CAAC,QAAK,MAAM;AAAC,SAAOC,mBAAmB,IAAIC,CAAC,QAAK,kBAAkB;AAAC,OAAM,QAAQ;AAAC,MAAMC,CAAC,GAACA,CAACA,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,KAAG;IAAC,IAAIC,CAAC,GAACC,MAAM,CAACL,CAAC,CAAC;MAACM,CAAC,GAACL,CAAC,CAACM,IAAI,CAAEZ,CAAC,IAAEA,CAAC,CAACa,EAAE,KAAGJ,CAAE,CAAC;IAAC,IAAG,CAACE,CAAC,EAAC,MAAM,IAAIP,CAAC,CAAC,uBAAuBC,CAAC,EAAE,EAAC,IAAI,CAAC;IAAC,OAAOL,CAAC,CAAC;MAACc,SAAS,EAACZ,CAAC,CAACa,CAAC,CAACJ,CAAC,EAACJ,CAAC,EAACC,CAAC,CAACQ,KAAK,CAAC,CAAC;MAACC,KAAK,EAACN;IAAC,CAAC,CAAC;EAAA,CAAC;EAACI,CAAC,GAACA,CAACf,CAAC,EAACE,CAAC,EAACG,CAAC,KAAG;IAAC,IAAIU,CAAC;MAACT,CAAC,GAACN,CAAC,CAACa,EAAE;MAACN,CAAC,GAACG,MAAM,CAACV,CAAC,CAACa,EAAE,CAAC;IAAC,IAAGb,CAAC,CAACkB,OAAO,CAACC,mBAAmB,IAAEnB,CAAC,CAACkB,OAAO,CAACC,mBAAmB,CAAClB,IAAI,CAAC,CAAC,CAAC,EAACc,CAAC,GAACf,CAAC,CAACkB,OAAO,CAACC,mBAAmB,CAAClB,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAGC,CAAC,CAACgB,OAAO,IAAEhB,CAAC,CAACgB,OAAO,CAACX,CAAC,CAAC,EAACQ,CAAC,GAACb,CAAC,CAACgB,OAAO,CAACX,CAAC,CAAC,CAAC,KAAK,IAAGP,CAAC,CAACkB,OAAO,CAACE,KAAK,EAAEnB,IAAI,CAAC,CAAC,CAAC,EAAC;MAAC,IAAIC,CAAC,GAAC,IAAImB,GAAG,CAACrB,CAAC,CAACkB,OAAO,CAACE,KAAK,CAACnB,IAAI,CAAC,CAAC,CAAC,CAAC;MAACC,CAAC,CAACoB,YAAY,CAACC,MAAM,CAAC,YAAY,EAAClB,CAAC,CAAC,EAACU,CAAC,GAACb,CAAC,CAACsB,QAAQ,CAAC,CAAC;IAAA,CAAC,MAAKT,CAAC,GAACf,CAAC,CAACkB,OAAO,CAACO,MAAM,EAAExB,IAAI,CAAC,CAAC,CAAC,GAACD,CAAC,CAACkB,OAAO,CAACO,MAAM,CAACxB,IAAI,CAAC,CAAC,CAAC,GAACD,CAAC,CAACkB,OAAO,CAACQ,OAAO,EAAEzB,IAAI,CAAC,CAAC,CAAC;IAAC,IAAG,CAACc,CAAC,EAAC,MAAM,IAAIX,CAAC,CAAC,wBAAwBE,CAAC,EAAE,CAAC;IAAC,OAAOS,CAAC;EAAA,CAAC;AAAC,SAAOA,CAAC,IAAIY,2BAA2B,EAACtB,CAAC,IAAIuB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}