{"ast":null,"code":"import { PrivyClientError as t, formatApiError as e } from \"../errors.mjs\";\nimport { oAuthAuthenticatePath as i, oAuthLinkPath as o } from \"../paths.mjs\";\nimport \"ofetch\";\nclass r {\n  async authenticate() {\n    if (!this.api) throw new t(\"Auth flow has no API instance\");\n    try {\n      return await this.api.post(i, {\n        authorization_code: this.meta.authorizationCode,\n        state_code: this.meta.stateCode,\n        code_verifier: this.meta.codeVerifier,\n        provider: this.meta.provider\n      });\n    } catch (t) {\n      throw e(t);\n    }\n  }\n  async link() {\n    if (!this.api) throw new t(\"Auth flow has no API instance\");\n    try {\n      return await this.api.post(o, {\n        authorization_code: this.meta.authorizationCode,\n        state_code: this.meta.stateCode,\n        code_verifier: this.meta.codeVerifier,\n        provider: this.meta.provider\n      });\n    } catch (t) {\n      throw e(t);\n    }\n  }\n  constructor({\n    authorizationCode: t,\n    stateCode: e,\n    codeVerifier: i,\n    provider: o\n  }) {\n    this.meta = {\n      authorizationCode: t,\n      stateCode: e,\n      codeVerifier: i,\n      provider: o\n    };\n  }\n}\nexport { r as CrossAppAuthFlow };","map":{"version":3,"names":["PrivyClientError","t","formatApiError","e","oAuthAuthenticatePath","i","oAuthLinkPath","o","r","authenticate","api","post","authorization_code","meta","authorizationCode","state_code","stateCode","code_verifier","codeVerifier","provider","link","constructor","CrossAppAuthFlow"],"sources":["/Users/vickyfu/Documents/PredictX/frontend/node_modules/@privy-io/react-auth/dist/esm/auth-flows/cross-app.mjs"],"sourcesContent":["import{PrivyClientError as t,formatApiError as e}from\"../errors.mjs\";import{oAuthAuthenticatePath as i,oAuthLinkPath as o}from\"../paths.mjs\";import\"ofetch\";class r{async authenticate(){if(!this.api)throw new t(\"Auth flow has no API instance\");try{return await this.api.post(i,{authorization_code:this.meta.authorizationCode,state_code:this.meta.stateCode,code_verifier:this.meta.codeVerifier,provider:this.meta.provider})}catch(t){throw e(t)}}async link(){if(!this.api)throw new t(\"Auth flow has no API instance\");try{return await this.api.post(o,{authorization_code:this.meta.authorizationCode,state_code:this.meta.stateCode,code_verifier:this.meta.codeVerifier,provider:this.meta.provider})}catch(t){throw e(t)}}constructor({authorizationCode:t,stateCode:e,codeVerifier:i,provider:o}){this.meta={authorizationCode:t,stateCode:e,codeVerifier:i,provider:o}}}export{r as CrossAppAuthFlow};\n"],"mappings":"AAAA,SAAOA,gBAAgB,IAAIC,CAAC,EAACC,cAAc,IAAIC,CAAC,QAAK,eAAe;AAAC,SAAOC,qBAAqB,IAAIC,CAAC,EAACC,aAAa,IAAIC,CAAC,QAAK,cAAc;AAAC,OAAM,QAAQ;AAAC,MAAMC,CAAC;EAAC,MAAMC,YAAYA,CAAA,EAAE;IAAC,IAAG,CAAC,IAAI,CAACC,GAAG,EAAC,MAAM,IAAIT,CAAC,CAAC,+BAA+B,CAAC;IAAC,IAAG;MAAC,OAAO,MAAM,IAAI,CAACS,GAAG,CAACC,IAAI,CAACN,CAAC,EAAC;QAACO,kBAAkB,EAAC,IAAI,CAACC,IAAI,CAACC,iBAAiB;QAACC,UAAU,EAAC,IAAI,CAACF,IAAI,CAACG,SAAS;QAACC,aAAa,EAAC,IAAI,CAACJ,IAAI,CAACK,YAAY;QAACC,QAAQ,EAAC,IAAI,CAACN,IAAI,CAACM;MAAQ,CAAC,CAAC;IAAA,CAAC,QAAMlB,CAAC,EAAC;MAAC,MAAME,CAAC,CAACF,CAAC,CAAC;IAAA;EAAC;EAAC,MAAMmB,IAAIA,CAAA,EAAE;IAAC,IAAG,CAAC,IAAI,CAACV,GAAG,EAAC,MAAM,IAAIT,CAAC,CAAC,+BAA+B,CAAC;IAAC,IAAG;MAAC,OAAO,MAAM,IAAI,CAACS,GAAG,CAACC,IAAI,CAACJ,CAAC,EAAC;QAACK,kBAAkB,EAAC,IAAI,CAACC,IAAI,CAACC,iBAAiB;QAACC,UAAU,EAAC,IAAI,CAACF,IAAI,CAACG,SAAS;QAACC,aAAa,EAAC,IAAI,CAACJ,IAAI,CAACK,YAAY;QAACC,QAAQ,EAAC,IAAI,CAACN,IAAI,CAACM;MAAQ,CAAC,CAAC;IAAA,CAAC,QAAMlB,CAAC,EAAC;MAAC,MAAME,CAAC,CAACF,CAAC,CAAC;IAAA;EAAC;EAACoB,WAAWA,CAAC;IAACP,iBAAiB,EAACb,CAAC;IAACe,SAAS,EAACb,CAAC;IAACe,YAAY,EAACb,CAAC;IAACc,QAAQ,EAACZ;EAAC,CAAC,EAAC;IAAC,IAAI,CAACM,IAAI,GAAC;MAACC,iBAAiB,EAACb,CAAC;MAACe,SAAS,EAACb,CAAC;MAACe,YAAY,EAACb,CAAC;MAACc,QAAQ,EAACZ;IAAC,CAAC;EAAA;AAAC;AAAC,SAAOC,CAAC,IAAIc,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}