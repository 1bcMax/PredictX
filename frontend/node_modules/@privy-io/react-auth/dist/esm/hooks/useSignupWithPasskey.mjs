import{useCallback as t}from"react";import{PrivyErrorCode as e}from"../errors.mjs";import{useCaptcha as r,CaptchaError as s}from"./captcha-context.mjs";import{usePrivyInternal as i}from"./internal-context.mjs";import"ofetch";import"react/jsx-runtime";import"./index.mjs";import"../utils/index.mjs";import"../connectors/get-legacy-injected-providers.mjs";import"../connectors/is-wallet-installed.mjs";import"../utils/eth/getPublicClient.mjs";import"viem";const o=o=>{let a=r(),{initSignupWithPasskey:n,signupWithPasskey:c,passkeyAuthState:m,setPasskeyAuthState:l}=i();return{signupWithPasskey:t((async()=>{try{let t;if(a.enabled&&"error"===a.status)throw new s(a.error,null,e.CAPTCHA_FAILURE);a.enabled&&"success"!==a.status&&(a.execute(),t=await a.waitForResult()),await n({captchaToken:t,withPrivyUi:!1});let{user:r,isNewUser:i,wasAlreadyAuthenticated:m,loginAccount:l}=await c();o?.onComplete?.({user:r,isNewUser:i,wasAlreadyAuthenticated:m,loginMethod:"passkey",loginAccount:l})}catch(t){throw l({status:"error",error:t}),o?.onError?.(t.privyErrorCode||e.UNKNOWN_AUTH_ERROR),t}}),[c,a.status]),state:m}};export{o as useSignupWithPasskey};
